Index.PACKAGES = {"discount.hash" : [{"name" : "discount.hash.MinSplitter", "shortDescription" : "Split reads into superkmers by ranked motifs (minimizers).", "members_case class" : [{"label" : "humanReadable", "tail" : "(id: BucketId): String", "member" : "discount.hash.MinSplitter.humanReadable", "link" : "discount\/hash\/MinSplitter.html#humanReadable(id:discount.hash.BucketId):String", "kind" : "def"}, {"label" : "humanReadable", "tail" : "(hash: Motif): String", "member" : "discount.hash.MinSplitter.humanReadable", "link" : "discount\/hash\/MinSplitter.html#humanReadable(hash:discount.hash.Motif):String", "kind" : "def"}, {"label" : "compact", "tail" : "(hash: Motif): BucketId", "member" : "discount.hash.MinSplitter.compact", "link" : "discount\/hash\/MinSplitter.html#compact(hash:discount.hash.Motif):discount.hash.BucketId", "kind" : "def"}, {"label" : "splitEncode", "tail" : "(read: NTSeq): Iterator[(Motif, ZeroNTBitArray)]", "member" : "discount.hash.MinSplitter.splitEncode", "link" : "discount\/hash\/MinSplitter.html#splitEncode(read:discount.NTSeq):Iterator[(discount.hash.Motif,discount.util.ZeroNTBitArray)]", "kind" : "def"}, {"label" : "split", "tail" : "(read: NTSeq): Iterator[(Motif, NTSeq)]", "member" : "discount.hash.MinSplitter.split", "link" : "discount\/hash\/MinSplitter.html#split(read:discount.NTSeq):Iterator[(discount.hash.Motif,discount.NTSeq)]", "kind" : "def"}, {"label" : "regionsInRead", "tail" : "(read: NTSeq): Iterator[(Motif, Int)]", "member" : "discount.hash.MinSplitter.regionsInRead", "link" : "discount\/hash\/MinSplitter.html#regionsInRead(read:discount.NTSeq):Iterator[(discount.hash.Motif,Int)]", "kind" : "def"}, {"label" : "slidingTopMotifs", "tail" : "(read: NTSeq): Iterator[Motif]", "member" : "discount.hash.MinSplitter.slidingTopMotifs", "link" : "discount\/hash\/MinSplitter.html#slidingTopMotifs(read:discount.NTSeq):Iterator[discount.hash.Motif]", "kind" : "def"}, {"label" : "scanner", "tail" : ": ShiftScanner", "member" : "discount.hash.MinSplitter.scanner", "link" : "discount\/hash\/MinSplitter.html#scanner:discount.hash.ShiftScanner", "kind" : "lazy val"}, {"member" : "discount.hash.MinSplitter#<init>", "error" : "unsupported entity"}, {"label" : "k", "tail" : ": Int", "member" : "discount.hash.MinSplitter.k", "link" : "discount\/hash\/MinSplitter.html#k:Int", "kind" : "val"}, {"label" : "space", "tail" : ": MotifSpace", "member" : "discount.hash.MinSplitter.space", "link" : "discount\/hash\/MinSplitter.html#space:discount.hash.MotifSpace", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "discount\/hash\/MinSplitter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "discount\/hash\/MinSplitter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "discount\/hash\/MinSplitter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "discount\/hash\/MinSplitter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "discount\/hash\/MinSplitter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "discount\/hash\/MinSplitter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "discount\/hash\/MinSplitter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/hash\/MinSplitter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/hash\/MinSplitter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/hash\/MinSplitter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "discount\/hash\/MinSplitter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "discount\/hash\/MinSplitter.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "discount\/hash\/MinSplitter.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "discount\/hash\/MinSplitter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "discount\/hash\/MinSplitter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "discount\/hash\/MinSplitter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "discount\/hash\/MinSplitter.html", "kind" : "case class"}, {"name" : "discount.hash.Motif", "shortDescription" : "", "object" : "discount\/hash\/Motif$.html", "members_object" : [{"label" : "Features", "tail" : "", "member" : "discount.hash.Motif.Features", "link" : "discount\/hash\/Motif$.html#FeaturesextendsProductwithSerializable", "kind" : "final case class"}, {"label" : "Empty", "tail" : ": Motif", "member" : "discount.hash.Motif.Empty", "link" : "discount\/hash\/Motif$.html#Empty:discount.hash.Motif", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "discount\/hash\/Motif$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "discount\/hash\/Motif$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "discount\/hash\/Motif$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "discount\/hash\/Motif$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "discount\/hash\/Motif$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "discount\/hash\/Motif$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "discount\/hash\/Motif$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/hash\/Motif$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/hash\/Motif$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/hash\/Motif$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "discount\/hash\/Motif$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "discount\/hash\/Motif$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "discount\/hash\/Motif$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "discount\/hash\/Motif$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "discount\/hash\/Motif$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "discount\/hash\/Motif$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "discount\/hash\/Motif$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "discount\/hash\/Motif$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "discount\/hash\/Motif$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "motif", "tail" : "(): Motif", "member" : "discount.hash.Motif.motif", "link" : "discount\/hash\/Motif.html#motif:discount.hash.Motif", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "discount.hash.Motif.toString", "link" : "discount\/hash\/Motif.html#toString():String", "kind" : "def"}, {"label" : "pattern", "tail" : "(): NTSeq", "member" : "discount.hash.Motif.pattern", "link" : "discount\/hash\/Motif.html#pattern:discount.NTSeq", "kind" : "def"}, {"member" : "discount.hash.Motif#<init>", "error" : "unsupported entity"}, {"label" : "features", "tail" : ": Features", "member" : "discount.hash.Motif.features", "link" : "discount\/hash\/Motif.html#features:discount.hash.Motif.Features", "kind" : "val"}, {"label" : "pos", "tail" : ": Int", "member" : "discount.hash.Motif.pos", "link" : "discount\/hash\/Motif.html#pos:Int", "kind" : "val"}, {"label" : "dropUntilPosition", "tail" : "(pos: Int): Unit", "member" : "discount.hash.PosRankWindow.MotifContainer.dropUntilPosition", "link" : "discount\/hash\/Motif.html#dropUntilPosition(pos:Int):Unit", "kind" : "final def"}, {"label" : "rank", "tail" : ": Int", "member" : "discount.hash.PosRankWindow.MotifContainer.rank", "link" : "discount\/hash\/Motif.html#rank:Int", "kind" : "lazy val"}, {"label" : "linkPos", "tail" : "(before: PositionNode, after: PositionNode): Unit", "member" : "discount.hash.PosRankWindow.PositionNode.linkPos", "link" : "discount\/hash\/Motif.html#linkPos(before:discount.hash.PosRankWindow.PositionNode,after:discount.hash.PosRankWindow.PositionNode):Unit", "kind" : "def"}, {"label" : "remove", "tail" : "(): Unit", "member" : "discount.hash.PosRankWindow.PositionNode.remove", "link" : "discount\/hash\/Motif.html#remove():Unit", "kind" : "def"}, {"label" : "nextPos", "tail" : ": PositionNode", "member" : "discount.hash.PosRankWindow.PositionNode.nextPos", "link" : "discount\/hash\/Motif.html#nextPos:discount.hash.PosRankWindow.PositionNode", "kind" : "val"}, {"label" : "prevPos", "tail" : ": PositionNode", "member" : "discount.hash.PosRankWindow.PositionNode.prevPos", "link" : "discount\/hash\/Motif.html#prevPos:discount.hash.PosRankWindow.PositionNode", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "discount\/hash\/Motif.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "discount\/hash\/Motif.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "discount\/hash\/Motif.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "discount\/hash\/Motif.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "discount\/hash\/Motif.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "discount\/hash\/Motif.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "discount\/hash\/Motif.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/hash\/Motif.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/hash\/Motif.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/hash\/Motif.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "discount\/hash\/Motif.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "discount\/hash\/Motif.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "discount\/hash\/Motif.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "discount\/hash\/Motif.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "discount\/hash\/Motif.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "discount\/hash\/Motif.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "discount\/hash\/Motif.html", "kind" : "object"}, {"name" : "discount.hash.MotifCounter", "shortDescription" : "", "object" : "discount\/hash\/MotifCounter$.html", "members_object" : [{"label" : "toSpaceByFrequency", "tail" : "(counts: Array[(String, Int)]): MotifSpace", "member" : "discount.hash.MotifCounter.toSpaceByFrequency", "link" : "discount\/hash\/MotifCounter$.html#toSpaceByFrequency(counts:Array[(String,Int)]):discount.hash.MotifSpace", "kind" : "def"}, {"label" : "apply", "tail" : "(n: Int): MotifCounter", "member" : "discount.hash.MotifCounter.apply", "link" : "discount\/hash\/MotifCounter$.html#apply(n:Int):discount.hash.MotifCounter", "kind" : "def"}, {"label" : "apply", "tail" : "(space: MotifSpace): MotifCounter", "member" : "discount.hash.MotifCounter.apply", "link" : "discount\/hash\/MotifCounter$.html#apply(space:discount.hash.MotifSpace):discount.hash.MotifCounter", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "discount\/hash\/MotifCounter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "discount\/hash\/MotifCounter$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "discount\/hash\/MotifCounter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "discount\/hash\/MotifCounter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "discount\/hash\/MotifCounter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "discount\/hash\/MotifCounter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "discount\/hash\/MotifCounter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/hash\/MotifCounter$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/hash\/MotifCounter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/hash\/MotifCounter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "discount\/hash\/MotifCounter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "discount\/hash\/MotifCounter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "discount\/hash\/MotifCounter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "discount\/hash\/MotifCounter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "discount\/hash\/MotifCounter$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "discount\/hash\/MotifCounter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "discount\/hash\/MotifCounter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "discount\/hash\/MotifCounter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "discount\/hash\/MotifCounter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "toSpaceByFrequency", "tail" : "(template: MotifSpace): MotifSpace", "member" : "discount.hash.MotifCounter.toSpaceByFrequency", "link" : "discount\/hash\/MotifCounter.html#toSpaceByFrequency(template:discount.hash.MotifSpace):discount.hash.MotifSpace", "kind" : "def"}, {"label" : "print", "tail" : "(space: MotifSpace, heading: String): Unit", "member" : "discount.hash.MotifCounter.print", "link" : "discount\/hash\/MotifCounter.html#print(space:discount.hash.MotifSpace,heading:String):Unit", "kind" : "def"}, {"label" : "sum", "tail" : "(): Long", "member" : "discount.hash.MotifCounter.sum", "link" : "discount\/hash\/MotifCounter.html#sum:Long", "kind" : "def"}, {"label" : "+", "tail" : "(other: MotifCounter): MotifCounter", "member" : "discount.hash.MotifCounter.+", "link" : "discount\/hash\/MotifCounter.html#+(other:discount.hash.MotifCounter):discount.hash.MotifCounter", "kind" : "def"}, {"label" : "addAllFrom", "tail" : "(other: MotifCounter): Unit", "member" : "discount.hash.MotifCounter.addAllFrom", "link" : "discount\/hash\/MotifCounter.html#addAllFrom(other:discount.hash.MotifCounter):Unit", "kind" : "def"}, {"label" : "increment", "tail" : "(motif: Motif): Unit", "member" : "discount.hash.MotifCounter.increment", "link" : "discount\/hash\/MotifCounter.html#increment(motif:discount.hash.Motif):Unit", "kind" : "def"}, {"label" : "motifsWithCounts", "tail" : "(space: MotifSpace): Array[(NTSeq, Int)]", "member" : "discount.hash.MotifCounter.motifsWithCounts", "link" : "discount\/hash\/MotifCounter.html#motifsWithCounts(space:discount.hash.MotifSpace):Array[(discount.NTSeq,Int)]", "kind" : "def"}, {"label" : "numMotifs", "tail" : "(): Int", "member" : "discount.hash.MotifCounter.numMotifs", "link" : "discount\/hash\/MotifCounter.html#numMotifs:Int", "kind" : "def"}, {"member" : "discount.hash.MotifCounter#<init>", "error" : "unsupported entity"}, {"label" : "counter", "tail" : ": Array[Int]", "member" : "discount.hash.MotifCounter.counter", "link" : "discount\/hash\/MotifCounter.html#counter:Array[Int]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "discount\/hash\/MotifCounter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "discount\/hash\/MotifCounter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "discount\/hash\/MotifCounter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "discount\/hash\/MotifCounter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "discount\/hash\/MotifCounter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "discount\/hash\/MotifCounter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "discount\/hash\/MotifCounter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/hash\/MotifCounter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/hash\/MotifCounter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/hash\/MotifCounter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "discount\/hash\/MotifCounter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "discount\/hash\/MotifCounter.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "discount\/hash\/MotifCounter.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "discount\/hash\/MotifCounter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "discount\/hash\/MotifCounter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "discount\/hash\/MotifCounter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "discount\/hash\/MotifCounter.html", "kind" : "object"}, {"name" : "discount.hash.MotifSpace", "shortDescription" : "", "object" : "discount\/hash\/MotifSpace$.html", "members_object" : [{"label" : "fromTemplateWithValidSet", "tail" : "(template: MotifSpace, validMers: Iterable[NTSeq]): MotifSpace", "member" : "discount.hash.MotifSpace.fromTemplateWithValidSet", "link" : "discount\/hash\/MotifSpace$.html#fromTemplateWithValidSet(template:discount.hash.MotifSpace,validMers:Iterable[discount.NTSeq]):discount.hash.MotifSpace", "kind" : "def"}, {"label" : "using", "tail" : "(mers: Seq[String]): MotifSpace", "member" : "discount.hash.MotifSpace.using", "link" : "discount\/hash\/MotifSpace$.html#using(mers:Seq[String]):discount.hash.MotifSpace", "kind" : "def"}, {"label" : "ofLength", "tail" : "(w: Int, rna: Boolean): MotifSpace", "member" : "discount.hash.MotifSpace.ofLength", "link" : "discount\/hash\/MotifSpace$.html#ofLength(w:Int,rna:Boolean):discount.hash.MotifSpace", "kind" : "def"}, {"label" : "motifsOfLength", "tail" : "(length: Int, rna: Boolean): Seq[String]", "member" : "discount.hash.MotifSpace.motifsOfLength", "link" : "discount\/hash\/MotifSpace$.html#motifsOfLength(length:Int,rna:Boolean):Seq[String]", "kind" : "def"}, {"label" : "all1mersRNA", "tail" : ": Seq[String]", "member" : "discount.hash.MotifSpace.all1mersRNA", "link" : "discount\/hash\/MotifSpace$.html#all1mersRNA:Seq[String]", "kind" : "val"}, {"label" : "all1mersDNA", "tail" : ": Seq[String]", "member" : "discount.hash.MotifSpace.all1mersDNA", "link" : "discount\/hash\/MotifSpace$.html#all1mersDNA:Seq[String]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "discount\/hash\/MotifSpace$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "discount\/hash\/MotifSpace$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "discount\/hash\/MotifSpace$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "discount\/hash\/MotifSpace$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "discount\/hash\/MotifSpace$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "discount\/hash\/MotifSpace$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "discount\/hash\/MotifSpace$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/hash\/MotifSpace$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/hash\/MotifSpace$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/hash\/MotifSpace$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "discount\/hash\/MotifSpace$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "discount\/hash\/MotifSpace$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "discount\/hash\/MotifSpace$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "discount\/hash\/MotifSpace$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "discount\/hash\/MotifSpace$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "discount\/hash\/MotifSpace$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "discount\/hash\/MotifSpace$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "discount\/hash\/MotifSpace$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "discount\/hash\/MotifSpace$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "priorityOf", "tail" : "(mk: NTSeq): Int", "member" : "discount.hash.MotifSpace.priorityOf", "link" : "discount\/hash\/MotifSpace.html#priorityOf(mk:discount.NTSeq):Int", "kind" : "def"}, {"label" : "priorityLookup", "tail" : ": Array[Int]", "member" : "discount.hash.MotifSpace.priorityLookup", "link" : "discount\/hash\/MotifSpace.html#priorityLookup:Array[Int]", "kind" : "val"}, {"label" : "encodedMotif", "tail" : "(m: NTSeq): Int", "member" : "discount.hash.MotifSpace.encodedMotif", "link" : "discount\/hash\/MotifSpace.html#encodedMotif(m:discount.NTSeq):Int", "kind" : "def"}, {"label" : "create", "tail" : "(pattern: NTSeq, pos: Int): Motif", "member" : "discount.hash.MotifSpace.create", "link" : "discount\/hash\/MotifSpace.html#create(pattern:discount.NTSeq,pos:Int):discount.hash.Motif", "kind" : "def"}, {"label" : "scanner", "tail" : ": ShiftScanner", "member" : "discount.hash.MotifSpace.scanner", "link" : "discount\/hash\/MotifSpace.html#scanner:discount.hash.ShiftScanner", "kind" : "lazy val"}, {"label" : "width", "tail" : ": Int", "member" : "discount.hash.MotifSpace.width", "link" : "discount\/hash\/MotifSpace.html#width:Int", "kind" : "val"}, {"member" : "discount.hash.MotifSpace#<init>", "error" : "unsupported entity"}, {"label" : "byPriority", "tail" : ": Array[NTSeq]", "member" : "discount.hash.MotifSpace.byPriority", "link" : "discount\/hash\/MotifSpace.html#byPriority:Array[discount.NTSeq]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "discount\/hash\/MotifSpace.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "discount\/hash\/MotifSpace.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "discount\/hash\/MotifSpace.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "discount\/hash\/MotifSpace.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "discount\/hash\/MotifSpace.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "discount\/hash\/MotifSpace.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "discount\/hash\/MotifSpace.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/hash\/MotifSpace.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/hash\/MotifSpace.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/hash\/MotifSpace.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "discount\/hash\/MotifSpace.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "discount\/hash\/MotifSpace.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "discount\/hash\/MotifSpace.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "discount\/hash\/MotifSpace.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "discount\/hash\/MotifSpace.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "discount\/hash\/MotifSpace.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "discount\/hash\/MotifSpace.html", "kind" : "object"}, {"name" : "discount.hash.Orderings", "shortDescription" : "Routines for creating MotifSpaces corresponding to various minimizer orderings.", "object" : "discount\/hash\/Orderings$.html", "members_object" : [{"label" : "randomOrdering", "tail" : "(template: MotifSpace): MotifSpace", "member" : "discount.hash.Orderings.randomOrdering", "link" : "discount\/hash\/Orderings$.html#randomOrdering(template:discount.hash.MotifSpace):discount.hash.MotifSpace", "kind" : "def"}, {"label" : "signatureHighPriority", "tail" : "(motif: String): Boolean", "member" : "discount.hash.Orderings.signatureHighPriority", "link" : "discount\/hash\/Orderings$.html#signatureHighPriority(motif:String):Boolean", "kind" : "def"}, {"label" : "minimizerSignatureSpace", "tail" : "(template: MotifSpace): MotifSpace", "member" : "discount.hash.Orderings.minimizerSignatureSpace", "link" : "discount\/hash\/Orderings$.html#minimizerSignatureSpace(template:discount.hash.MotifSpace):discount.hash.MotifSpace", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "discount\/hash\/Orderings$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "discount\/hash\/Orderings$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "discount\/hash\/Orderings$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "discount\/hash\/Orderings$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "discount\/hash\/Orderings$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "discount\/hash\/Orderings$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "discount\/hash\/Orderings$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/hash\/Orderings$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/hash\/Orderings$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/hash\/Orderings$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "discount\/hash\/Orderings$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "discount\/hash\/Orderings$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "discount\/hash\/Orderings$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "discount\/hash\/Orderings$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "discount\/hash\/Orderings$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "discount\/hash\/Orderings$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "discount\/hash\/Orderings$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "discount\/hash\/Orderings$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "discount\/hash\/Orderings$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "discount.hash.PosRankWindow", "shortDescription" : "", "object" : "discount\/hash\/PosRankWindow$.html", "members_class" : [{"label" : "WithFilter", "tail" : "", "member" : "scala.collection.TraversableLike.WithFilter", "link" : "discount\/hash\/PosRankWindow.html#WithFilterextendsFilterMonadic[A,Repr]", "kind" : "class"}, {"label" : "top", "tail" : "(): Motif", "member" : "discount.hash.PosRankWindow.top", "link" : "discount\/hash\/PosRankWindow.html#top:discount.hash.Motif", "kind" : "def"}, {"label" : "moveWindowAndInsert", "tail" : "(pos: Int, insertRight: Motif): Unit", "member" : "discount.hash.PosRankWindow.moveWindowAndInsert", "link" : "discount\/hash\/PosRankWindow.html#moveWindowAndInsert(pos:Int,insertRight:discount.hash.Motif):Unit", "kind" : "def"}, {"label" : "dropUntilPosition", "tail" : "(pos: Int): Unit", "member" : "discount.hash.PosRankWindow.dropUntilPosition", "link" : "discount\/hash\/PosRankWindow.html#dropUntilPosition(pos:Int):Unit", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[Motif]", "member" : "discount.hash.PosRankWindow.iterator", "link" : "discount\/hash\/PosRankWindow.html#iterator:Iterator[discount.hash.Motif]", "kind" : "def"}, {"label" : "end", "tail" : ": End", "member" : "discount.hash.PosRankWindow.end", "link" : "discount\/hash\/PosRankWindow.html#end:discount.hash.PosRankWindow.End", "kind" : "val"}, {"member" : "discount.hash.PosRankWindow#<init>", "error" : "unsupported entity"}, {"label" : "seq", "tail" : "(): Iterable[Motif]", "member" : "scala.collection.Iterable.seq", "link" : "discount\/hash\/PosRankWindow.html#seq:Iterable[A]", "kind" : "def"}, {"label" : "companion", "tail" : "(): GenericCompanion[Iterable]", "member" : "scala.collection.Iterable.companion", "link" : "discount\/hash\/PosRankWindow.html#companion:scala.collection.generic.GenericCompanion[Iterable]", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): IterableView[Motif, Iterable[Motif]]", "member" : "scala.collection.IterableLike.view", "link" : "discount\/hash\/PosRankWindow.html#view(from:Int,until:Int):scala.collection.IterableView[A,Repr]", "kind" : "def"}, {"label" : "view", "tail" : "(): IterableView[Motif, Iterable[Motif]]", "member" : "scala.collection.IterableLike.view", "link" : "discount\/hash\/PosRankWindow.html#view:scala.collection.IterableView[A,Repr]", "kind" : "def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.collection.IterableLike.canEqual", "link" : "discount\/hash\/PosRankWindow.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[Motif]", "member" : "scala.collection.IterableLike.toStream", "link" : "discount\/hash\/PosRankWindow.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: GenIterable[B]): Boolean", "member" : "scala.collection.IterableLike.sameElements", "link" : "discount\/hash\/PosRankWindow.html#sameElements[B>:A](that:scala.collection.GenIterable[B]):Boolean", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(bf: CanBuildFrom[Iterable[Motif], (A1, Int), That]): That", "member" : "scala.collection.IterableLike.zipWithIndex", "link" : "discount\/hash\/PosRankWindow.html#zipWithIndex[A1>:A,That](implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,Int),That]):That", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: GenIterable[B], thisElem: A1, thatElem: B)(bf: CanBuildFrom[Iterable[Motif], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zipAll", "link" : "discount\/hash\/PosRankWindow.html#zipAll[B,A1>:A,That](that:scala.collection.GenIterable[B],thisElem:A1,thatElem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "zip", "tail" : "(that: GenIterable[B])(bf: CanBuildFrom[Iterable[Motif], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zip", "link" : "discount\/hash\/PosRankWindow.html#zip[A1>:A,B,That](that:scala.collection.GenIterable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.IterableLike.copyToArray", "link" : "discount\/hash\/PosRankWindow.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): Iterable[Motif]", "member" : "scala.collection.IterableLike.dropRight", "link" : "discount\/hash\/PosRankWindow.html#dropRight(n:Int):Repr", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): Iterable[Motif]", "member" : "scala.collection.IterableLike.takeRight", "link" : "discount\/hash\/PosRankWindow.html#takeRight(n:Int):Repr", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): Iterator[Iterable[Motif]]", "member" : "scala.collection.IterableLike.sliding", "link" : "discount\/hash\/PosRankWindow.html#sliding(size:Int,step:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): Iterator[Iterable[Motif]]", "member" : "scala.collection.IterableLike.sliding", "link" : "discount\/hash\/PosRankWindow.html#sliding(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): Iterator[Iterable[Motif]]", "member" : "scala.collection.IterableLike.grouped", "link" : "discount\/hash\/PosRankWindow.html#grouped(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (Motif) ⇒ Boolean): Iterable[Motif]", "member" : "scala.collection.IterableLike.takeWhile", "link" : "discount\/hash\/PosRankWindow.html#takeWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Iterable[Motif]", "member" : "scala.collection.IterableLike.drop", "link" : "discount\/hash\/PosRankWindow.html#drop(n:Int):Repr", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Iterable[Motif]", "member" : "scala.collection.IterableLike.take", "link" : "discount\/hash\/PosRankWindow.html#take(n:Int):Repr", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Iterable[Motif]", "member" : "scala.collection.IterableLike.slice", "link" : "discount\/hash\/PosRankWindow.html#slice(from:Int,until:Int):Repr", "kind" : "def"}, {"label" : "head", "tail" : "(): Motif", "member" : "scala.collection.IterableLike.head", "link" : "discount\/hash\/PosRankWindow.html#head:A", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[Motif]", "member" : "scala.collection.IterableLike.toIterator", "link" : "discount\/hash\/PosRankWindow.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[Motif]", "member" : "scala.collection.IterableLike.toIterable", "link" : "discount\/hash\/PosRankWindow.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (Motif, B) ⇒ B): B", "member" : "scala.collection.IterableLike.reduceRight", "link" : "discount\/hash\/PosRankWindow.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (Motif, B) ⇒ B): B", "member" : "scala.collection.IterableLike.foldRight", "link" : "discount\/hash\/PosRankWindow.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableLike.isEmpty", "link" : "discount\/hash\/PosRankWindow.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(p: (Motif) ⇒ Boolean): Option[Motif]", "member" : "scala.collection.IterableLike.find", "link" : "discount\/hash\/PosRankWindow.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (Motif) ⇒ Boolean): Boolean", "member" : "scala.collection.IterableLike.exists", "link" : "discount\/hash\/PosRankWindow.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (Motif) ⇒ Boolean): Boolean", "member" : "scala.collection.IterableLike.forall", "link" : "discount\/hash\/PosRankWindow.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Motif) ⇒ U): Unit", "member" : "scala.collection.IterableLike.foreach", "link" : "discount\/hash\/PosRankWindow.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "toCollection", "tail" : "(repr: Iterable[Motif]): Iterable[Motif]", "member" : "scala.collection.IterableLike.toCollection", "link" : "discount\/hash\/PosRankWindow.html#toCollection(repr:Repr):Iterable[A]", "kind" : "def"}, {"label" : "thisCollection", "tail" : "(): Iterable[Motif]", "member" : "scala.collection.IterableLike.thisCollection", "link" : "discount\/hash\/PosRankWindow.html#thisCollection:Iterable[A]", "kind" : "def"}, {"label" : "transpose", "tail" : "(asTraversable: (Motif) ⇒ GenTraversableOnce[B]): Iterable[Iterable[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.transpose", "link" : "discount\/hash\/PosRankWindow.html#transpose[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "flatten", "tail" : "(asTraversable: (Motif) ⇒ GenTraversableOnce[B]): Iterable[B]", "member" : "scala.collection.generic.GenericTraversableTemplate.flatten", "link" : "discount\/hash\/PosRankWindow.html#flatten[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (Motif) ⇒ (A1, A2, A3)): (Iterable[A1], Iterable[A2], Iterable[A3])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip3", "link" : "discount\/hash\/PosRankWindow.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (Motif) ⇒ (A1, A2)): (Iterable[A1], Iterable[A2])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip", "link" : "discount\/hash\/PosRankWindow.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "genericBuilder", "tail" : "(): Builder[B, Iterable[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.genericBuilder", "link" : "discount\/hash\/PosRankWindow.html#genericBuilder[B]:scala.collection.mutable.Builder[B,CC[B]]", "kind" : "def"}, {"label" : "newBuilder", "tail" : "(): Builder[Motif, Iterable[Motif]]", "member" : "scala.collection.generic.GenericTraversableTemplate.newBuilder", "link" : "discount\/hash\/PosRankWindow.html#newBuilder:scala.collection.mutable.Builder[A,CC[A]]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (Motif) ⇒ Boolean): FilterMonadic[Motif, Iterable[Motif]]", "member" : "scala.collection.TraversableLike.withFilter", "link" : "discount\/hash\/PosRankWindow.html#withFilter(p:A=>Boolean):scala.collection.generic.FilterMonadic[A,Repr]", "kind" : "def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.TraversableLike.stringPrefix", "link" : "discount\/hash\/PosRankWindow.html#stringPrefix:String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.TraversableLike.toString", "link" : "discount\/hash\/PosRankWindow.html#toString():String", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, Motif, Col[Motif]]): Col[Motif]", "member" : "scala.collection.TraversableLike.to", "link" : "discount\/hash\/PosRankWindow.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[Motif]", "member" : "scala.collection.TraversableLike.toTraversable", "link" : "discount\/hash\/PosRankWindow.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "inits", "tail" : "(): Iterator[Iterable[Motif]]", "member" : "scala.collection.TraversableLike.inits", "link" : "discount\/hash\/PosRankWindow.html#inits:Iterator[Repr]", "kind" : "def"}, {"label" : "tails", "tail" : "(): Iterator[Iterable[Motif]]", "member" : "scala.collection.TraversableLike.tails", "link" : "discount\/hash\/PosRankWindow.html#tails:Iterator[Repr]", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (Iterable[Motif], Iterable[Motif])", "member" : "scala.collection.TraversableLike.splitAt", "link" : "discount\/hash\/PosRankWindow.html#splitAt(n:Int):(Repr,Repr)", "kind" : "def"}, {"label" : "span", "tail" : "(p: (Motif) ⇒ Boolean): (Iterable[Motif], Iterable[Motif])", "member" : "scala.collection.TraversableLike.span", "link" : "discount\/hash\/PosRankWindow.html#span(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (Motif) ⇒ Boolean): Iterable[Motif]", "member" : "scala.collection.TraversableLike.dropWhile", "link" : "discount\/hash\/PosRankWindow.html#dropWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "init", "tail" : "(): Iterable[Motif]", "member" : "scala.collection.TraversableLike.init", "link" : "discount\/hash\/PosRankWindow.html#init:Repr", "kind" : "def"}, {"label" : "lastOption", "tail" : "(): Option[Motif]", "member" : "scala.collection.TraversableLike.lastOption", "link" : "discount\/hash\/PosRankWindow.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "last", "tail" : "(): Motif", "member" : "scala.collection.TraversableLike.last", "link" : "discount\/hash\/PosRankWindow.html#last:A", "kind" : "def"}, {"label" : "tail", "tail" : "(): Iterable[Motif]", "member" : "scala.collection.TraversableLike.tail", "link" : "discount\/hash\/PosRankWindow.html#tail:Repr", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[Motif]", "member" : "scala.collection.TraversableLike.headOption", "link" : "discount\/hash\/PosRankWindow.html#headOption:Option[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (Motif, B) ⇒ B)(bf: CanBuildFrom[Iterable[Motif], B, That]): That", "member" : "scala.collection.TraversableLike.scanRight", "link" : "discount\/hash\/PosRankWindow.html#scanRight[B,That](z:B)(op:(A,B)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, Motif) ⇒ B)(bf: CanBuildFrom[Iterable[Motif], B, That]): That", "member" : "scala.collection.TraversableLike.scanLeft", "link" : "discount\/hash\/PosRankWindow.html#scanLeft[B,That](z:B)(op:(B,A)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) ⇒ B)(cbf: CanBuildFrom[Iterable[Motif], B, That]): That", "member" : "scala.collection.TraversableLike.scan", "link" : "discount\/hash\/PosRankWindow.html#scan[B>:A,That](z:B)(op:(B,B)=>B)(implicitcbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (Motif) ⇒ K): Map[K, Iterable[Motif]]", "member" : "scala.collection.TraversableLike.groupBy", "link" : "discount\/hash\/PosRankWindow.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,Repr]", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (Motif) ⇒ Boolean): (Iterable[Motif], Iterable[Motif])", "member" : "scala.collection.TraversableLike.partition", "link" : "discount\/hash\/PosRankWindow.html#partition(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Motif, B])(bf: CanBuildFrom[Iterable[Motif], B, That]): That", "member" : "scala.collection.TraversableLike.collect", "link" : "discount\/hash\/PosRankWindow.html#collect[B,That](pf:PartialFunction[A,B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (Motif) ⇒ Boolean): Iterable[Motif]", "member" : "scala.collection.TraversableLike.filterNot", "link" : "discount\/hash\/PosRankWindow.html#filterNot(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (Motif) ⇒ Boolean): Iterable[Motif]", "member" : "scala.collection.TraversableLike.filter", "link" : "discount\/hash\/PosRankWindow.html#filter(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Motif) ⇒ GenTraversableOnce[B])(bf: CanBuildFrom[Iterable[Motif], B, That]): That", "member" : "scala.collection.TraversableLike.flatMap", "link" : "discount\/hash\/PosRankWindow.html#flatMap[B,That](f:A=>scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Motif) ⇒ B)(bf: CanBuildFrom[Iterable[Motif], B, That]): That", "member" : "scala.collection.TraversableLike.map", "link" : "discount\/hash\/PosRankWindow.html#map[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: Traversable[B])(bf: CanBuildFrom[Iterable[Motif], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "discount\/hash\/PosRankWindow.html#++:[B>:A,That](that:Traversable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: TraversableOnce[B])(bf: CanBuildFrom[Iterable[Motif], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "discount\/hash\/PosRankWindow.html#++:[B>:A,That](that:scala.collection.TraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++", "tail" : "(that: GenTraversableOnce[B])(bf: CanBuildFrom[Iterable[Motif], B, That]): That", "member" : "scala.collection.TraversableLike.++", "link" : "discount\/hash\/PosRankWindow.html#++[B>:A,That](that:scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.hasDefiniteSize", "link" : "discount\/hash\/PosRankWindow.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "parCombiner", "tail" : "(): Combiner[Motif, ParIterable[Motif]]", "member" : "scala.collection.TraversableLike.parCombiner", "link" : "discount\/hash\/PosRankWindow.html#parCombiner:scala.collection.parallel.Combiner[A,scala.collection.parallel.ParIterable[A]]", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.isTraversableAgain", "link" : "discount\/hash\/PosRankWindow.html#isTraversableAgain:Boolean", "kind" : "final def"}, {"label" : "repr", "tail" : "(): Iterable[Motif]", "member" : "scala.collection.TraversableLike.repr", "link" : "discount\/hash\/PosRankWindow.html#repr:Repr", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "scala.collection.TraversableLike.Self", "link" : "discount\/hash\/PosRankWindow.html#Self=Repr", "kind" : "type"}, {"label" : "par", "tail" : "(): ParIterable[Motif]", "member" : "scala.collection.Parallelizable.par", "link" : "discount\/hash\/PosRankWindow.html#par:ParRepr", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "discount\/hash\/PosRankWindow.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "discount\/hash\/PosRankWindow.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "discount\/hash\/PosRankWindow.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "discount\/hash\/PosRankWindow.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "discount\/hash\/PosRankWindow.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "discount\/hash\/PosRankWindow.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[Motif, (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "discount\/hash\/PosRankWindow.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[Motif]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "discount\/hash\/PosRankWindow.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "discount\/hash\/PosRankWindow.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.TraversableOnce.toBuffer", "link" : "discount\/hash\/PosRankWindow.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[Motif]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "discount\/hash\/PosRankWindow.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[Motif]", "member" : "scala.collection.TraversableOnce.toSeq", "link" : "discount\/hash\/PosRankWindow.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[Motif]", "member" : "scala.collection.TraversableOnce.toList", "link" : "discount\/hash\/PosRankWindow.html#toList:List[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.TraversableOnce.toArray", "link" : "discount\/hash\/PosRankWindow.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "discount\/hash\/PosRankWindow.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "discount\/hash\/PosRankWindow.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "discount\/hash\/PosRankWindow.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (Motif) ⇒ B)(cmp: Ordering[B]): Motif", "member" : "scala.collection.TraversableOnce.minBy", "link" : "discount\/hash\/PosRankWindow.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (Motif) ⇒ B)(cmp: Ordering[B]): Motif", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "discount\/hash\/PosRankWindow.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): Motif", "member" : "scala.collection.TraversableOnce.max", "link" : "discount\/hash\/PosRankWindow.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): Motif", "member" : "scala.collection.TraversableOnce.min", "link" : "discount\/hash\/PosRankWindow.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "discount\/hash\/PosRankWindow.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "discount\/hash\/PosRankWindow.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: ⇒ B)(seqop: (B, Motif) ⇒ B, combop: (B, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "discount\/hash\/PosRankWindow.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "discount\/hash\/PosRankWindow.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) ⇒ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "discount\/hash\/PosRankWindow.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "discount\/hash\/PosRankWindow.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (Motif, B) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "discount\/hash\/PosRankWindow.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, Motif) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "discount\/hash\/PosRankWindow.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, Motif) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceLeft", "link" : "discount\/hash\/PosRankWindow.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, Motif) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldLeft", "link" : "discount\/hash\/PosRankWindow.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (Motif, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "discount\/hash\/PosRankWindow.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, Motif) ⇒ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "discount\/hash\/PosRankWindow.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Motif, B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "discount\/hash\/PosRankWindow.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (Motif) ⇒ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "discount\/hash\/PosRankWindow.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "discount\/hash\/PosRankWindow.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.TraversableOnce.size", "link" : "discount\/hash\/PosRankWindow.html#size:Int", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[Motif]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "discount\/hash\/PosRankWindow.html#reversed:List[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.GenTraversableOnce.sizeHintIfCheap", "link" : "discount\/hash\/PosRankWindow.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "linkPos", "tail" : "(before: PositionNode, after: PositionNode): Unit", "member" : "discount.hash.PosRankWindow.PositionNode.linkPos", "link" : "discount\/hash\/PosRankWindow.html#linkPos(before:discount.hash.PosRankWindow.PositionNode,after:discount.hash.PosRankWindow.PositionNode):Unit", "kind" : "def"}, {"label" : "remove", "tail" : "(): Unit", "member" : "discount.hash.PosRankWindow.PositionNode.remove", "link" : "discount\/hash\/PosRankWindow.html#remove():Unit", "kind" : "def"}, {"label" : "nextPos", "tail" : ": PositionNode", "member" : "discount.hash.PosRankWindow.PositionNode.nextPos", "link" : "discount\/hash\/PosRankWindow.html#nextPos:discount.hash.PosRankWindow.PositionNode", "kind" : "val"}, {"label" : "prevPos", "tail" : ": PositionNode", "member" : "discount.hash.PosRankWindow.PositionNode.prevPos", "link" : "discount\/hash\/PosRankWindow.html#prevPos:discount.hash.PosRankWindow.PositionNode", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "discount\/hash\/PosRankWindow.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "discount\/hash\/PosRankWindow.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "discount\/hash\/PosRankWindow.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "discount\/hash\/PosRankWindow.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "discount\/hash\/PosRankWindow.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "discount\/hash\/PosRankWindow.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "discount\/hash\/PosRankWindow.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/hash\/PosRankWindow.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/hash\/PosRankWindow.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/hash\/PosRankWindow.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "discount\/hash\/PosRankWindow.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "discount\/hash\/PosRankWindow.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "discount\/hash\/PosRankWindow.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "discount\/hash\/PosRankWindow.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "discount\/hash\/PosRankWindow.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "discount\/hash\/PosRankWindow.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "discount\/hash\/PosRankWindow.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "discount\/hash\/PosRankWindow.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "End", "tail" : "", "member" : "discount.hash.PosRankWindow.End", "link" : "discount\/hash\/PosRankWindow$.html#EndextendsPosRankWindow.PositionNode", "kind" : "final class"}, {"label" : "MotifContainer", "tail" : "", "member" : "discount.hash.PosRankWindow.MotifContainer", "link" : "discount\/hash\/PosRankWindow$.html#MotifContainerextendsPosRankWindow.PositionNode", "kind" : "trait"}, {"label" : "PositionNode", "tail" : "", "member" : "discount.hash.PosRankWindow.PositionNode", "link" : "discount\/hash\/PosRankWindow$.html#PositionNodeextendsSerializable", "kind" : "sealed trait"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "discount\/hash\/PosRankWindow$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "discount\/hash\/PosRankWindow$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "discount\/hash\/PosRankWindow$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "discount\/hash\/PosRankWindow$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "discount\/hash\/PosRankWindow$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "discount\/hash\/PosRankWindow$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "discount\/hash\/PosRankWindow$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/hash\/PosRankWindow$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/hash\/PosRankWindow$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/hash\/PosRankWindow$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "discount\/hash\/PosRankWindow$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "discount\/hash\/PosRankWindow$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "discount\/hash\/PosRankWindow$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "discount\/hash\/PosRankWindow$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "discount\/hash\/PosRankWindow$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "discount\/hash\/PosRankWindow$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "discount\/hash\/PosRankWindow$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "discount\/hash\/PosRankWindow$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "discount\/hash\/PosRankWindow$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "discount\/hash\/PosRankWindow.html", "kind" : "object"}, {"name" : "discount.hash.ReadSplitter", "members_trait" : [{"label" : "humanReadable", "tail" : "(id: BucketId): String", "member" : "discount.hash.ReadSplitter.humanReadable", "link" : "discount\/hash\/ReadSplitter.html#humanReadable(id:discount.hash.BucketId):String", "kind" : "def"}, {"label" : "humanReadable", "tail" : "(hash: H): String", "member" : "discount.hash.ReadSplitter.humanReadable", "link" : "discount\/hash\/ReadSplitter.html#humanReadable(hash:H):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "discount\/hash\/ReadSplitter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "discount\/hash\/ReadSplitter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "discount\/hash\/ReadSplitter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "discount\/hash\/ReadSplitter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "discount\/hash\/ReadSplitter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "discount\/hash\/ReadSplitter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "discount\/hash\/ReadSplitter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/hash\/ReadSplitter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/hash\/ReadSplitter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/hash\/ReadSplitter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "discount\/hash\/ReadSplitter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "discount\/hash\/ReadSplitter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "discount\/hash\/ReadSplitter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "discount\/hash\/ReadSplitter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "discount\/hash\/ReadSplitter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "discount\/hash\/ReadSplitter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "discount\/hash\/ReadSplitter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "discount\/hash\/ReadSplitter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "discount\/hash\/ReadSplitter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "compact", "tail" : "(hash: H): BucketId", "member" : "discount.hash.ReadSplitter.compact", "link" : "discount\/hash\/ReadSplitter.html#compact(hash:H):discount.hash.BucketId", "kind" : "abstract def"}, {"label" : "split", "tail" : "(read: NTSeq): Iterator[(H, NTSeq)]", "member" : "discount.hash.ReadSplitter.split", "link" : "discount\/hash\/ReadSplitter.html#split(read:discount.NTSeq):Iterator[(H,discount.NTSeq)]", "kind" : "abstract def"}, {"label" : "k", "tail" : "(): Int", "member" : "discount.hash.ReadSplitter.k", "link" : "discount\/hash\/ReadSplitter.html#k:Int", "kind" : "abstract def"}], "shortDescription" : "A scheme for splitting a nucleotide sequence into superkmers which can be bucketed by hash values.", "trait" : "discount\/hash\/ReadSplitter.html", "kind" : "trait"}, {"name" : "discount.hash.ShiftScanner", "shortDescription" : "Bit-shift scanner for fixed width motifs.", "members_class" : [{"label" : "countMotifs", "tail" : "(counter: MotifCounter, reads: TraversableOnce[NTSeq]): Unit", "member" : "discount.hash.ShiftScanner.countMotifs", "link" : "discount\/hash\/ShiftScanner.html#countMotifs(counter:discount.hash.MotifCounter,reads:TraversableOnce[discount.NTSeq]):Unit", "kind" : "def"}, {"label" : "countMotifs", "tail" : "(counter: MotifCounter, read: NTSeq): Unit", "member" : "discount.hash.ShiftScanner.countMotifs", "link" : "discount\/hash\/ShiftScanner.html#countMotifs(counter:discount.hash.MotifCounter,read:discount.NTSeq):Unit", "kind" : "def"}, {"label" : "allMatches", "tail" : "(data: NTSeq): Iterator[Motif]", "member" : "discount.hash.ShiftScanner.allMatches", "link" : "discount\/hash\/ShiftScanner.html#allMatches(data:discount.NTSeq):Iterator[discount.hash.Motif]", "kind" : "def"}, {"label" : "featuresByPriority", "tail" : ": Array[Features]", "member" : "discount.hash.ShiftScanner.featuresByPriority", "link" : "discount\/hash\/ShiftScanner.html#featuresByPriority:Array[discount.hash.Motif.Features]", "kind" : "val"}, {"label" : "mask", "tail" : ": Int", "member" : "discount.hash.ShiftScanner.mask", "link" : "discount\/hash\/ShiftScanner.html#mask:Int", "kind" : "val"}, {"label" : "width", "tail" : ": Int", "member" : "discount.hash.ShiftScanner.width", "link" : "discount\/hash\/ShiftScanner.html#width:Int", "kind" : "val"}, {"member" : "discount.hash.ShiftScanner#<init>", "error" : "unsupported entity"}, {"label" : "space", "tail" : ": MotifSpace", "member" : "discount.hash.ShiftScanner.space", "link" : "discount\/hash\/ShiftScanner.html#space:discount.hash.MotifSpace", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "discount\/hash\/ShiftScanner.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "discount\/hash\/ShiftScanner.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "discount\/hash\/ShiftScanner.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "discount\/hash\/ShiftScanner.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "discount\/hash\/ShiftScanner.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "discount\/hash\/ShiftScanner.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "discount\/hash\/ShiftScanner.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/hash\/ShiftScanner.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/hash\/ShiftScanner.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/hash\/ShiftScanner.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "discount\/hash\/ShiftScanner.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "discount\/hash\/ShiftScanner.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "discount\/hash\/ShiftScanner.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "discount\/hash\/ShiftScanner.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "discount\/hash\/ShiftScanner.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "discount\/hash\/ShiftScanner.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "discount\/hash\/ShiftScanner.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "discount\/hash\/ShiftScanner.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "discount\/hash\/ShiftScanner.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "discount\/hash\/ShiftScanner.html", "kind" : "class"}], "discount.util" : [{"name" : "discount.util.BitRepresentation", "shortDescription" : "Helper functions for working with a low level bit representation of nucleotide sequences.", "object" : "discount\/util\/BitRepresentation$.html", "members_object" : [{"label" : "bytesToString", "tail" : "(bytes: Array[Byte], builder: StringBuilder, offset: Int, size: Int): NTSeq", "member" : "discount.util.BitRepresentation.bytesToString", "link" : "discount\/util\/BitRepresentation$.html#bytesToString(bytes:Array[Byte],builder:StringBuilder,offset:Int,size:Int):discount.NTSeq", "kind" : "def"}, {"label" : "stringToBytes", "tail" : "(bps: NTSeq): Array[Byte]", "member" : "discount.util.BitRepresentation.stringToBytes", "link" : "discount\/util\/BitRepresentation$.html#stringToBytes(bps:discount.NTSeq):Array[Byte]", "kind" : "def"}, {"label" : "quadToByte", "tail" : "(quad: String, offset: Int): Byte", "member" : "discount.util.BitRepresentation.quadToByte", "link" : "discount\/util\/BitRepresentation$.html#quadToByte(quad:String,offset:Int):Byte", "kind" : "def"}, {"label" : "twobitToChar", "tail" : "(byte: Byte): Char", "member" : "discount.util.BitRepresentation.twobitToChar", "link" : "discount\/util\/BitRepresentation$.html#twobitToChar(byte:Byte):Char", "kind" : "def"}, {"label" : "charToTwobit", "tail" : "(char: Char): Byte", "member" : "discount.util.BitRepresentation.charToTwobit", "link" : "discount\/util\/BitRepresentation$.html#charToTwobit(char:Char):Byte", "kind" : "def"}, {"label" : "byteToQuad", "tail" : "(byte: Byte): NTSeq", "member" : "discount.util.BitRepresentation.byteToQuad", "link" : "discount\/util\/BitRepresentation$.html#byteToQuad(byte:Byte):discount.NTSeq", "kind" : "def"}, {"label" : "byteToQuadLookup", "tail" : ": Array[NTSeq]", "member" : "discount.util.BitRepresentation.byteToQuadLookup", "link" : "discount\/util\/BitRepresentation$.html#byteToQuadLookup:Array[discount.NTSeq]", "kind" : "val"}, {"label" : "quadToByte", "tail" : "(quad: NTSeq): Byte", "member" : "discount.util.BitRepresentation.quadToByte", "link" : "discount\/util\/BitRepresentation$.html#quadToByte(quad:discount.NTSeq):Byte", "kind" : "def"}, {"label" : "complement", "tail" : "(byte: Byte): Byte", "member" : "discount.util.BitRepresentation.complement", "link" : "discount\/util\/BitRepresentation$.html#complement(byte:Byte):Byte", "kind" : "def"}, {"label" : "complementOne", "tail" : "(byte: Byte): Int", "member" : "discount.util.BitRepresentation.complementOne", "link" : "discount\/util\/BitRepresentation$.html#complementOne(byte:Byte):Int", "kind" : "def"}, {"label" : "twobits", "tail" : ": List[Byte]", "member" : "discount.util.BitRepresentation.twobits", "link" : "discount\/util\/BitRepresentation$.html#twobits:List[Byte]", "kind" : "val"}, {"label" : "U", "tail" : ": Byte", "member" : "discount.util.BitRepresentation.U", "link" : "discount\/util\/BitRepresentation$.html#U:Byte", "kind" : "val"}, {"label" : "T", "tail" : ": Byte", "member" : "discount.util.BitRepresentation.T", "link" : "discount\/util\/BitRepresentation$.html#T:Byte", "kind" : "val"}, {"label" : "G", "tail" : ": Byte", "member" : "discount.util.BitRepresentation.G", "link" : "discount\/util\/BitRepresentation$.html#G:Byte", "kind" : "val"}, {"label" : "C", "tail" : ": Byte", "member" : "discount.util.BitRepresentation.C", "link" : "discount\/util\/BitRepresentation$.html#C:Byte", "kind" : "val"}, {"label" : "A", "tail" : ": Byte", "member" : "discount.util.BitRepresentation.A", "link" : "discount\/util\/BitRepresentation$.html#A:Byte", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "discount\/util\/BitRepresentation$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "discount\/util\/BitRepresentation$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "discount\/util\/BitRepresentation$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "discount\/util\/BitRepresentation$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "discount\/util\/BitRepresentation$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "discount\/util\/BitRepresentation$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "discount\/util\/BitRepresentation$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/util\/BitRepresentation$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/util\/BitRepresentation$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/util\/BitRepresentation$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "discount\/util\/BitRepresentation$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "discount\/util\/BitRepresentation$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "discount\/util\/BitRepresentation$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "discount\/util\/BitRepresentation$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "discount\/util\/BitRepresentation$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "discount\/util\/BitRepresentation$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "discount\/util\/BitRepresentation$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "discount\/util\/BitRepresentation$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "discount\/util\/BitRepresentation$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "discount.util.DNAHelpers", "shortDescription" : "", "object" : "discount\/util\/DNAHelpers$.html", "members_object" : [{"label" : "withoutSuffix", "tail" : "(seq: String, k: Int): String", "member" : "discount.util.DNAHelpers.withoutSuffix", "link" : "discount\/util\/DNAHelpers$.html#withoutSuffix(seq:String,k:Int):String", "kind" : "def"}, {"label" : "withoutPrefix", "tail" : "(seq: String, k: Int): String", "member" : "discount.util.DNAHelpers.withoutPrefix", "link" : "discount\/util\/DNAHelpers$.html#withoutPrefix(seq:String,k:Int):String", "kind" : "def"}, {"label" : "kmerSuffix", "tail" : "(seq: StringBuilder, k: Int): String", "member" : "discount.util.DNAHelpers.kmerSuffix", "link" : "discount\/util\/DNAHelpers$.html#kmerSuffix(seq:StringBuilder,k:Int):String", "kind" : "def"}, {"label" : "kmerSuffix", "tail" : "(seq: String, k: Int): String", "member" : "discount.util.DNAHelpers.kmerSuffix", "link" : "discount\/util\/DNAHelpers$.html#kmerSuffix(seq:String,k:Int):String", "kind" : "def"}, {"label" : "kmerPrefix", "tail" : "(seq: StringBuilder, k: Int): String", "member" : "discount.util.DNAHelpers.kmerPrefix", "link" : "discount\/util\/DNAHelpers$.html#kmerPrefix(seq:StringBuilder,k:Int):String", "kind" : "def"}, {"label" : "kmerPrefix", "tail" : "(seq: String, k: Int): String", "member" : "discount.util.DNAHelpers.kmerPrefix", "link" : "discount\/util\/DNAHelpers$.html#kmerPrefix(seq:String,k:Int):String", "kind" : "def"}, {"label" : "reverseComplement", "tail" : "(data: String): String", "member" : "discount.util.DNAHelpers.reverseComplement", "link" : "discount\/util\/DNAHelpers$.html#reverseComplement(data:String):String", "kind" : "def"}, {"label" : "complement", "tail" : "(data: String): String", "member" : "discount.util.DNAHelpers.complement", "link" : "discount\/util\/DNAHelpers$.html#complement(data:String):String", "kind" : "def"}, {"label" : "charComplement", "tail" : "(bp: Char): Char", "member" : "discount.util.DNAHelpers.charComplement", "link" : "discount\/util\/DNAHelpers$.html#charComplement(bp:Char):Char", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "discount\/util\/DNAHelpers$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "discount\/util\/DNAHelpers$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "discount\/util\/DNAHelpers$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "discount\/util\/DNAHelpers$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "discount\/util\/DNAHelpers$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "discount\/util\/DNAHelpers$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "discount\/util\/DNAHelpers$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/util\/DNAHelpers$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/util\/DNAHelpers$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/util\/DNAHelpers$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "discount\/util\/DNAHelpers$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "discount\/util\/DNAHelpers$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "discount\/util\/DNAHelpers$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "discount\/util\/DNAHelpers$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "discount\/util\/DNAHelpers$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "discount\/util\/DNAHelpers$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "discount\/util\/DNAHelpers$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "discount\/util\/DNAHelpers$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "discount\/util\/DNAHelpers$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "discount.util.InvalidNucleotideException", "shortDescription" : "Thrown when we encounter a letter in the sequence input that we do not expect to see", "members_class" : [{"member" : "discount.util.InvalidNucleotideException#<init>", "error" : "unsupported entity"}, {"label" : "invalidChar", "tail" : ": Char", "member" : "discount.util.InvalidNucleotideException.invalidChar", "link" : "discount\/util\/InvalidNucleotideException.html#invalidChar:Char", "kind" : "val"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "discount\/util\/InvalidNucleotideException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "discount\/util\/InvalidNucleotideException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "discount\/util\/InvalidNucleotideException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "discount\/util\/InvalidNucleotideException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "discount\/util\/InvalidNucleotideException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "discount\/util\/InvalidNucleotideException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "discount\/util\/InvalidNucleotideException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "discount\/util\/InvalidNucleotideException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "discount\/util\/InvalidNucleotideException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "discount\/util\/InvalidNucleotideException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "discount\/util\/InvalidNucleotideException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "discount\/util\/InvalidNucleotideException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "discount\/util\/InvalidNucleotideException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "discount\/util\/InvalidNucleotideException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "discount\/util\/InvalidNucleotideException.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "discount\/util\/InvalidNucleotideException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "discount\/util\/InvalidNucleotideException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "discount\/util\/InvalidNucleotideException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "discount\/util\/InvalidNucleotideException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "discount\/util\/InvalidNucleotideException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/util\/InvalidNucleotideException.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/util\/InvalidNucleotideException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/util\/InvalidNucleotideException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "discount\/util\/InvalidNucleotideException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "discount\/util\/InvalidNucleotideException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "discount\/util\/InvalidNucleotideException.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "discount\/util\/InvalidNucleotideException.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "discount\/util\/InvalidNucleotideException.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "discount\/util\/InvalidNucleotideException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "discount\/util\/InvalidNucleotideException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "discount\/util\/InvalidNucleotideException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "discount\/util\/InvalidNucleotideException.html", "kind" : "class"}, {"name" : "discount.util.KmerTable", "shortDescription" : "", "object" : "discount\/util\/KmerTable$.html", "members_class" : [{"label" : "WithFilter", "tail" : "", "member" : "scala.collection.TraversableLike.WithFilter", "link" : "discount\/util\/KmerTable.html#WithFilterextendsFilterMonadic[A,Repr]", "kind" : "class"}, {"label" : "iterator", "tail" : "(): Iterator[Array[Long]]", "member" : "discount.util.KmerTable.iterator", "link" : "discount\/util\/KmerTable.html#iterator:Iterator[Array[Long]]", "kind" : "def"}, {"label" : "countedKmers", "tail" : "(): Iterator[(Array[Long], Abundance)]", "member" : "discount.util.KmerTable.countedKmers", "link" : "discount\/util\/KmerTable.html#countedKmers:Iterator[(Array[Long],discount.Abundance)]", "kind" : "def"}, {"label" : "size", "tail" : ": Int", "member" : "discount.util.KmerTable.size", "link" : "discount\/util\/KmerTable.html#size:Int", "kind" : "val"}, {"member" : "discount.util.KmerTable#<init>", "error" : "unsupported entity"}, {"label" : "seq", "tail" : "(): Iterable[Array[Long]]", "member" : "scala.collection.Iterable.seq", "link" : "discount\/util\/KmerTable.html#seq:Iterable[A]", "kind" : "def"}, {"label" : "companion", "tail" : "(): GenericCompanion[Iterable]", "member" : "scala.collection.Iterable.companion", "link" : "discount\/util\/KmerTable.html#companion:scala.collection.generic.GenericCompanion[Iterable]", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): IterableView[Array[Long], Iterable[Array[Long]]]", "member" : "scala.collection.IterableLike.view", "link" : "discount\/util\/KmerTable.html#view(from:Int,until:Int):scala.collection.IterableView[A,Repr]", "kind" : "def"}, {"label" : "view", "tail" : "(): IterableView[Array[Long], Iterable[Array[Long]]]", "member" : "scala.collection.IterableLike.view", "link" : "discount\/util\/KmerTable.html#view:scala.collection.IterableView[A,Repr]", "kind" : "def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.collection.IterableLike.canEqual", "link" : "discount\/util\/KmerTable.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[Array[Long]]", "member" : "scala.collection.IterableLike.toStream", "link" : "discount\/util\/KmerTable.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: GenIterable[B]): Boolean", "member" : "scala.collection.IterableLike.sameElements", "link" : "discount\/util\/KmerTable.html#sameElements[B>:A](that:scala.collection.GenIterable[B]):Boolean", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(bf: CanBuildFrom[Iterable[Array[Long]], (A1, Int), That]): That", "member" : "scala.collection.IterableLike.zipWithIndex", "link" : "discount\/util\/KmerTable.html#zipWithIndex[A1>:A,That](implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,Int),That]):That", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: GenIterable[B], thisElem: A1, thatElem: B)(bf: CanBuildFrom[Iterable[Array[Long]], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zipAll", "link" : "discount\/util\/KmerTable.html#zipAll[B,A1>:A,That](that:scala.collection.GenIterable[B],thisElem:A1,thatElem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "zip", "tail" : "(that: GenIterable[B])(bf: CanBuildFrom[Iterable[Array[Long]], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zip", "link" : "discount\/util\/KmerTable.html#zip[A1>:A,B,That](that:scala.collection.GenIterable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.IterableLike.copyToArray", "link" : "discount\/util\/KmerTable.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): Iterable[Array[Long]]", "member" : "scala.collection.IterableLike.dropRight", "link" : "discount\/util\/KmerTable.html#dropRight(n:Int):Repr", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): Iterable[Array[Long]]", "member" : "scala.collection.IterableLike.takeRight", "link" : "discount\/util\/KmerTable.html#takeRight(n:Int):Repr", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): Iterator[Iterable[Array[Long]]]", "member" : "scala.collection.IterableLike.sliding", "link" : "discount\/util\/KmerTable.html#sliding(size:Int,step:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): Iterator[Iterable[Array[Long]]]", "member" : "scala.collection.IterableLike.sliding", "link" : "discount\/util\/KmerTable.html#sliding(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): Iterator[Iterable[Array[Long]]]", "member" : "scala.collection.IterableLike.grouped", "link" : "discount\/util\/KmerTable.html#grouped(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (Array[Long]) ⇒ Boolean): Iterable[Array[Long]]", "member" : "scala.collection.IterableLike.takeWhile", "link" : "discount\/util\/KmerTable.html#takeWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Iterable[Array[Long]]", "member" : "scala.collection.IterableLike.drop", "link" : "discount\/util\/KmerTable.html#drop(n:Int):Repr", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Iterable[Array[Long]]", "member" : "scala.collection.IterableLike.take", "link" : "discount\/util\/KmerTable.html#take(n:Int):Repr", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Iterable[Array[Long]]", "member" : "scala.collection.IterableLike.slice", "link" : "discount\/util\/KmerTable.html#slice(from:Int,until:Int):Repr", "kind" : "def"}, {"label" : "head", "tail" : "(): Array[Long]", "member" : "scala.collection.IterableLike.head", "link" : "discount\/util\/KmerTable.html#head:A", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[Array[Long]]", "member" : "scala.collection.IterableLike.toIterator", "link" : "discount\/util\/KmerTable.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[Array[Long]]", "member" : "scala.collection.IterableLike.toIterable", "link" : "discount\/util\/KmerTable.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (Array[Long], B) ⇒ B): B", "member" : "scala.collection.IterableLike.reduceRight", "link" : "discount\/util\/KmerTable.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (Array[Long], B) ⇒ B): B", "member" : "scala.collection.IterableLike.foldRight", "link" : "discount\/util\/KmerTable.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableLike.isEmpty", "link" : "discount\/util\/KmerTable.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(p: (Array[Long]) ⇒ Boolean): Option[Array[Long]]", "member" : "scala.collection.IterableLike.find", "link" : "discount\/util\/KmerTable.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (Array[Long]) ⇒ Boolean): Boolean", "member" : "scala.collection.IterableLike.exists", "link" : "discount\/util\/KmerTable.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (Array[Long]) ⇒ Boolean): Boolean", "member" : "scala.collection.IterableLike.forall", "link" : "discount\/util\/KmerTable.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Array[Long]) ⇒ U): Unit", "member" : "scala.collection.IterableLike.foreach", "link" : "discount\/util\/KmerTable.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "toCollection", "tail" : "(repr: Iterable[Array[Long]]): Iterable[Array[Long]]", "member" : "scala.collection.IterableLike.toCollection", "link" : "discount\/util\/KmerTable.html#toCollection(repr:Repr):Iterable[A]", "kind" : "def"}, {"label" : "thisCollection", "tail" : "(): Iterable[Array[Long]]", "member" : "scala.collection.IterableLike.thisCollection", "link" : "discount\/util\/KmerTable.html#thisCollection:Iterable[A]", "kind" : "def"}, {"label" : "transpose", "tail" : "(asTraversable: (Array[Long]) ⇒ GenTraversableOnce[B]): Iterable[Iterable[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.transpose", "link" : "discount\/util\/KmerTable.html#transpose[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "flatten", "tail" : "(asTraversable: (Array[Long]) ⇒ GenTraversableOnce[B]): Iterable[B]", "member" : "scala.collection.generic.GenericTraversableTemplate.flatten", "link" : "discount\/util\/KmerTable.html#flatten[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (Array[Long]) ⇒ (A1, A2, A3)): (Iterable[A1], Iterable[A2], Iterable[A3])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip3", "link" : "discount\/util\/KmerTable.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (Array[Long]) ⇒ (A1, A2)): (Iterable[A1], Iterable[A2])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip", "link" : "discount\/util\/KmerTable.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "genericBuilder", "tail" : "(): Builder[B, Iterable[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.genericBuilder", "link" : "discount\/util\/KmerTable.html#genericBuilder[B]:scala.collection.mutable.Builder[B,CC[B]]", "kind" : "def"}, {"label" : "newBuilder", "tail" : "(): Builder[Array[Long], Iterable[Array[Long]]]", "member" : "scala.collection.generic.GenericTraversableTemplate.newBuilder", "link" : "discount\/util\/KmerTable.html#newBuilder:scala.collection.mutable.Builder[A,CC[A]]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (Array[Long]) ⇒ Boolean): FilterMonadic[Array[Long], Iterable[Array[Long]]]", "member" : "scala.collection.TraversableLike.withFilter", "link" : "discount\/util\/KmerTable.html#withFilter(p:A=>Boolean):scala.collection.generic.FilterMonadic[A,Repr]", "kind" : "def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.TraversableLike.stringPrefix", "link" : "discount\/util\/KmerTable.html#stringPrefix:String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.TraversableLike.toString", "link" : "discount\/util\/KmerTable.html#toString():String", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, Array[Long], Col[Array[Long]]]): Col[Array[Long]]", "member" : "scala.collection.TraversableLike.to", "link" : "discount\/util\/KmerTable.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[Array[Long]]", "member" : "scala.collection.TraversableLike.toTraversable", "link" : "discount\/util\/KmerTable.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "inits", "tail" : "(): Iterator[Iterable[Array[Long]]]", "member" : "scala.collection.TraversableLike.inits", "link" : "discount\/util\/KmerTable.html#inits:Iterator[Repr]", "kind" : "def"}, {"label" : "tails", "tail" : "(): Iterator[Iterable[Array[Long]]]", "member" : "scala.collection.TraversableLike.tails", "link" : "discount\/util\/KmerTable.html#tails:Iterator[Repr]", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (Iterable[Array[Long]], Iterable[Array[Long]])", "member" : "scala.collection.TraversableLike.splitAt", "link" : "discount\/util\/KmerTable.html#splitAt(n:Int):(Repr,Repr)", "kind" : "def"}, {"label" : "span", "tail" : "(p: (Array[Long]) ⇒ Boolean): (Iterable[Array[Long]], Iterable[Array[Long]])", "member" : "scala.collection.TraversableLike.span", "link" : "discount\/util\/KmerTable.html#span(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (Array[Long]) ⇒ Boolean): Iterable[Array[Long]]", "member" : "scala.collection.TraversableLike.dropWhile", "link" : "discount\/util\/KmerTable.html#dropWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "init", "tail" : "(): Iterable[Array[Long]]", "member" : "scala.collection.TraversableLike.init", "link" : "discount\/util\/KmerTable.html#init:Repr", "kind" : "def"}, {"label" : "lastOption", "tail" : "(): Option[Array[Long]]", "member" : "scala.collection.TraversableLike.lastOption", "link" : "discount\/util\/KmerTable.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "last", "tail" : "(): Array[Long]", "member" : "scala.collection.TraversableLike.last", "link" : "discount\/util\/KmerTable.html#last:A", "kind" : "def"}, {"label" : "tail", "tail" : "(): Iterable[Array[Long]]", "member" : "scala.collection.TraversableLike.tail", "link" : "discount\/util\/KmerTable.html#tail:Repr", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[Array[Long]]", "member" : "scala.collection.TraversableLike.headOption", "link" : "discount\/util\/KmerTable.html#headOption:Option[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (Array[Long], B) ⇒ B)(bf: CanBuildFrom[Iterable[Array[Long]], B, That]): That", "member" : "scala.collection.TraversableLike.scanRight", "link" : "discount\/util\/KmerTable.html#scanRight[B,That](z:B)(op:(A,B)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, Array[Long]) ⇒ B)(bf: CanBuildFrom[Iterable[Array[Long]], B, That]): That", "member" : "scala.collection.TraversableLike.scanLeft", "link" : "discount\/util\/KmerTable.html#scanLeft[B,That](z:B)(op:(B,A)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) ⇒ B)(cbf: CanBuildFrom[Iterable[Array[Long]], B, That]): That", "member" : "scala.collection.TraversableLike.scan", "link" : "discount\/util\/KmerTable.html#scan[B>:A,That](z:B)(op:(B,B)=>B)(implicitcbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (Array[Long]) ⇒ K): Map[K, Iterable[Array[Long]]]", "member" : "scala.collection.TraversableLike.groupBy", "link" : "discount\/util\/KmerTable.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,Repr]", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (Array[Long]) ⇒ Boolean): (Iterable[Array[Long]], Iterable[Array[Long]])", "member" : "scala.collection.TraversableLike.partition", "link" : "discount\/util\/KmerTable.html#partition(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Array[Long], B])(bf: CanBuildFrom[Iterable[Array[Long]], B, That]): That", "member" : "scala.collection.TraversableLike.collect", "link" : "discount\/util\/KmerTable.html#collect[B,That](pf:PartialFunction[A,B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (Array[Long]) ⇒ Boolean): Iterable[Array[Long]]", "member" : "scala.collection.TraversableLike.filterNot", "link" : "discount\/util\/KmerTable.html#filterNot(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (Array[Long]) ⇒ Boolean): Iterable[Array[Long]]", "member" : "scala.collection.TraversableLike.filter", "link" : "discount\/util\/KmerTable.html#filter(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Array[Long]) ⇒ GenTraversableOnce[B])(bf: CanBuildFrom[Iterable[Array[Long]], B, That]): That", "member" : "scala.collection.TraversableLike.flatMap", "link" : "discount\/util\/KmerTable.html#flatMap[B,That](f:A=>scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Array[Long]) ⇒ B)(bf: CanBuildFrom[Iterable[Array[Long]], B, That]): That", "member" : "scala.collection.TraversableLike.map", "link" : "discount\/util\/KmerTable.html#map[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: Traversable[B])(bf: CanBuildFrom[Iterable[Array[Long]], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "discount\/util\/KmerTable.html#++:[B>:A,That](that:Traversable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: TraversableOnce[B])(bf: CanBuildFrom[Iterable[Array[Long]], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "discount\/util\/KmerTable.html#++:[B>:A,That](that:scala.collection.TraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++", "tail" : "(that: GenTraversableOnce[B])(bf: CanBuildFrom[Iterable[Array[Long]], B, That]): That", "member" : "scala.collection.TraversableLike.++", "link" : "discount\/util\/KmerTable.html#++[B>:A,That](that:scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.hasDefiniteSize", "link" : "discount\/util\/KmerTable.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "parCombiner", "tail" : "(): Combiner[Array[Long], ParIterable[Array[Long]]]", "member" : "scala.collection.TraversableLike.parCombiner", "link" : "discount\/util\/KmerTable.html#parCombiner:scala.collection.parallel.Combiner[A,scala.collection.parallel.ParIterable[A]]", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.isTraversableAgain", "link" : "discount\/util\/KmerTable.html#isTraversableAgain:Boolean", "kind" : "final def"}, {"label" : "repr", "tail" : "(): Iterable[Array[Long]]", "member" : "scala.collection.TraversableLike.repr", "link" : "discount\/util\/KmerTable.html#repr:Repr", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "scala.collection.TraversableLike.Self", "link" : "discount\/util\/KmerTable.html#Self=Repr", "kind" : "type"}, {"label" : "par", "tail" : "(): ParIterable[Array[Long]]", "member" : "scala.collection.Parallelizable.par", "link" : "discount\/util\/KmerTable.html#par:ParRepr", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "discount\/util\/KmerTable.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "discount\/util\/KmerTable.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "discount\/util\/KmerTable.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "discount\/util\/KmerTable.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "discount\/util\/KmerTable.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "discount\/util\/KmerTable.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[Array[Long], (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "discount\/util\/KmerTable.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[Array[Long]]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "discount\/util\/KmerTable.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "discount\/util\/KmerTable.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.TraversableOnce.toBuffer", "link" : "discount\/util\/KmerTable.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[Array[Long]]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "discount\/util\/KmerTable.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[Array[Long]]", "member" : "scala.collection.TraversableOnce.toSeq", "link" : "discount\/util\/KmerTable.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[Array[Long]]", "member" : "scala.collection.TraversableOnce.toList", "link" : "discount\/util\/KmerTable.html#toList:List[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.TraversableOnce.toArray", "link" : "discount\/util\/KmerTable.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "discount\/util\/KmerTable.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "discount\/util\/KmerTable.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "discount\/util\/KmerTable.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (Array[Long]) ⇒ B)(cmp: Ordering[B]): Array[Long]", "member" : "scala.collection.TraversableOnce.minBy", "link" : "discount\/util\/KmerTable.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (Array[Long]) ⇒ B)(cmp: Ordering[B]): Array[Long]", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "discount\/util\/KmerTable.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): Array[Long]", "member" : "scala.collection.TraversableOnce.max", "link" : "discount\/util\/KmerTable.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): Array[Long]", "member" : "scala.collection.TraversableOnce.min", "link" : "discount\/util\/KmerTable.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "discount\/util\/KmerTable.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "discount\/util\/KmerTable.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: ⇒ B)(seqop: (B, Array[Long]) ⇒ B, combop: (B, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "discount\/util\/KmerTable.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "discount\/util\/KmerTable.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) ⇒ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "discount\/util\/KmerTable.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "discount\/util\/KmerTable.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (Array[Long], B) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "discount\/util\/KmerTable.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, Array[Long]) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "discount\/util\/KmerTable.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, Array[Long]) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceLeft", "link" : "discount\/util\/KmerTable.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, Array[Long]) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldLeft", "link" : "discount\/util\/KmerTable.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (Array[Long], B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "discount\/util\/KmerTable.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, Array[Long]) ⇒ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "discount\/util\/KmerTable.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Array[Long], B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "discount\/util\/KmerTable.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (Array[Long]) ⇒ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "discount\/util\/KmerTable.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "discount\/util\/KmerTable.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[Array[Long]]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "discount\/util\/KmerTable.html#reversed:List[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.GenTraversableOnce.sizeHintIfCheap", "link" : "discount\/util\/KmerTable.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "discount\/util\/KmerTable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "discount\/util\/KmerTable.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "discount\/util\/KmerTable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "discount\/util\/KmerTable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "discount\/util\/KmerTable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "discount\/util\/KmerTable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "discount\/util\/KmerTable.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/util\/KmerTable.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/util\/KmerTable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/util\/KmerTable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "discount\/util\/KmerTable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "discount\/util\/KmerTable.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "discount\/util\/KmerTable.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "discount\/util\/KmerTable.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "discount\/util\/KmerTable.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "discount\/util\/KmerTable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "discount\/util\/KmerTable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "discount\/util\/KmerTable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "copyKmer", "tail" : "(i: Int): Array[Long]", "member" : "discount.util.KmerTable.copyKmer", "link" : "discount\/util\/KmerTable.html#copyKmer(i:Int):Array[Long]", "kind" : "abstract def"}, {"label" : "equalKmers", "tail" : "(i: Int, kmer: Array[Long]): Boolean", "member" : "discount.util.KmerTable.equalKmers", "link" : "discount\/util\/KmerTable.html#equalKmers(i:Int,kmer:Array[Long]):Boolean", "kind" : "abstract def"}], "members_object" : [{"label" : "fromSegments", "tail" : "(segments: Iterable[NTBitArray], k: Int, forwardOnly: Boolean, sort: Boolean): KmerTable", "member" : "discount.util.KmerTable.fromSegments", "link" : "discount\/util\/KmerTable$.html#fromSegments(segments:Iterable[discount.util.NTBitArray],k:Int,forwardOnly:Boolean,sort:Boolean):discount.util.KmerTable", "kind" : "def"}, {"label" : "fromSegment", "tail" : "(segment: NTBitArray, k: Int, forwardOnly: Boolean, sort: Boolean): KmerTable", "member" : "discount.util.KmerTable.fromSegment", "link" : "discount\/util\/KmerTable$.html#fromSegment(segment:discount.util.NTBitArray,k:Int,forwardOnly:Boolean,sort:Boolean):discount.util.KmerTable", "kind" : "def"}, {"label" : "builder", "tail" : "(k: Int, sizeEstimate: Int, extraItems: Int): KmerTableBuilder", "member" : "discount.util.KmerTable.builder", "link" : "discount\/util\/KmerTable$.html#builder(k:Int,sizeEstimate:Int,extraItems:Int):discount.util.KmerTableBuilder", "kind" : "def"}, {"label" : "longsForK", "tail" : "(k: Int): Int", "member" : "discount.util.KmerTable.longsForK", "link" : "discount\/util\/KmerTable$.html#longsForK(k:Int):Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "discount\/util\/KmerTable$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "discount\/util\/KmerTable$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "discount\/util\/KmerTable$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "discount\/util\/KmerTable$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "discount\/util\/KmerTable$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "discount\/util\/KmerTable$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "discount\/util\/KmerTable$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/util\/KmerTable$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/util\/KmerTable$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/util\/KmerTable$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "discount\/util\/KmerTable$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "discount\/util\/KmerTable$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "discount\/util\/KmerTable$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "discount\/util\/KmerTable$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "discount\/util\/KmerTable$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "discount\/util\/KmerTable$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "discount\/util\/KmerTable$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "discount\/util\/KmerTable$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "discount\/util\/KmerTable$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "discount\/util\/KmerTable.html", "kind" : "object"}, {"name" : "discount.util.KmerTable1", "shortDescription" : "Specialized KmerTable for n = 1 (k <= 32)", "members_class" : [{"label" : "WithFilter", "tail" : "", "member" : "scala.collection.TraversableLike.WithFilter", "link" : "discount\/util\/KmerTable1.html#WithFilterextendsFilterMonadic[A,Repr]", "kind" : "class"}, {"label" : "copyKmer", "tail" : "(i: Int): Array[Long]", "member" : "discount.util.KmerTable1.copyKmer", "link" : "discount\/util\/KmerTable1.html#copyKmer(i:Int):Array[Long]", "kind" : "def"}, {"label" : "equalKmers", "tail" : "(i: Int, kmer: Array[Long]): Boolean", "member" : "discount.util.KmerTable1.equalKmers", "link" : "discount\/util\/KmerTable1.html#equalKmers(i:Int,kmer:Array[Long]):Boolean", "kind" : "def"}, {"member" : "discount.util.KmerTable1#<init>", "error" : "unsupported entity"}, {"label" : "iterator", "tail" : "(): Iterator[Array[Long]]", "member" : "discount.util.KmerTable.iterator", "link" : "discount\/util\/KmerTable1.html#iterator:Iterator[Array[Long]]", "kind" : "def"}, {"label" : "countedKmers", "tail" : "(): Iterator[(Array[Long], Abundance)]", "member" : "discount.util.KmerTable.countedKmers", "link" : "discount\/util\/KmerTable1.html#countedKmers:Iterator[(Array[Long],discount.Abundance)]", "kind" : "def"}, {"label" : "size", "tail" : ": Int", "member" : "discount.util.KmerTable.size", "link" : "discount\/util\/KmerTable1.html#size:Int", "kind" : "val"}, {"label" : "seq", "tail" : "(): Iterable[Array[Long]]", "member" : "scala.collection.Iterable.seq", "link" : "discount\/util\/KmerTable1.html#seq:Iterable[A]", "kind" : "def"}, {"label" : "companion", "tail" : "(): GenericCompanion[Iterable]", "member" : "scala.collection.Iterable.companion", "link" : "discount\/util\/KmerTable1.html#companion:scala.collection.generic.GenericCompanion[Iterable]", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): IterableView[Array[Long], Iterable[Array[Long]]]", "member" : "scala.collection.IterableLike.view", "link" : "discount\/util\/KmerTable1.html#view(from:Int,until:Int):scala.collection.IterableView[A,Repr]", "kind" : "def"}, {"label" : "view", "tail" : "(): IterableView[Array[Long], Iterable[Array[Long]]]", "member" : "scala.collection.IterableLike.view", "link" : "discount\/util\/KmerTable1.html#view:scala.collection.IterableView[A,Repr]", "kind" : "def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.collection.IterableLike.canEqual", "link" : "discount\/util\/KmerTable1.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[Array[Long]]", "member" : "scala.collection.IterableLike.toStream", "link" : "discount\/util\/KmerTable1.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: GenIterable[B]): Boolean", "member" : "scala.collection.IterableLike.sameElements", "link" : "discount\/util\/KmerTable1.html#sameElements[B>:A](that:scala.collection.GenIterable[B]):Boolean", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(bf: CanBuildFrom[Iterable[Array[Long]], (A1, Int), That]): That", "member" : "scala.collection.IterableLike.zipWithIndex", "link" : "discount\/util\/KmerTable1.html#zipWithIndex[A1>:A,That](implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,Int),That]):That", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: GenIterable[B], thisElem: A1, thatElem: B)(bf: CanBuildFrom[Iterable[Array[Long]], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zipAll", "link" : "discount\/util\/KmerTable1.html#zipAll[B,A1>:A,That](that:scala.collection.GenIterable[B],thisElem:A1,thatElem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "zip", "tail" : "(that: GenIterable[B])(bf: CanBuildFrom[Iterable[Array[Long]], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zip", "link" : "discount\/util\/KmerTable1.html#zip[A1>:A,B,That](that:scala.collection.GenIterable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.IterableLike.copyToArray", "link" : "discount\/util\/KmerTable1.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): Iterable[Array[Long]]", "member" : "scala.collection.IterableLike.dropRight", "link" : "discount\/util\/KmerTable1.html#dropRight(n:Int):Repr", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): Iterable[Array[Long]]", "member" : "scala.collection.IterableLike.takeRight", "link" : "discount\/util\/KmerTable1.html#takeRight(n:Int):Repr", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): Iterator[Iterable[Array[Long]]]", "member" : "scala.collection.IterableLike.sliding", "link" : "discount\/util\/KmerTable1.html#sliding(size:Int,step:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): Iterator[Iterable[Array[Long]]]", "member" : "scala.collection.IterableLike.sliding", "link" : "discount\/util\/KmerTable1.html#sliding(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): Iterator[Iterable[Array[Long]]]", "member" : "scala.collection.IterableLike.grouped", "link" : "discount\/util\/KmerTable1.html#grouped(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (Array[Long]) ⇒ Boolean): Iterable[Array[Long]]", "member" : "scala.collection.IterableLike.takeWhile", "link" : "discount\/util\/KmerTable1.html#takeWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Iterable[Array[Long]]", "member" : "scala.collection.IterableLike.drop", "link" : "discount\/util\/KmerTable1.html#drop(n:Int):Repr", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Iterable[Array[Long]]", "member" : "scala.collection.IterableLike.take", "link" : "discount\/util\/KmerTable1.html#take(n:Int):Repr", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Iterable[Array[Long]]", "member" : "scala.collection.IterableLike.slice", "link" : "discount\/util\/KmerTable1.html#slice(from:Int,until:Int):Repr", "kind" : "def"}, {"label" : "head", "tail" : "(): Array[Long]", "member" : "scala.collection.IterableLike.head", "link" : "discount\/util\/KmerTable1.html#head:A", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[Array[Long]]", "member" : "scala.collection.IterableLike.toIterator", "link" : "discount\/util\/KmerTable1.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[Array[Long]]", "member" : "scala.collection.IterableLike.toIterable", "link" : "discount\/util\/KmerTable1.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (Array[Long], B) ⇒ B): B", "member" : "scala.collection.IterableLike.reduceRight", "link" : "discount\/util\/KmerTable1.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (Array[Long], B) ⇒ B): B", "member" : "scala.collection.IterableLike.foldRight", "link" : "discount\/util\/KmerTable1.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableLike.isEmpty", "link" : "discount\/util\/KmerTable1.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(p: (Array[Long]) ⇒ Boolean): Option[Array[Long]]", "member" : "scala.collection.IterableLike.find", "link" : "discount\/util\/KmerTable1.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (Array[Long]) ⇒ Boolean): Boolean", "member" : "scala.collection.IterableLike.exists", "link" : "discount\/util\/KmerTable1.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (Array[Long]) ⇒ Boolean): Boolean", "member" : "scala.collection.IterableLike.forall", "link" : "discount\/util\/KmerTable1.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Array[Long]) ⇒ U): Unit", "member" : "scala.collection.IterableLike.foreach", "link" : "discount\/util\/KmerTable1.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "toCollection", "tail" : "(repr: Iterable[Array[Long]]): Iterable[Array[Long]]", "member" : "scala.collection.IterableLike.toCollection", "link" : "discount\/util\/KmerTable1.html#toCollection(repr:Repr):Iterable[A]", "kind" : "def"}, {"label" : "thisCollection", "tail" : "(): Iterable[Array[Long]]", "member" : "scala.collection.IterableLike.thisCollection", "link" : "discount\/util\/KmerTable1.html#thisCollection:Iterable[A]", "kind" : "def"}, {"label" : "transpose", "tail" : "(asTraversable: (Array[Long]) ⇒ GenTraversableOnce[B]): Iterable[Iterable[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.transpose", "link" : "discount\/util\/KmerTable1.html#transpose[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "flatten", "tail" : "(asTraversable: (Array[Long]) ⇒ GenTraversableOnce[B]): Iterable[B]", "member" : "scala.collection.generic.GenericTraversableTemplate.flatten", "link" : "discount\/util\/KmerTable1.html#flatten[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (Array[Long]) ⇒ (A1, A2, A3)): (Iterable[A1], Iterable[A2], Iterable[A3])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip3", "link" : "discount\/util\/KmerTable1.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (Array[Long]) ⇒ (A1, A2)): (Iterable[A1], Iterable[A2])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip", "link" : "discount\/util\/KmerTable1.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "genericBuilder", "tail" : "(): Builder[B, Iterable[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.genericBuilder", "link" : "discount\/util\/KmerTable1.html#genericBuilder[B]:scala.collection.mutable.Builder[B,CC[B]]", "kind" : "def"}, {"label" : "newBuilder", "tail" : "(): Builder[Array[Long], Iterable[Array[Long]]]", "member" : "scala.collection.generic.GenericTraversableTemplate.newBuilder", "link" : "discount\/util\/KmerTable1.html#newBuilder:scala.collection.mutable.Builder[A,CC[A]]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (Array[Long]) ⇒ Boolean): FilterMonadic[Array[Long], Iterable[Array[Long]]]", "member" : "scala.collection.TraversableLike.withFilter", "link" : "discount\/util\/KmerTable1.html#withFilter(p:A=>Boolean):scala.collection.generic.FilterMonadic[A,Repr]", "kind" : "def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.TraversableLike.stringPrefix", "link" : "discount\/util\/KmerTable1.html#stringPrefix:String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.TraversableLike.toString", "link" : "discount\/util\/KmerTable1.html#toString():String", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, Array[Long], Col[Array[Long]]]): Col[Array[Long]]", "member" : "scala.collection.TraversableLike.to", "link" : "discount\/util\/KmerTable1.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[Array[Long]]", "member" : "scala.collection.TraversableLike.toTraversable", "link" : "discount\/util\/KmerTable1.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "inits", "tail" : "(): Iterator[Iterable[Array[Long]]]", "member" : "scala.collection.TraversableLike.inits", "link" : "discount\/util\/KmerTable1.html#inits:Iterator[Repr]", "kind" : "def"}, {"label" : "tails", "tail" : "(): Iterator[Iterable[Array[Long]]]", "member" : "scala.collection.TraversableLike.tails", "link" : "discount\/util\/KmerTable1.html#tails:Iterator[Repr]", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (Iterable[Array[Long]], Iterable[Array[Long]])", "member" : "scala.collection.TraversableLike.splitAt", "link" : "discount\/util\/KmerTable1.html#splitAt(n:Int):(Repr,Repr)", "kind" : "def"}, {"label" : "span", "tail" : "(p: (Array[Long]) ⇒ Boolean): (Iterable[Array[Long]], Iterable[Array[Long]])", "member" : "scala.collection.TraversableLike.span", "link" : "discount\/util\/KmerTable1.html#span(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (Array[Long]) ⇒ Boolean): Iterable[Array[Long]]", "member" : "scala.collection.TraversableLike.dropWhile", "link" : "discount\/util\/KmerTable1.html#dropWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "init", "tail" : "(): Iterable[Array[Long]]", "member" : "scala.collection.TraversableLike.init", "link" : "discount\/util\/KmerTable1.html#init:Repr", "kind" : "def"}, {"label" : "lastOption", "tail" : "(): Option[Array[Long]]", "member" : "scala.collection.TraversableLike.lastOption", "link" : "discount\/util\/KmerTable1.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "last", "tail" : "(): Array[Long]", "member" : "scala.collection.TraversableLike.last", "link" : "discount\/util\/KmerTable1.html#last:A", "kind" : "def"}, {"label" : "tail", "tail" : "(): Iterable[Array[Long]]", "member" : "scala.collection.TraversableLike.tail", "link" : "discount\/util\/KmerTable1.html#tail:Repr", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[Array[Long]]", "member" : "scala.collection.TraversableLike.headOption", "link" : "discount\/util\/KmerTable1.html#headOption:Option[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (Array[Long], B) ⇒ B)(bf: CanBuildFrom[Iterable[Array[Long]], B, That]): That", "member" : "scala.collection.TraversableLike.scanRight", "link" : "discount\/util\/KmerTable1.html#scanRight[B,That](z:B)(op:(A,B)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, Array[Long]) ⇒ B)(bf: CanBuildFrom[Iterable[Array[Long]], B, That]): That", "member" : "scala.collection.TraversableLike.scanLeft", "link" : "discount\/util\/KmerTable1.html#scanLeft[B,That](z:B)(op:(B,A)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) ⇒ B)(cbf: CanBuildFrom[Iterable[Array[Long]], B, That]): That", "member" : "scala.collection.TraversableLike.scan", "link" : "discount\/util\/KmerTable1.html#scan[B>:A,That](z:B)(op:(B,B)=>B)(implicitcbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (Array[Long]) ⇒ K): Map[K, Iterable[Array[Long]]]", "member" : "scala.collection.TraversableLike.groupBy", "link" : "discount\/util\/KmerTable1.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,Repr]", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (Array[Long]) ⇒ Boolean): (Iterable[Array[Long]], Iterable[Array[Long]])", "member" : "scala.collection.TraversableLike.partition", "link" : "discount\/util\/KmerTable1.html#partition(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Array[Long], B])(bf: CanBuildFrom[Iterable[Array[Long]], B, That]): That", "member" : "scala.collection.TraversableLike.collect", "link" : "discount\/util\/KmerTable1.html#collect[B,That](pf:PartialFunction[A,B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (Array[Long]) ⇒ Boolean): Iterable[Array[Long]]", "member" : "scala.collection.TraversableLike.filterNot", "link" : "discount\/util\/KmerTable1.html#filterNot(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (Array[Long]) ⇒ Boolean): Iterable[Array[Long]]", "member" : "scala.collection.TraversableLike.filter", "link" : "discount\/util\/KmerTable1.html#filter(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Array[Long]) ⇒ GenTraversableOnce[B])(bf: CanBuildFrom[Iterable[Array[Long]], B, That]): That", "member" : "scala.collection.TraversableLike.flatMap", "link" : "discount\/util\/KmerTable1.html#flatMap[B,That](f:A=>scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Array[Long]) ⇒ B)(bf: CanBuildFrom[Iterable[Array[Long]], B, That]): That", "member" : "scala.collection.TraversableLike.map", "link" : "discount\/util\/KmerTable1.html#map[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: Traversable[B])(bf: CanBuildFrom[Iterable[Array[Long]], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "discount\/util\/KmerTable1.html#++:[B>:A,That](that:Traversable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: TraversableOnce[B])(bf: CanBuildFrom[Iterable[Array[Long]], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "discount\/util\/KmerTable1.html#++:[B>:A,That](that:scala.collection.TraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++", "tail" : "(that: GenTraversableOnce[B])(bf: CanBuildFrom[Iterable[Array[Long]], B, That]): That", "member" : "scala.collection.TraversableLike.++", "link" : "discount\/util\/KmerTable1.html#++[B>:A,That](that:scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.hasDefiniteSize", "link" : "discount\/util\/KmerTable1.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "parCombiner", "tail" : "(): Combiner[Array[Long], ParIterable[Array[Long]]]", "member" : "scala.collection.TraversableLike.parCombiner", "link" : "discount\/util\/KmerTable1.html#parCombiner:scala.collection.parallel.Combiner[A,scala.collection.parallel.ParIterable[A]]", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.isTraversableAgain", "link" : "discount\/util\/KmerTable1.html#isTraversableAgain:Boolean", "kind" : "final def"}, {"label" : "repr", "tail" : "(): Iterable[Array[Long]]", "member" : "scala.collection.TraversableLike.repr", "link" : "discount\/util\/KmerTable1.html#repr:Repr", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "scala.collection.TraversableLike.Self", "link" : "discount\/util\/KmerTable1.html#Self=Repr", "kind" : "type"}, {"label" : "par", "tail" : "(): ParIterable[Array[Long]]", "member" : "scala.collection.Parallelizable.par", "link" : "discount\/util\/KmerTable1.html#par:ParRepr", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "discount\/util\/KmerTable1.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "discount\/util\/KmerTable1.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "discount\/util\/KmerTable1.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "discount\/util\/KmerTable1.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "discount\/util\/KmerTable1.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "discount\/util\/KmerTable1.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[Array[Long], (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "discount\/util\/KmerTable1.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[Array[Long]]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "discount\/util\/KmerTable1.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "discount\/util\/KmerTable1.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.TraversableOnce.toBuffer", "link" : "discount\/util\/KmerTable1.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[Array[Long]]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "discount\/util\/KmerTable1.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[Array[Long]]", "member" : "scala.collection.TraversableOnce.toSeq", "link" : "discount\/util\/KmerTable1.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[Array[Long]]", "member" : "scala.collection.TraversableOnce.toList", "link" : "discount\/util\/KmerTable1.html#toList:List[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.TraversableOnce.toArray", "link" : "discount\/util\/KmerTable1.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "discount\/util\/KmerTable1.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "discount\/util\/KmerTable1.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "discount\/util\/KmerTable1.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (Array[Long]) ⇒ B)(cmp: Ordering[B]): Array[Long]", "member" : "scala.collection.TraversableOnce.minBy", "link" : "discount\/util\/KmerTable1.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (Array[Long]) ⇒ B)(cmp: Ordering[B]): Array[Long]", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "discount\/util\/KmerTable1.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): Array[Long]", "member" : "scala.collection.TraversableOnce.max", "link" : "discount\/util\/KmerTable1.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): Array[Long]", "member" : "scala.collection.TraversableOnce.min", "link" : "discount\/util\/KmerTable1.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "discount\/util\/KmerTable1.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "discount\/util\/KmerTable1.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: ⇒ B)(seqop: (B, Array[Long]) ⇒ B, combop: (B, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "discount\/util\/KmerTable1.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "discount\/util\/KmerTable1.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) ⇒ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "discount\/util\/KmerTable1.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "discount\/util\/KmerTable1.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (Array[Long], B) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "discount\/util\/KmerTable1.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, Array[Long]) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "discount\/util\/KmerTable1.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, Array[Long]) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceLeft", "link" : "discount\/util\/KmerTable1.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, Array[Long]) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldLeft", "link" : "discount\/util\/KmerTable1.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (Array[Long], B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "discount\/util\/KmerTable1.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, Array[Long]) ⇒ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "discount\/util\/KmerTable1.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Array[Long], B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "discount\/util\/KmerTable1.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (Array[Long]) ⇒ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "discount\/util\/KmerTable1.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "discount\/util\/KmerTable1.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[Array[Long]]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "discount\/util\/KmerTable1.html#reversed:List[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.GenTraversableOnce.sizeHintIfCheap", "link" : "discount\/util\/KmerTable1.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "discount\/util\/KmerTable1.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "discount\/util\/KmerTable1.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "discount\/util\/KmerTable1.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "discount\/util\/KmerTable1.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "discount\/util\/KmerTable1.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "discount\/util\/KmerTable1.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "discount\/util\/KmerTable1.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/util\/KmerTable1.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/util\/KmerTable1.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/util\/KmerTable1.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "discount\/util\/KmerTable1.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "discount\/util\/KmerTable1.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "discount\/util\/KmerTable1.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "discount\/util\/KmerTable1.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "discount\/util\/KmerTable1.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "discount\/util\/KmerTable1.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "discount\/util\/KmerTable1.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "discount\/util\/KmerTable1.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "discount\/util\/KmerTable1.html", "kind" : "class"}, {"name" : "discount.util.KmerTable2", "shortDescription" : "Specialized KmerTable for n = 2 (k <= 64)", "members_class" : [{"label" : "WithFilter", "tail" : "", "member" : "scala.collection.TraversableLike.WithFilter", "link" : "discount\/util\/KmerTable2.html#WithFilterextendsFilterMonadic[A,Repr]", "kind" : "class"}, {"label" : "copyKmer", "tail" : "(i: Int): Array[Long]", "member" : "discount.util.KmerTable2.copyKmer", "link" : "discount\/util\/KmerTable2.html#copyKmer(i:Int):Array[Long]", "kind" : "def"}, {"label" : "equalKmers", "tail" : "(i: Int, kmer: Array[Long]): Boolean", "member" : "discount.util.KmerTable2.equalKmers", "link" : "discount\/util\/KmerTable2.html#equalKmers(i:Int,kmer:Array[Long]):Boolean", "kind" : "def"}, {"member" : "discount.util.KmerTable2#<init>", "error" : "unsupported entity"}, {"label" : "iterator", "tail" : "(): Iterator[Array[Long]]", "member" : "discount.util.KmerTable.iterator", "link" : "discount\/util\/KmerTable2.html#iterator:Iterator[Array[Long]]", "kind" : "def"}, {"label" : "countedKmers", "tail" : "(): Iterator[(Array[Long], Abundance)]", "member" : "discount.util.KmerTable.countedKmers", "link" : "discount\/util\/KmerTable2.html#countedKmers:Iterator[(Array[Long],discount.Abundance)]", "kind" : "def"}, {"label" : "size", "tail" : ": Int", "member" : "discount.util.KmerTable.size", "link" : "discount\/util\/KmerTable2.html#size:Int", "kind" : "val"}, {"label" : "seq", "tail" : "(): Iterable[Array[Long]]", "member" : "scala.collection.Iterable.seq", "link" : "discount\/util\/KmerTable2.html#seq:Iterable[A]", "kind" : "def"}, {"label" : "companion", "tail" : "(): GenericCompanion[Iterable]", "member" : "scala.collection.Iterable.companion", "link" : "discount\/util\/KmerTable2.html#companion:scala.collection.generic.GenericCompanion[Iterable]", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): IterableView[Array[Long], Iterable[Array[Long]]]", "member" : "scala.collection.IterableLike.view", "link" : "discount\/util\/KmerTable2.html#view(from:Int,until:Int):scala.collection.IterableView[A,Repr]", "kind" : "def"}, {"label" : "view", "tail" : "(): IterableView[Array[Long], Iterable[Array[Long]]]", "member" : "scala.collection.IterableLike.view", "link" : "discount\/util\/KmerTable2.html#view:scala.collection.IterableView[A,Repr]", "kind" : "def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.collection.IterableLike.canEqual", "link" : "discount\/util\/KmerTable2.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[Array[Long]]", "member" : "scala.collection.IterableLike.toStream", "link" : "discount\/util\/KmerTable2.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: GenIterable[B]): Boolean", "member" : "scala.collection.IterableLike.sameElements", "link" : "discount\/util\/KmerTable2.html#sameElements[B>:A](that:scala.collection.GenIterable[B]):Boolean", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(bf: CanBuildFrom[Iterable[Array[Long]], (A1, Int), That]): That", "member" : "scala.collection.IterableLike.zipWithIndex", "link" : "discount\/util\/KmerTable2.html#zipWithIndex[A1>:A,That](implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,Int),That]):That", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: GenIterable[B], thisElem: A1, thatElem: B)(bf: CanBuildFrom[Iterable[Array[Long]], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zipAll", "link" : "discount\/util\/KmerTable2.html#zipAll[B,A1>:A,That](that:scala.collection.GenIterable[B],thisElem:A1,thatElem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "zip", "tail" : "(that: GenIterable[B])(bf: CanBuildFrom[Iterable[Array[Long]], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zip", "link" : "discount\/util\/KmerTable2.html#zip[A1>:A,B,That](that:scala.collection.GenIterable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.IterableLike.copyToArray", "link" : "discount\/util\/KmerTable2.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): Iterable[Array[Long]]", "member" : "scala.collection.IterableLike.dropRight", "link" : "discount\/util\/KmerTable2.html#dropRight(n:Int):Repr", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): Iterable[Array[Long]]", "member" : "scala.collection.IterableLike.takeRight", "link" : "discount\/util\/KmerTable2.html#takeRight(n:Int):Repr", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): Iterator[Iterable[Array[Long]]]", "member" : "scala.collection.IterableLike.sliding", "link" : "discount\/util\/KmerTable2.html#sliding(size:Int,step:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): Iterator[Iterable[Array[Long]]]", "member" : "scala.collection.IterableLike.sliding", "link" : "discount\/util\/KmerTable2.html#sliding(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): Iterator[Iterable[Array[Long]]]", "member" : "scala.collection.IterableLike.grouped", "link" : "discount\/util\/KmerTable2.html#grouped(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (Array[Long]) ⇒ Boolean): Iterable[Array[Long]]", "member" : "scala.collection.IterableLike.takeWhile", "link" : "discount\/util\/KmerTable2.html#takeWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Iterable[Array[Long]]", "member" : "scala.collection.IterableLike.drop", "link" : "discount\/util\/KmerTable2.html#drop(n:Int):Repr", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Iterable[Array[Long]]", "member" : "scala.collection.IterableLike.take", "link" : "discount\/util\/KmerTable2.html#take(n:Int):Repr", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Iterable[Array[Long]]", "member" : "scala.collection.IterableLike.slice", "link" : "discount\/util\/KmerTable2.html#slice(from:Int,until:Int):Repr", "kind" : "def"}, {"label" : "head", "tail" : "(): Array[Long]", "member" : "scala.collection.IterableLike.head", "link" : "discount\/util\/KmerTable2.html#head:A", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[Array[Long]]", "member" : "scala.collection.IterableLike.toIterator", "link" : "discount\/util\/KmerTable2.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[Array[Long]]", "member" : "scala.collection.IterableLike.toIterable", "link" : "discount\/util\/KmerTable2.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (Array[Long], B) ⇒ B): B", "member" : "scala.collection.IterableLike.reduceRight", "link" : "discount\/util\/KmerTable2.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (Array[Long], B) ⇒ B): B", "member" : "scala.collection.IterableLike.foldRight", "link" : "discount\/util\/KmerTable2.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableLike.isEmpty", "link" : "discount\/util\/KmerTable2.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(p: (Array[Long]) ⇒ Boolean): Option[Array[Long]]", "member" : "scala.collection.IterableLike.find", "link" : "discount\/util\/KmerTable2.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (Array[Long]) ⇒ Boolean): Boolean", "member" : "scala.collection.IterableLike.exists", "link" : "discount\/util\/KmerTable2.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (Array[Long]) ⇒ Boolean): Boolean", "member" : "scala.collection.IterableLike.forall", "link" : "discount\/util\/KmerTable2.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Array[Long]) ⇒ U): Unit", "member" : "scala.collection.IterableLike.foreach", "link" : "discount\/util\/KmerTable2.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "toCollection", "tail" : "(repr: Iterable[Array[Long]]): Iterable[Array[Long]]", "member" : "scala.collection.IterableLike.toCollection", "link" : "discount\/util\/KmerTable2.html#toCollection(repr:Repr):Iterable[A]", "kind" : "def"}, {"label" : "thisCollection", "tail" : "(): Iterable[Array[Long]]", "member" : "scala.collection.IterableLike.thisCollection", "link" : "discount\/util\/KmerTable2.html#thisCollection:Iterable[A]", "kind" : "def"}, {"label" : "transpose", "tail" : "(asTraversable: (Array[Long]) ⇒ GenTraversableOnce[B]): Iterable[Iterable[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.transpose", "link" : "discount\/util\/KmerTable2.html#transpose[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "flatten", "tail" : "(asTraversable: (Array[Long]) ⇒ GenTraversableOnce[B]): Iterable[B]", "member" : "scala.collection.generic.GenericTraversableTemplate.flatten", "link" : "discount\/util\/KmerTable2.html#flatten[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (Array[Long]) ⇒ (A1, A2, A3)): (Iterable[A1], Iterable[A2], Iterable[A3])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip3", "link" : "discount\/util\/KmerTable2.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (Array[Long]) ⇒ (A1, A2)): (Iterable[A1], Iterable[A2])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip", "link" : "discount\/util\/KmerTable2.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "genericBuilder", "tail" : "(): Builder[B, Iterable[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.genericBuilder", "link" : "discount\/util\/KmerTable2.html#genericBuilder[B]:scala.collection.mutable.Builder[B,CC[B]]", "kind" : "def"}, {"label" : "newBuilder", "tail" : "(): Builder[Array[Long], Iterable[Array[Long]]]", "member" : "scala.collection.generic.GenericTraversableTemplate.newBuilder", "link" : "discount\/util\/KmerTable2.html#newBuilder:scala.collection.mutable.Builder[A,CC[A]]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (Array[Long]) ⇒ Boolean): FilterMonadic[Array[Long], Iterable[Array[Long]]]", "member" : "scala.collection.TraversableLike.withFilter", "link" : "discount\/util\/KmerTable2.html#withFilter(p:A=>Boolean):scala.collection.generic.FilterMonadic[A,Repr]", "kind" : "def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.TraversableLike.stringPrefix", "link" : "discount\/util\/KmerTable2.html#stringPrefix:String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.TraversableLike.toString", "link" : "discount\/util\/KmerTable2.html#toString():String", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, Array[Long], Col[Array[Long]]]): Col[Array[Long]]", "member" : "scala.collection.TraversableLike.to", "link" : "discount\/util\/KmerTable2.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[Array[Long]]", "member" : "scala.collection.TraversableLike.toTraversable", "link" : "discount\/util\/KmerTable2.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "inits", "tail" : "(): Iterator[Iterable[Array[Long]]]", "member" : "scala.collection.TraversableLike.inits", "link" : "discount\/util\/KmerTable2.html#inits:Iterator[Repr]", "kind" : "def"}, {"label" : "tails", "tail" : "(): Iterator[Iterable[Array[Long]]]", "member" : "scala.collection.TraversableLike.tails", "link" : "discount\/util\/KmerTable2.html#tails:Iterator[Repr]", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (Iterable[Array[Long]], Iterable[Array[Long]])", "member" : "scala.collection.TraversableLike.splitAt", "link" : "discount\/util\/KmerTable2.html#splitAt(n:Int):(Repr,Repr)", "kind" : "def"}, {"label" : "span", "tail" : "(p: (Array[Long]) ⇒ Boolean): (Iterable[Array[Long]], Iterable[Array[Long]])", "member" : "scala.collection.TraversableLike.span", "link" : "discount\/util\/KmerTable2.html#span(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (Array[Long]) ⇒ Boolean): Iterable[Array[Long]]", "member" : "scala.collection.TraversableLike.dropWhile", "link" : "discount\/util\/KmerTable2.html#dropWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "init", "tail" : "(): Iterable[Array[Long]]", "member" : "scala.collection.TraversableLike.init", "link" : "discount\/util\/KmerTable2.html#init:Repr", "kind" : "def"}, {"label" : "lastOption", "tail" : "(): Option[Array[Long]]", "member" : "scala.collection.TraversableLike.lastOption", "link" : "discount\/util\/KmerTable2.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "last", "tail" : "(): Array[Long]", "member" : "scala.collection.TraversableLike.last", "link" : "discount\/util\/KmerTable2.html#last:A", "kind" : "def"}, {"label" : "tail", "tail" : "(): Iterable[Array[Long]]", "member" : "scala.collection.TraversableLike.tail", "link" : "discount\/util\/KmerTable2.html#tail:Repr", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[Array[Long]]", "member" : "scala.collection.TraversableLike.headOption", "link" : "discount\/util\/KmerTable2.html#headOption:Option[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (Array[Long], B) ⇒ B)(bf: CanBuildFrom[Iterable[Array[Long]], B, That]): That", "member" : "scala.collection.TraversableLike.scanRight", "link" : "discount\/util\/KmerTable2.html#scanRight[B,That](z:B)(op:(A,B)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, Array[Long]) ⇒ B)(bf: CanBuildFrom[Iterable[Array[Long]], B, That]): That", "member" : "scala.collection.TraversableLike.scanLeft", "link" : "discount\/util\/KmerTable2.html#scanLeft[B,That](z:B)(op:(B,A)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) ⇒ B)(cbf: CanBuildFrom[Iterable[Array[Long]], B, That]): That", "member" : "scala.collection.TraversableLike.scan", "link" : "discount\/util\/KmerTable2.html#scan[B>:A,That](z:B)(op:(B,B)=>B)(implicitcbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (Array[Long]) ⇒ K): Map[K, Iterable[Array[Long]]]", "member" : "scala.collection.TraversableLike.groupBy", "link" : "discount\/util\/KmerTable2.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,Repr]", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (Array[Long]) ⇒ Boolean): (Iterable[Array[Long]], Iterable[Array[Long]])", "member" : "scala.collection.TraversableLike.partition", "link" : "discount\/util\/KmerTable2.html#partition(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Array[Long], B])(bf: CanBuildFrom[Iterable[Array[Long]], B, That]): That", "member" : "scala.collection.TraversableLike.collect", "link" : "discount\/util\/KmerTable2.html#collect[B,That](pf:PartialFunction[A,B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (Array[Long]) ⇒ Boolean): Iterable[Array[Long]]", "member" : "scala.collection.TraversableLike.filterNot", "link" : "discount\/util\/KmerTable2.html#filterNot(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (Array[Long]) ⇒ Boolean): Iterable[Array[Long]]", "member" : "scala.collection.TraversableLike.filter", "link" : "discount\/util\/KmerTable2.html#filter(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Array[Long]) ⇒ GenTraversableOnce[B])(bf: CanBuildFrom[Iterable[Array[Long]], B, That]): That", "member" : "scala.collection.TraversableLike.flatMap", "link" : "discount\/util\/KmerTable2.html#flatMap[B,That](f:A=>scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Array[Long]) ⇒ B)(bf: CanBuildFrom[Iterable[Array[Long]], B, That]): That", "member" : "scala.collection.TraversableLike.map", "link" : "discount\/util\/KmerTable2.html#map[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: Traversable[B])(bf: CanBuildFrom[Iterable[Array[Long]], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "discount\/util\/KmerTable2.html#++:[B>:A,That](that:Traversable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: TraversableOnce[B])(bf: CanBuildFrom[Iterable[Array[Long]], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "discount\/util\/KmerTable2.html#++:[B>:A,That](that:scala.collection.TraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++", "tail" : "(that: GenTraversableOnce[B])(bf: CanBuildFrom[Iterable[Array[Long]], B, That]): That", "member" : "scala.collection.TraversableLike.++", "link" : "discount\/util\/KmerTable2.html#++[B>:A,That](that:scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.hasDefiniteSize", "link" : "discount\/util\/KmerTable2.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "parCombiner", "tail" : "(): Combiner[Array[Long], ParIterable[Array[Long]]]", "member" : "scala.collection.TraversableLike.parCombiner", "link" : "discount\/util\/KmerTable2.html#parCombiner:scala.collection.parallel.Combiner[A,scala.collection.parallel.ParIterable[A]]", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.isTraversableAgain", "link" : "discount\/util\/KmerTable2.html#isTraversableAgain:Boolean", "kind" : "final def"}, {"label" : "repr", "tail" : "(): Iterable[Array[Long]]", "member" : "scala.collection.TraversableLike.repr", "link" : "discount\/util\/KmerTable2.html#repr:Repr", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "scala.collection.TraversableLike.Self", "link" : "discount\/util\/KmerTable2.html#Self=Repr", "kind" : "type"}, {"label" : "par", "tail" : "(): ParIterable[Array[Long]]", "member" : "scala.collection.Parallelizable.par", "link" : "discount\/util\/KmerTable2.html#par:ParRepr", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "discount\/util\/KmerTable2.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "discount\/util\/KmerTable2.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "discount\/util\/KmerTable2.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "discount\/util\/KmerTable2.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "discount\/util\/KmerTable2.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "discount\/util\/KmerTable2.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[Array[Long], (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "discount\/util\/KmerTable2.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[Array[Long]]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "discount\/util\/KmerTable2.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "discount\/util\/KmerTable2.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.TraversableOnce.toBuffer", "link" : "discount\/util\/KmerTable2.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[Array[Long]]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "discount\/util\/KmerTable2.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[Array[Long]]", "member" : "scala.collection.TraversableOnce.toSeq", "link" : "discount\/util\/KmerTable2.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[Array[Long]]", "member" : "scala.collection.TraversableOnce.toList", "link" : "discount\/util\/KmerTable2.html#toList:List[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.TraversableOnce.toArray", "link" : "discount\/util\/KmerTable2.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "discount\/util\/KmerTable2.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "discount\/util\/KmerTable2.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "discount\/util\/KmerTable2.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (Array[Long]) ⇒ B)(cmp: Ordering[B]): Array[Long]", "member" : "scala.collection.TraversableOnce.minBy", "link" : "discount\/util\/KmerTable2.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (Array[Long]) ⇒ B)(cmp: Ordering[B]): Array[Long]", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "discount\/util\/KmerTable2.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): Array[Long]", "member" : "scala.collection.TraversableOnce.max", "link" : "discount\/util\/KmerTable2.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): Array[Long]", "member" : "scala.collection.TraversableOnce.min", "link" : "discount\/util\/KmerTable2.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "discount\/util\/KmerTable2.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "discount\/util\/KmerTable2.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: ⇒ B)(seqop: (B, Array[Long]) ⇒ B, combop: (B, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "discount\/util\/KmerTable2.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "discount\/util\/KmerTable2.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) ⇒ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "discount\/util\/KmerTable2.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "discount\/util\/KmerTable2.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (Array[Long], B) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "discount\/util\/KmerTable2.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, Array[Long]) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "discount\/util\/KmerTable2.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, Array[Long]) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceLeft", "link" : "discount\/util\/KmerTable2.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, Array[Long]) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldLeft", "link" : "discount\/util\/KmerTable2.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (Array[Long], B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "discount\/util\/KmerTable2.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, Array[Long]) ⇒ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "discount\/util\/KmerTable2.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Array[Long], B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "discount\/util\/KmerTable2.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (Array[Long]) ⇒ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "discount\/util\/KmerTable2.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "discount\/util\/KmerTable2.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[Array[Long]]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "discount\/util\/KmerTable2.html#reversed:List[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.GenTraversableOnce.sizeHintIfCheap", "link" : "discount\/util\/KmerTable2.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "discount\/util\/KmerTable2.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "discount\/util\/KmerTable2.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "discount\/util\/KmerTable2.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "discount\/util\/KmerTable2.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "discount\/util\/KmerTable2.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "discount\/util\/KmerTable2.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "discount\/util\/KmerTable2.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/util\/KmerTable2.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/util\/KmerTable2.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/util\/KmerTable2.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "discount\/util\/KmerTable2.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "discount\/util\/KmerTable2.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "discount\/util\/KmerTable2.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "discount\/util\/KmerTable2.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "discount\/util\/KmerTable2.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "discount\/util\/KmerTable2.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "discount\/util\/KmerTable2.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "discount\/util\/KmerTable2.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "discount\/util\/KmerTable2.html", "kind" : "class"}, {"name" : "discount.util.KmerTable3", "shortDescription" : "Specialized KmerTable for n = 3 (k <= 96)", "members_class" : [{"label" : "WithFilter", "tail" : "", "member" : "scala.collection.TraversableLike.WithFilter", "link" : "discount\/util\/KmerTable3.html#WithFilterextendsFilterMonadic[A,Repr]", "kind" : "class"}, {"label" : "copyKmer", "tail" : "(i: Int): Array[Long]", "member" : "discount.util.KmerTable3.copyKmer", "link" : "discount\/util\/KmerTable3.html#copyKmer(i:Int):Array[Long]", "kind" : "def"}, {"label" : "equalKmers", "tail" : "(i: Int, kmer: Array[Long]): Boolean", "member" : "discount.util.KmerTable3.equalKmers", "link" : "discount\/util\/KmerTable3.html#equalKmers(i:Int,kmer:Array[Long]):Boolean", "kind" : "def"}, {"member" : "discount.util.KmerTable3#<init>", "error" : "unsupported entity"}, {"label" : "iterator", "tail" : "(): Iterator[Array[Long]]", "member" : "discount.util.KmerTable.iterator", "link" : "discount\/util\/KmerTable3.html#iterator:Iterator[Array[Long]]", "kind" : "def"}, {"label" : "countedKmers", "tail" : "(): Iterator[(Array[Long], Abundance)]", "member" : "discount.util.KmerTable.countedKmers", "link" : "discount\/util\/KmerTable3.html#countedKmers:Iterator[(Array[Long],discount.Abundance)]", "kind" : "def"}, {"label" : "size", "tail" : ": Int", "member" : "discount.util.KmerTable.size", "link" : "discount\/util\/KmerTable3.html#size:Int", "kind" : "val"}, {"label" : "seq", "tail" : "(): Iterable[Array[Long]]", "member" : "scala.collection.Iterable.seq", "link" : "discount\/util\/KmerTable3.html#seq:Iterable[A]", "kind" : "def"}, {"label" : "companion", "tail" : "(): GenericCompanion[Iterable]", "member" : "scala.collection.Iterable.companion", "link" : "discount\/util\/KmerTable3.html#companion:scala.collection.generic.GenericCompanion[Iterable]", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): IterableView[Array[Long], Iterable[Array[Long]]]", "member" : "scala.collection.IterableLike.view", "link" : "discount\/util\/KmerTable3.html#view(from:Int,until:Int):scala.collection.IterableView[A,Repr]", "kind" : "def"}, {"label" : "view", "tail" : "(): IterableView[Array[Long], Iterable[Array[Long]]]", "member" : "scala.collection.IterableLike.view", "link" : "discount\/util\/KmerTable3.html#view:scala.collection.IterableView[A,Repr]", "kind" : "def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.collection.IterableLike.canEqual", "link" : "discount\/util\/KmerTable3.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[Array[Long]]", "member" : "scala.collection.IterableLike.toStream", "link" : "discount\/util\/KmerTable3.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: GenIterable[B]): Boolean", "member" : "scala.collection.IterableLike.sameElements", "link" : "discount\/util\/KmerTable3.html#sameElements[B>:A](that:scala.collection.GenIterable[B]):Boolean", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(bf: CanBuildFrom[Iterable[Array[Long]], (A1, Int), That]): That", "member" : "scala.collection.IterableLike.zipWithIndex", "link" : "discount\/util\/KmerTable3.html#zipWithIndex[A1>:A,That](implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,Int),That]):That", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: GenIterable[B], thisElem: A1, thatElem: B)(bf: CanBuildFrom[Iterable[Array[Long]], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zipAll", "link" : "discount\/util\/KmerTable3.html#zipAll[B,A1>:A,That](that:scala.collection.GenIterable[B],thisElem:A1,thatElem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "zip", "tail" : "(that: GenIterable[B])(bf: CanBuildFrom[Iterable[Array[Long]], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zip", "link" : "discount\/util\/KmerTable3.html#zip[A1>:A,B,That](that:scala.collection.GenIterable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.IterableLike.copyToArray", "link" : "discount\/util\/KmerTable3.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): Iterable[Array[Long]]", "member" : "scala.collection.IterableLike.dropRight", "link" : "discount\/util\/KmerTable3.html#dropRight(n:Int):Repr", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): Iterable[Array[Long]]", "member" : "scala.collection.IterableLike.takeRight", "link" : "discount\/util\/KmerTable3.html#takeRight(n:Int):Repr", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): Iterator[Iterable[Array[Long]]]", "member" : "scala.collection.IterableLike.sliding", "link" : "discount\/util\/KmerTable3.html#sliding(size:Int,step:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): Iterator[Iterable[Array[Long]]]", "member" : "scala.collection.IterableLike.sliding", "link" : "discount\/util\/KmerTable3.html#sliding(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): Iterator[Iterable[Array[Long]]]", "member" : "scala.collection.IterableLike.grouped", "link" : "discount\/util\/KmerTable3.html#grouped(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (Array[Long]) ⇒ Boolean): Iterable[Array[Long]]", "member" : "scala.collection.IterableLike.takeWhile", "link" : "discount\/util\/KmerTable3.html#takeWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Iterable[Array[Long]]", "member" : "scala.collection.IterableLike.drop", "link" : "discount\/util\/KmerTable3.html#drop(n:Int):Repr", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Iterable[Array[Long]]", "member" : "scala.collection.IterableLike.take", "link" : "discount\/util\/KmerTable3.html#take(n:Int):Repr", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Iterable[Array[Long]]", "member" : "scala.collection.IterableLike.slice", "link" : "discount\/util\/KmerTable3.html#slice(from:Int,until:Int):Repr", "kind" : "def"}, {"label" : "head", "tail" : "(): Array[Long]", "member" : "scala.collection.IterableLike.head", "link" : "discount\/util\/KmerTable3.html#head:A", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[Array[Long]]", "member" : "scala.collection.IterableLike.toIterator", "link" : "discount\/util\/KmerTable3.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[Array[Long]]", "member" : "scala.collection.IterableLike.toIterable", "link" : "discount\/util\/KmerTable3.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (Array[Long], B) ⇒ B): B", "member" : "scala.collection.IterableLike.reduceRight", "link" : "discount\/util\/KmerTable3.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (Array[Long], B) ⇒ B): B", "member" : "scala.collection.IterableLike.foldRight", "link" : "discount\/util\/KmerTable3.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableLike.isEmpty", "link" : "discount\/util\/KmerTable3.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(p: (Array[Long]) ⇒ Boolean): Option[Array[Long]]", "member" : "scala.collection.IterableLike.find", "link" : "discount\/util\/KmerTable3.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (Array[Long]) ⇒ Boolean): Boolean", "member" : "scala.collection.IterableLike.exists", "link" : "discount\/util\/KmerTable3.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (Array[Long]) ⇒ Boolean): Boolean", "member" : "scala.collection.IterableLike.forall", "link" : "discount\/util\/KmerTable3.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Array[Long]) ⇒ U): Unit", "member" : "scala.collection.IterableLike.foreach", "link" : "discount\/util\/KmerTable3.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "toCollection", "tail" : "(repr: Iterable[Array[Long]]): Iterable[Array[Long]]", "member" : "scala.collection.IterableLike.toCollection", "link" : "discount\/util\/KmerTable3.html#toCollection(repr:Repr):Iterable[A]", "kind" : "def"}, {"label" : "thisCollection", "tail" : "(): Iterable[Array[Long]]", "member" : "scala.collection.IterableLike.thisCollection", "link" : "discount\/util\/KmerTable3.html#thisCollection:Iterable[A]", "kind" : "def"}, {"label" : "transpose", "tail" : "(asTraversable: (Array[Long]) ⇒ GenTraversableOnce[B]): Iterable[Iterable[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.transpose", "link" : "discount\/util\/KmerTable3.html#transpose[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "flatten", "tail" : "(asTraversable: (Array[Long]) ⇒ GenTraversableOnce[B]): Iterable[B]", "member" : "scala.collection.generic.GenericTraversableTemplate.flatten", "link" : "discount\/util\/KmerTable3.html#flatten[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (Array[Long]) ⇒ (A1, A2, A3)): (Iterable[A1], Iterable[A2], Iterable[A3])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip3", "link" : "discount\/util\/KmerTable3.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (Array[Long]) ⇒ (A1, A2)): (Iterable[A1], Iterable[A2])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip", "link" : "discount\/util\/KmerTable3.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "genericBuilder", "tail" : "(): Builder[B, Iterable[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.genericBuilder", "link" : "discount\/util\/KmerTable3.html#genericBuilder[B]:scala.collection.mutable.Builder[B,CC[B]]", "kind" : "def"}, {"label" : "newBuilder", "tail" : "(): Builder[Array[Long], Iterable[Array[Long]]]", "member" : "scala.collection.generic.GenericTraversableTemplate.newBuilder", "link" : "discount\/util\/KmerTable3.html#newBuilder:scala.collection.mutable.Builder[A,CC[A]]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (Array[Long]) ⇒ Boolean): FilterMonadic[Array[Long], Iterable[Array[Long]]]", "member" : "scala.collection.TraversableLike.withFilter", "link" : "discount\/util\/KmerTable3.html#withFilter(p:A=>Boolean):scala.collection.generic.FilterMonadic[A,Repr]", "kind" : "def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.TraversableLike.stringPrefix", "link" : "discount\/util\/KmerTable3.html#stringPrefix:String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.TraversableLike.toString", "link" : "discount\/util\/KmerTable3.html#toString():String", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, Array[Long], Col[Array[Long]]]): Col[Array[Long]]", "member" : "scala.collection.TraversableLike.to", "link" : "discount\/util\/KmerTable3.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[Array[Long]]", "member" : "scala.collection.TraversableLike.toTraversable", "link" : "discount\/util\/KmerTable3.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "inits", "tail" : "(): Iterator[Iterable[Array[Long]]]", "member" : "scala.collection.TraversableLike.inits", "link" : "discount\/util\/KmerTable3.html#inits:Iterator[Repr]", "kind" : "def"}, {"label" : "tails", "tail" : "(): Iterator[Iterable[Array[Long]]]", "member" : "scala.collection.TraversableLike.tails", "link" : "discount\/util\/KmerTable3.html#tails:Iterator[Repr]", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (Iterable[Array[Long]], Iterable[Array[Long]])", "member" : "scala.collection.TraversableLike.splitAt", "link" : "discount\/util\/KmerTable3.html#splitAt(n:Int):(Repr,Repr)", "kind" : "def"}, {"label" : "span", "tail" : "(p: (Array[Long]) ⇒ Boolean): (Iterable[Array[Long]], Iterable[Array[Long]])", "member" : "scala.collection.TraversableLike.span", "link" : "discount\/util\/KmerTable3.html#span(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (Array[Long]) ⇒ Boolean): Iterable[Array[Long]]", "member" : "scala.collection.TraversableLike.dropWhile", "link" : "discount\/util\/KmerTable3.html#dropWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "init", "tail" : "(): Iterable[Array[Long]]", "member" : "scala.collection.TraversableLike.init", "link" : "discount\/util\/KmerTable3.html#init:Repr", "kind" : "def"}, {"label" : "lastOption", "tail" : "(): Option[Array[Long]]", "member" : "scala.collection.TraversableLike.lastOption", "link" : "discount\/util\/KmerTable3.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "last", "tail" : "(): Array[Long]", "member" : "scala.collection.TraversableLike.last", "link" : "discount\/util\/KmerTable3.html#last:A", "kind" : "def"}, {"label" : "tail", "tail" : "(): Iterable[Array[Long]]", "member" : "scala.collection.TraversableLike.tail", "link" : "discount\/util\/KmerTable3.html#tail:Repr", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[Array[Long]]", "member" : "scala.collection.TraversableLike.headOption", "link" : "discount\/util\/KmerTable3.html#headOption:Option[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (Array[Long], B) ⇒ B)(bf: CanBuildFrom[Iterable[Array[Long]], B, That]): That", "member" : "scala.collection.TraversableLike.scanRight", "link" : "discount\/util\/KmerTable3.html#scanRight[B,That](z:B)(op:(A,B)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, Array[Long]) ⇒ B)(bf: CanBuildFrom[Iterable[Array[Long]], B, That]): That", "member" : "scala.collection.TraversableLike.scanLeft", "link" : "discount\/util\/KmerTable3.html#scanLeft[B,That](z:B)(op:(B,A)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) ⇒ B)(cbf: CanBuildFrom[Iterable[Array[Long]], B, That]): That", "member" : "scala.collection.TraversableLike.scan", "link" : "discount\/util\/KmerTable3.html#scan[B>:A,That](z:B)(op:(B,B)=>B)(implicitcbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (Array[Long]) ⇒ K): Map[K, Iterable[Array[Long]]]", "member" : "scala.collection.TraversableLike.groupBy", "link" : "discount\/util\/KmerTable3.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,Repr]", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (Array[Long]) ⇒ Boolean): (Iterable[Array[Long]], Iterable[Array[Long]])", "member" : "scala.collection.TraversableLike.partition", "link" : "discount\/util\/KmerTable3.html#partition(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Array[Long], B])(bf: CanBuildFrom[Iterable[Array[Long]], B, That]): That", "member" : "scala.collection.TraversableLike.collect", "link" : "discount\/util\/KmerTable3.html#collect[B,That](pf:PartialFunction[A,B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (Array[Long]) ⇒ Boolean): Iterable[Array[Long]]", "member" : "scala.collection.TraversableLike.filterNot", "link" : "discount\/util\/KmerTable3.html#filterNot(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (Array[Long]) ⇒ Boolean): Iterable[Array[Long]]", "member" : "scala.collection.TraversableLike.filter", "link" : "discount\/util\/KmerTable3.html#filter(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Array[Long]) ⇒ GenTraversableOnce[B])(bf: CanBuildFrom[Iterable[Array[Long]], B, That]): That", "member" : "scala.collection.TraversableLike.flatMap", "link" : "discount\/util\/KmerTable3.html#flatMap[B,That](f:A=>scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Array[Long]) ⇒ B)(bf: CanBuildFrom[Iterable[Array[Long]], B, That]): That", "member" : "scala.collection.TraversableLike.map", "link" : "discount\/util\/KmerTable3.html#map[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: Traversable[B])(bf: CanBuildFrom[Iterable[Array[Long]], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "discount\/util\/KmerTable3.html#++:[B>:A,That](that:Traversable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: TraversableOnce[B])(bf: CanBuildFrom[Iterable[Array[Long]], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "discount\/util\/KmerTable3.html#++:[B>:A,That](that:scala.collection.TraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++", "tail" : "(that: GenTraversableOnce[B])(bf: CanBuildFrom[Iterable[Array[Long]], B, That]): That", "member" : "scala.collection.TraversableLike.++", "link" : "discount\/util\/KmerTable3.html#++[B>:A,That](that:scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.hasDefiniteSize", "link" : "discount\/util\/KmerTable3.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "parCombiner", "tail" : "(): Combiner[Array[Long], ParIterable[Array[Long]]]", "member" : "scala.collection.TraversableLike.parCombiner", "link" : "discount\/util\/KmerTable3.html#parCombiner:scala.collection.parallel.Combiner[A,scala.collection.parallel.ParIterable[A]]", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.isTraversableAgain", "link" : "discount\/util\/KmerTable3.html#isTraversableAgain:Boolean", "kind" : "final def"}, {"label" : "repr", "tail" : "(): Iterable[Array[Long]]", "member" : "scala.collection.TraversableLike.repr", "link" : "discount\/util\/KmerTable3.html#repr:Repr", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "scala.collection.TraversableLike.Self", "link" : "discount\/util\/KmerTable3.html#Self=Repr", "kind" : "type"}, {"label" : "par", "tail" : "(): ParIterable[Array[Long]]", "member" : "scala.collection.Parallelizable.par", "link" : "discount\/util\/KmerTable3.html#par:ParRepr", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "discount\/util\/KmerTable3.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "discount\/util\/KmerTable3.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "discount\/util\/KmerTable3.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "discount\/util\/KmerTable3.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "discount\/util\/KmerTable3.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "discount\/util\/KmerTable3.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[Array[Long], (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "discount\/util\/KmerTable3.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[Array[Long]]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "discount\/util\/KmerTable3.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "discount\/util\/KmerTable3.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.TraversableOnce.toBuffer", "link" : "discount\/util\/KmerTable3.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[Array[Long]]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "discount\/util\/KmerTable3.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[Array[Long]]", "member" : "scala.collection.TraversableOnce.toSeq", "link" : "discount\/util\/KmerTable3.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[Array[Long]]", "member" : "scala.collection.TraversableOnce.toList", "link" : "discount\/util\/KmerTable3.html#toList:List[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.TraversableOnce.toArray", "link" : "discount\/util\/KmerTable3.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "discount\/util\/KmerTable3.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "discount\/util\/KmerTable3.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "discount\/util\/KmerTable3.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (Array[Long]) ⇒ B)(cmp: Ordering[B]): Array[Long]", "member" : "scala.collection.TraversableOnce.minBy", "link" : "discount\/util\/KmerTable3.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (Array[Long]) ⇒ B)(cmp: Ordering[B]): Array[Long]", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "discount\/util\/KmerTable3.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): Array[Long]", "member" : "scala.collection.TraversableOnce.max", "link" : "discount\/util\/KmerTable3.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): Array[Long]", "member" : "scala.collection.TraversableOnce.min", "link" : "discount\/util\/KmerTable3.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "discount\/util\/KmerTable3.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "discount\/util\/KmerTable3.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: ⇒ B)(seqop: (B, Array[Long]) ⇒ B, combop: (B, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "discount\/util\/KmerTable3.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "discount\/util\/KmerTable3.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) ⇒ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "discount\/util\/KmerTable3.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "discount\/util\/KmerTable3.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (Array[Long], B) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "discount\/util\/KmerTable3.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, Array[Long]) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "discount\/util\/KmerTable3.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, Array[Long]) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceLeft", "link" : "discount\/util\/KmerTable3.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, Array[Long]) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldLeft", "link" : "discount\/util\/KmerTable3.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (Array[Long], B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "discount\/util\/KmerTable3.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, Array[Long]) ⇒ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "discount\/util\/KmerTable3.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Array[Long], B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "discount\/util\/KmerTable3.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (Array[Long]) ⇒ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "discount\/util\/KmerTable3.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "discount\/util\/KmerTable3.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[Array[Long]]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "discount\/util\/KmerTable3.html#reversed:List[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.GenTraversableOnce.sizeHintIfCheap", "link" : "discount\/util\/KmerTable3.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "discount\/util\/KmerTable3.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "discount\/util\/KmerTable3.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "discount\/util\/KmerTable3.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "discount\/util\/KmerTable3.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "discount\/util\/KmerTable3.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "discount\/util\/KmerTable3.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "discount\/util\/KmerTable3.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/util\/KmerTable3.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/util\/KmerTable3.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/util\/KmerTable3.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "discount\/util\/KmerTable3.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "discount\/util\/KmerTable3.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "discount\/util\/KmerTable3.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "discount\/util\/KmerTable3.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "discount\/util\/KmerTable3.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "discount\/util\/KmerTable3.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "discount\/util\/KmerTable3.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "discount\/util\/KmerTable3.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "discount\/util\/KmerTable3.html", "kind" : "class"}, {"name" : "discount.util.KmerTableBuilder", "shortDescription" : "Builder for k-mer tables.", "members_class" : [{"label" : "result", "tail" : "(sort: Boolean): KmerTable", "member" : "discount.util.KmerTableBuilder.result", "link" : "discount\/util\/KmerTableBuilder.html#result(sort:Boolean):discount.util.KmerTable", "kind" : "def"}, {"label" : "addLong", "tail" : "(x: Long): Unit", "member" : "discount.util.KmerTableBuilder.addLong", "link" : "discount\/util\/KmerTableBuilder.html#addLong(x:Long):Unit", "kind" : "def"}, {"member" : "discount.util.KmerTableBuilder#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "discount\/util\/KmerTableBuilder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "discount\/util\/KmerTableBuilder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "discount\/util\/KmerTableBuilder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "discount\/util\/KmerTableBuilder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "discount\/util\/KmerTableBuilder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "discount\/util\/KmerTableBuilder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "discount\/util\/KmerTableBuilder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/util\/KmerTableBuilder.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/util\/KmerTableBuilder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/util\/KmerTableBuilder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "discount\/util\/KmerTableBuilder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "discount\/util\/KmerTableBuilder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "discount\/util\/KmerTableBuilder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "discount\/util\/KmerTableBuilder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "discount\/util\/KmerTableBuilder.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "discount\/util\/KmerTableBuilder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "discount\/util\/KmerTableBuilder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "discount\/util\/KmerTableBuilder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "discount\/util\/KmerTableBuilder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "discount\/util\/KmerTableBuilder.html", "kind" : "class"}, {"name" : "discount.util.KmerTableN", "shortDescription" : "General KmerTable for any value of n", "members_class" : [{"label" : "WithFilter", "tail" : "", "member" : "scala.collection.TraversableLike.WithFilter", "link" : "discount\/util\/KmerTableN.html#WithFilterextendsFilterMonadic[A,Repr]", "kind" : "class"}, {"label" : "copyKmer", "tail" : "(i: Int): Array[Long]", "member" : "discount.util.KmerTableN.copyKmer", "link" : "discount\/util\/KmerTableN.html#copyKmer(i:Int):Array[Long]", "kind" : "def"}, {"label" : "equalKmers", "tail" : "(i: Int, kmer: Array[Long]): Boolean", "member" : "discount.util.KmerTableN.equalKmers", "link" : "discount\/util\/KmerTableN.html#equalKmers(i:Int,kmer:Array[Long]):Boolean", "kind" : "def"}, {"member" : "discount.util.KmerTableN#<init>", "error" : "unsupported entity"}, {"label" : "iterator", "tail" : "(): Iterator[Array[Long]]", "member" : "discount.util.KmerTable.iterator", "link" : "discount\/util\/KmerTableN.html#iterator:Iterator[Array[Long]]", "kind" : "def"}, {"label" : "countedKmers", "tail" : "(): Iterator[(Array[Long], Abundance)]", "member" : "discount.util.KmerTable.countedKmers", "link" : "discount\/util\/KmerTableN.html#countedKmers:Iterator[(Array[Long],discount.Abundance)]", "kind" : "def"}, {"label" : "size", "tail" : ": Int", "member" : "discount.util.KmerTable.size", "link" : "discount\/util\/KmerTableN.html#size:Int", "kind" : "val"}, {"label" : "seq", "tail" : "(): Iterable[Array[Long]]", "member" : "scala.collection.Iterable.seq", "link" : "discount\/util\/KmerTableN.html#seq:Iterable[A]", "kind" : "def"}, {"label" : "companion", "tail" : "(): GenericCompanion[Iterable]", "member" : "scala.collection.Iterable.companion", "link" : "discount\/util\/KmerTableN.html#companion:scala.collection.generic.GenericCompanion[Iterable]", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): IterableView[Array[Long], Iterable[Array[Long]]]", "member" : "scala.collection.IterableLike.view", "link" : "discount\/util\/KmerTableN.html#view(from:Int,until:Int):scala.collection.IterableView[A,Repr]", "kind" : "def"}, {"label" : "view", "tail" : "(): IterableView[Array[Long], Iterable[Array[Long]]]", "member" : "scala.collection.IterableLike.view", "link" : "discount\/util\/KmerTableN.html#view:scala.collection.IterableView[A,Repr]", "kind" : "def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.collection.IterableLike.canEqual", "link" : "discount\/util\/KmerTableN.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[Array[Long]]", "member" : "scala.collection.IterableLike.toStream", "link" : "discount\/util\/KmerTableN.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: GenIterable[B]): Boolean", "member" : "scala.collection.IterableLike.sameElements", "link" : "discount\/util\/KmerTableN.html#sameElements[B>:A](that:scala.collection.GenIterable[B]):Boolean", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(bf: CanBuildFrom[Iterable[Array[Long]], (A1, Int), That]): That", "member" : "scala.collection.IterableLike.zipWithIndex", "link" : "discount\/util\/KmerTableN.html#zipWithIndex[A1>:A,That](implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,Int),That]):That", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: GenIterable[B], thisElem: A1, thatElem: B)(bf: CanBuildFrom[Iterable[Array[Long]], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zipAll", "link" : "discount\/util\/KmerTableN.html#zipAll[B,A1>:A,That](that:scala.collection.GenIterable[B],thisElem:A1,thatElem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "zip", "tail" : "(that: GenIterable[B])(bf: CanBuildFrom[Iterable[Array[Long]], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zip", "link" : "discount\/util\/KmerTableN.html#zip[A1>:A,B,That](that:scala.collection.GenIterable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.IterableLike.copyToArray", "link" : "discount\/util\/KmerTableN.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): Iterable[Array[Long]]", "member" : "scala.collection.IterableLike.dropRight", "link" : "discount\/util\/KmerTableN.html#dropRight(n:Int):Repr", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): Iterable[Array[Long]]", "member" : "scala.collection.IterableLike.takeRight", "link" : "discount\/util\/KmerTableN.html#takeRight(n:Int):Repr", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): Iterator[Iterable[Array[Long]]]", "member" : "scala.collection.IterableLike.sliding", "link" : "discount\/util\/KmerTableN.html#sliding(size:Int,step:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): Iterator[Iterable[Array[Long]]]", "member" : "scala.collection.IterableLike.sliding", "link" : "discount\/util\/KmerTableN.html#sliding(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): Iterator[Iterable[Array[Long]]]", "member" : "scala.collection.IterableLike.grouped", "link" : "discount\/util\/KmerTableN.html#grouped(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (Array[Long]) ⇒ Boolean): Iterable[Array[Long]]", "member" : "scala.collection.IterableLike.takeWhile", "link" : "discount\/util\/KmerTableN.html#takeWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Iterable[Array[Long]]", "member" : "scala.collection.IterableLike.drop", "link" : "discount\/util\/KmerTableN.html#drop(n:Int):Repr", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Iterable[Array[Long]]", "member" : "scala.collection.IterableLike.take", "link" : "discount\/util\/KmerTableN.html#take(n:Int):Repr", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Iterable[Array[Long]]", "member" : "scala.collection.IterableLike.slice", "link" : "discount\/util\/KmerTableN.html#slice(from:Int,until:Int):Repr", "kind" : "def"}, {"label" : "head", "tail" : "(): Array[Long]", "member" : "scala.collection.IterableLike.head", "link" : "discount\/util\/KmerTableN.html#head:A", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[Array[Long]]", "member" : "scala.collection.IterableLike.toIterator", "link" : "discount\/util\/KmerTableN.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[Array[Long]]", "member" : "scala.collection.IterableLike.toIterable", "link" : "discount\/util\/KmerTableN.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (Array[Long], B) ⇒ B): B", "member" : "scala.collection.IterableLike.reduceRight", "link" : "discount\/util\/KmerTableN.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (Array[Long], B) ⇒ B): B", "member" : "scala.collection.IterableLike.foldRight", "link" : "discount\/util\/KmerTableN.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableLike.isEmpty", "link" : "discount\/util\/KmerTableN.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "find", "tail" : "(p: (Array[Long]) ⇒ Boolean): Option[Array[Long]]", "member" : "scala.collection.IterableLike.find", "link" : "discount\/util\/KmerTableN.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (Array[Long]) ⇒ Boolean): Boolean", "member" : "scala.collection.IterableLike.exists", "link" : "discount\/util\/KmerTableN.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (Array[Long]) ⇒ Boolean): Boolean", "member" : "scala.collection.IterableLike.forall", "link" : "discount\/util\/KmerTableN.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Array[Long]) ⇒ U): Unit", "member" : "scala.collection.IterableLike.foreach", "link" : "discount\/util\/KmerTableN.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "toCollection", "tail" : "(repr: Iterable[Array[Long]]): Iterable[Array[Long]]", "member" : "scala.collection.IterableLike.toCollection", "link" : "discount\/util\/KmerTableN.html#toCollection(repr:Repr):Iterable[A]", "kind" : "def"}, {"label" : "thisCollection", "tail" : "(): Iterable[Array[Long]]", "member" : "scala.collection.IterableLike.thisCollection", "link" : "discount\/util\/KmerTableN.html#thisCollection:Iterable[A]", "kind" : "def"}, {"label" : "transpose", "tail" : "(asTraversable: (Array[Long]) ⇒ GenTraversableOnce[B]): Iterable[Iterable[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.transpose", "link" : "discount\/util\/KmerTableN.html#transpose[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "flatten", "tail" : "(asTraversable: (Array[Long]) ⇒ GenTraversableOnce[B]): Iterable[B]", "member" : "scala.collection.generic.GenericTraversableTemplate.flatten", "link" : "discount\/util\/KmerTableN.html#flatten[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (Array[Long]) ⇒ (A1, A2, A3)): (Iterable[A1], Iterable[A2], Iterable[A3])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip3", "link" : "discount\/util\/KmerTableN.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (Array[Long]) ⇒ (A1, A2)): (Iterable[A1], Iterable[A2])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip", "link" : "discount\/util\/KmerTableN.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "genericBuilder", "tail" : "(): Builder[B, Iterable[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.genericBuilder", "link" : "discount\/util\/KmerTableN.html#genericBuilder[B]:scala.collection.mutable.Builder[B,CC[B]]", "kind" : "def"}, {"label" : "newBuilder", "tail" : "(): Builder[Array[Long], Iterable[Array[Long]]]", "member" : "scala.collection.generic.GenericTraversableTemplate.newBuilder", "link" : "discount\/util\/KmerTableN.html#newBuilder:scala.collection.mutable.Builder[A,CC[A]]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (Array[Long]) ⇒ Boolean): FilterMonadic[Array[Long], Iterable[Array[Long]]]", "member" : "scala.collection.TraversableLike.withFilter", "link" : "discount\/util\/KmerTableN.html#withFilter(p:A=>Boolean):scala.collection.generic.FilterMonadic[A,Repr]", "kind" : "def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.TraversableLike.stringPrefix", "link" : "discount\/util\/KmerTableN.html#stringPrefix:String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.TraversableLike.toString", "link" : "discount\/util\/KmerTableN.html#toString():String", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, Array[Long], Col[Array[Long]]]): Col[Array[Long]]", "member" : "scala.collection.TraversableLike.to", "link" : "discount\/util\/KmerTableN.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[Array[Long]]", "member" : "scala.collection.TraversableLike.toTraversable", "link" : "discount\/util\/KmerTableN.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "inits", "tail" : "(): Iterator[Iterable[Array[Long]]]", "member" : "scala.collection.TraversableLike.inits", "link" : "discount\/util\/KmerTableN.html#inits:Iterator[Repr]", "kind" : "def"}, {"label" : "tails", "tail" : "(): Iterator[Iterable[Array[Long]]]", "member" : "scala.collection.TraversableLike.tails", "link" : "discount\/util\/KmerTableN.html#tails:Iterator[Repr]", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (Iterable[Array[Long]], Iterable[Array[Long]])", "member" : "scala.collection.TraversableLike.splitAt", "link" : "discount\/util\/KmerTableN.html#splitAt(n:Int):(Repr,Repr)", "kind" : "def"}, {"label" : "span", "tail" : "(p: (Array[Long]) ⇒ Boolean): (Iterable[Array[Long]], Iterable[Array[Long]])", "member" : "scala.collection.TraversableLike.span", "link" : "discount\/util\/KmerTableN.html#span(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (Array[Long]) ⇒ Boolean): Iterable[Array[Long]]", "member" : "scala.collection.TraversableLike.dropWhile", "link" : "discount\/util\/KmerTableN.html#dropWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "init", "tail" : "(): Iterable[Array[Long]]", "member" : "scala.collection.TraversableLike.init", "link" : "discount\/util\/KmerTableN.html#init:Repr", "kind" : "def"}, {"label" : "lastOption", "tail" : "(): Option[Array[Long]]", "member" : "scala.collection.TraversableLike.lastOption", "link" : "discount\/util\/KmerTableN.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "last", "tail" : "(): Array[Long]", "member" : "scala.collection.TraversableLike.last", "link" : "discount\/util\/KmerTableN.html#last:A", "kind" : "def"}, {"label" : "tail", "tail" : "(): Iterable[Array[Long]]", "member" : "scala.collection.TraversableLike.tail", "link" : "discount\/util\/KmerTableN.html#tail:Repr", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[Array[Long]]", "member" : "scala.collection.TraversableLike.headOption", "link" : "discount\/util\/KmerTableN.html#headOption:Option[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (Array[Long], B) ⇒ B)(bf: CanBuildFrom[Iterable[Array[Long]], B, That]): That", "member" : "scala.collection.TraversableLike.scanRight", "link" : "discount\/util\/KmerTableN.html#scanRight[B,That](z:B)(op:(A,B)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, Array[Long]) ⇒ B)(bf: CanBuildFrom[Iterable[Array[Long]], B, That]): That", "member" : "scala.collection.TraversableLike.scanLeft", "link" : "discount\/util\/KmerTableN.html#scanLeft[B,That](z:B)(op:(B,A)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) ⇒ B)(cbf: CanBuildFrom[Iterable[Array[Long]], B, That]): That", "member" : "scala.collection.TraversableLike.scan", "link" : "discount\/util\/KmerTableN.html#scan[B>:A,That](z:B)(op:(B,B)=>B)(implicitcbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (Array[Long]) ⇒ K): Map[K, Iterable[Array[Long]]]", "member" : "scala.collection.TraversableLike.groupBy", "link" : "discount\/util\/KmerTableN.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,Repr]", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (Array[Long]) ⇒ Boolean): (Iterable[Array[Long]], Iterable[Array[Long]])", "member" : "scala.collection.TraversableLike.partition", "link" : "discount\/util\/KmerTableN.html#partition(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Array[Long], B])(bf: CanBuildFrom[Iterable[Array[Long]], B, That]): That", "member" : "scala.collection.TraversableLike.collect", "link" : "discount\/util\/KmerTableN.html#collect[B,That](pf:PartialFunction[A,B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (Array[Long]) ⇒ Boolean): Iterable[Array[Long]]", "member" : "scala.collection.TraversableLike.filterNot", "link" : "discount\/util\/KmerTableN.html#filterNot(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (Array[Long]) ⇒ Boolean): Iterable[Array[Long]]", "member" : "scala.collection.TraversableLike.filter", "link" : "discount\/util\/KmerTableN.html#filter(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Array[Long]) ⇒ GenTraversableOnce[B])(bf: CanBuildFrom[Iterable[Array[Long]], B, That]): That", "member" : "scala.collection.TraversableLike.flatMap", "link" : "discount\/util\/KmerTableN.html#flatMap[B,That](f:A=>scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Array[Long]) ⇒ B)(bf: CanBuildFrom[Iterable[Array[Long]], B, That]): That", "member" : "scala.collection.TraversableLike.map", "link" : "discount\/util\/KmerTableN.html#map[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: Traversable[B])(bf: CanBuildFrom[Iterable[Array[Long]], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "discount\/util\/KmerTableN.html#++:[B>:A,That](that:Traversable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: TraversableOnce[B])(bf: CanBuildFrom[Iterable[Array[Long]], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "discount\/util\/KmerTableN.html#++:[B>:A,That](that:scala.collection.TraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++", "tail" : "(that: GenTraversableOnce[B])(bf: CanBuildFrom[Iterable[Array[Long]], B, That]): That", "member" : "scala.collection.TraversableLike.++", "link" : "discount\/util\/KmerTableN.html#++[B>:A,That](that:scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.hasDefiniteSize", "link" : "discount\/util\/KmerTableN.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "parCombiner", "tail" : "(): Combiner[Array[Long], ParIterable[Array[Long]]]", "member" : "scala.collection.TraversableLike.parCombiner", "link" : "discount\/util\/KmerTableN.html#parCombiner:scala.collection.parallel.Combiner[A,scala.collection.parallel.ParIterable[A]]", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.isTraversableAgain", "link" : "discount\/util\/KmerTableN.html#isTraversableAgain:Boolean", "kind" : "final def"}, {"label" : "repr", "tail" : "(): Iterable[Array[Long]]", "member" : "scala.collection.TraversableLike.repr", "link" : "discount\/util\/KmerTableN.html#repr:Repr", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "scala.collection.TraversableLike.Self", "link" : "discount\/util\/KmerTableN.html#Self=Repr", "kind" : "type"}, {"label" : "par", "tail" : "(): ParIterable[Array[Long]]", "member" : "scala.collection.Parallelizable.par", "link" : "discount\/util\/KmerTableN.html#par:ParRepr", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "discount\/util\/KmerTableN.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "discount\/util\/KmerTableN.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "discount\/util\/KmerTableN.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "discount\/util\/KmerTableN.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "discount\/util\/KmerTableN.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "discount\/util\/KmerTableN.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[Array[Long], (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "discount\/util\/KmerTableN.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[Array[Long]]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "discount\/util\/KmerTableN.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "discount\/util\/KmerTableN.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.TraversableOnce.toBuffer", "link" : "discount\/util\/KmerTableN.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[Array[Long]]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "discount\/util\/KmerTableN.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[Array[Long]]", "member" : "scala.collection.TraversableOnce.toSeq", "link" : "discount\/util\/KmerTableN.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[Array[Long]]", "member" : "scala.collection.TraversableOnce.toList", "link" : "discount\/util\/KmerTableN.html#toList:List[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.TraversableOnce.toArray", "link" : "discount\/util\/KmerTableN.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "discount\/util\/KmerTableN.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "discount\/util\/KmerTableN.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "discount\/util\/KmerTableN.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (Array[Long]) ⇒ B)(cmp: Ordering[B]): Array[Long]", "member" : "scala.collection.TraversableOnce.minBy", "link" : "discount\/util\/KmerTableN.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (Array[Long]) ⇒ B)(cmp: Ordering[B]): Array[Long]", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "discount\/util\/KmerTableN.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): Array[Long]", "member" : "scala.collection.TraversableOnce.max", "link" : "discount\/util\/KmerTableN.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): Array[Long]", "member" : "scala.collection.TraversableOnce.min", "link" : "discount\/util\/KmerTableN.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "discount\/util\/KmerTableN.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "discount\/util\/KmerTableN.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: ⇒ B)(seqop: (B, Array[Long]) ⇒ B, combop: (B, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "discount\/util\/KmerTableN.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "discount\/util\/KmerTableN.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) ⇒ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "discount\/util\/KmerTableN.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "discount\/util\/KmerTableN.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (Array[Long], B) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "discount\/util\/KmerTableN.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, Array[Long]) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "discount\/util\/KmerTableN.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, Array[Long]) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceLeft", "link" : "discount\/util\/KmerTableN.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, Array[Long]) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldLeft", "link" : "discount\/util\/KmerTableN.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (Array[Long], B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "discount\/util\/KmerTableN.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, Array[Long]) ⇒ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "discount\/util\/KmerTableN.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Array[Long], B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "discount\/util\/KmerTableN.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (Array[Long]) ⇒ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "discount\/util\/KmerTableN.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "discount\/util\/KmerTableN.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[Array[Long]]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "discount\/util\/KmerTableN.html#reversed:List[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.GenTraversableOnce.sizeHintIfCheap", "link" : "discount\/util\/KmerTableN.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "discount\/util\/KmerTableN.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "discount\/util\/KmerTableN.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "discount\/util\/KmerTableN.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "discount\/util\/KmerTableN.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "discount\/util\/KmerTableN.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "discount\/util\/KmerTableN.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "discount\/util\/KmerTableN.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/util\/KmerTableN.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/util\/KmerTableN.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/util\/KmerTableN.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "discount\/util\/KmerTableN.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "discount\/util\/KmerTableN.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "discount\/util\/KmerTableN.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "discount\/util\/KmerTableN.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "discount\/util\/KmerTableN.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "discount\/util\/KmerTableN.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "discount\/util\/KmerTableN.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "discount\/util\/KmerTableN.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "discount\/util\/KmerTableN.html", "kind" : "class"}, {"name" : "discount.util.LongArrays", "shortDescription" : "Adapted from Fastutil for Discount by Johan Nyström-Persson.", "members_class" : [{"member" : "discount.util.LongArrays#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "discount\/util\/LongArrays.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "discount\/util\/LongArrays.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "discount\/util\/LongArrays.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "discount\/util\/LongArrays.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "discount\/util\/LongArrays.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "discount\/util\/LongArrays.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "discount\/util\/LongArrays.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/util\/LongArrays.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/util\/LongArrays.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/util\/LongArrays.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "discount\/util\/LongArrays.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "discount\/util\/LongArrays.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "discount\/util\/LongArrays.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "discount\/util\/LongArrays.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "discount\/util\/LongArrays.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "discount\/util\/LongArrays.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "discount\/util\/LongArrays.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "discount\/util\/LongArrays.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "discount\/util\/LongArrays.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "discount\/util\/LongArrays.html", "kind" : "class"}, {"name" : "discount.util.NTBitArray", "members_trait" : [{"label" : "copyPartAsLongArray", "tail" : "(writeTo: Array[Long], offset: Int, size: Int): Unit", "member" : "discount.util.NTBitArray.copyPartAsLongArray", "link" : "discount\/util\/NTBitArray.html#copyPartAsLongArray(writeTo:Array[Long],offset:Int,size:Int):Unit", "kind" : "def"}, {"label" : "partAsLongArray", "tail" : "(offset: Int, size: Int): Array[Long]", "member" : "discount.util.NTBitArray.partAsLongArray", "link" : "discount\/util\/NTBitArray.html#partAsLongArray(offset:Int,size:Int):Array[Long]", "kind" : "final def"}, {"label" : "writeKmersToBuilder", "tail" : "(destination: KmerTableBuilder, k: Int, forwardOnly: Boolean): Unit", "member" : "discount.util.NTBitArray.writeKmersToBuilder", "link" : "discount\/util\/NTBitArray.html#writeKmersToBuilder(destination:discount.util.KmerTableBuilder,k:Int,forwardOnly:Boolean):Unit", "kind" : "def"}, {"label" : "kmersAsLongArrays", "tail" : "(k: Int, onlyForwardOrientation: Boolean): Iterator[Array[Long]]", "member" : "discount.util.NTBitArray.kmersAsLongArrays", "link" : "discount\/util\/NTBitArray.html#kmersAsLongArrays(k:Int,onlyForwardOrientation:Boolean):Iterator[Array[Long]]", "kind" : "def"}, {"label" : "kmers", "tail" : "(k: Int, onlyForwardOrientation: Boolean): Iterator[NTBitArray]", "member" : "discount.util.NTBitArray.kmers", "link" : "discount\/util\/NTBitArray.html#kmers(k:Int,onlyForwardOrientation:Boolean):Iterator[discount.util.NTBitArray]", "kind" : "def"}, {"label" : "apply", "tail" : "(pos: Int): Byte", "member" : "discount.util.NTBitArray.apply", "link" : "discount\/util\/NTBitArray.html#apply(pos:Int):Byte", "kind" : "def"}, {"label" : "sliceIsForwardOrientation", "tail" : "(pos: Int, size: Int): Boolean", "member" : "discount.util.NTBitArray.sliceIsForwardOrientation", "link" : "discount\/util\/NTBitArray.html#sliceIsForwardOrientation(pos:Int,size:Int):Boolean", "kind" : "def"}, {"label" : "sliceAsCopy", "tail" : "(offset: Int, length: Int): ZeroNTBitArray", "member" : "discount.util.NTBitArray.sliceAsCopy", "link" : "discount\/util\/NTBitArray.html#sliceAsCopy(offset:Int,length:Int):discount.util.ZeroNTBitArray", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, length: Int): NTBitArray", "member" : "discount.util.NTBitArray.slice", "link" : "discount\/util\/NTBitArray.html#slice(from:Int,length:Int):discount.util.NTBitArray", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "discount.util.NTBitArray.toString", "link" : "discount\/util\/NTBitArray.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "discount\/util\/NTBitArray.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "discount\/util\/NTBitArray.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "discount\/util\/NTBitArray.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "discount\/util\/NTBitArray.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "discount\/util\/NTBitArray.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "discount\/util\/NTBitArray.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "discount\/util\/NTBitArray.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/util\/NTBitArray.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/util\/NTBitArray.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/util\/NTBitArray.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "discount\/util\/NTBitArray.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "discount\/util\/NTBitArray.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "discount\/util\/NTBitArray.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "discount\/util\/NTBitArray.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "discount\/util\/NTBitArray.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "discount\/util\/NTBitArray.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "discount\/util\/NTBitArray.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "discount\/util\/NTBitArray.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "size", "tail" : "(): Int", "member" : "discount.util.NTBitArray.size", "link" : "discount\/util\/NTBitArray.html#size:Int", "kind" : "abstract def"}, {"label" : "offset", "tail" : "(): Int", "member" : "discount.util.NTBitArray.offset", "link" : "discount\/util\/NTBitArray.html#offset:Int", "kind" : "abstract def"}, {"label" : "data", "tail" : "(): Array[Long]", "member" : "discount.util.NTBitArray.data", "link" : "discount\/util\/NTBitArray.html#data:Array[Long]", "kind" : "abstract def"}], "shortDescription" : "", "object" : "discount\/util\/NTBitArray$.html", "members_object" : [{"label" : "longsToString", "tail" : "(buffer: ByteBuffer, builder: StringBuilder, data: Array[Long], offset: Int, size: Int): NTSeq", "member" : "discount.util.NTBitArray.longsToString", "link" : "discount\/util\/NTBitArray$.html#longsToString(buffer:java.nio.ByteBuffer,builder:StringBuilder,data:Array[Long],offset:Int,size:Int):discount.NTSeq", "kind" : "def"}, {"label" : "longsToString", "tail" : "(data: Array[Long], offset: Int, size: Int): NTSeq", "member" : "discount.util.NTBitArray.longsToString", "link" : "discount\/util\/NTBitArray$.html#longsToString(data:Array[Long],offset:Int,size:Int):discount.NTSeq", "kind" : "def"}, {"label" : "shiftLongKmerAndWrite", "tail" : "(data: Array[Long], newBP: Byte, k: Int, destination: KmerTableBuilder): Unit", "member" : "discount.util.NTBitArray.shiftLongKmerAndWrite", "link" : "discount\/util\/NTBitArray$.html#shiftLongKmerAndWrite(data:Array[Long],newBP:Byte,k:Int,destination:discount.util.KmerTableBuilder):Unit", "kind" : "def"}, {"label" : "shiftLongArrayKmerLeft", "tail" : "(data: Array[Long], newBP: Byte, k: Int): Unit", "member" : "discount.util.NTBitArray.shiftLongArrayKmerLeft", "link" : "discount\/util\/NTBitArray$.html#shiftLongArrayKmerLeft(data:Array[Long],newBP:Byte,k:Int):Unit", "kind" : "def"}, {"label" : "longBuffer", "tail" : "(size: Int): Array[Long]", "member" : "discount.util.NTBitArray.longBuffer", "link" : "discount\/util\/NTBitArray$.html#longBuffer(size:Int):Array[Long]", "kind" : "def"}, {"label" : "encode", "tail" : "(data: NTSeq): ZeroNTBitArray", "member" : "discount.util.NTBitArray.encode", "link" : "discount\/util\/NTBitArray$.html#encode(data:discount.NTSeq):discount.util.ZeroNTBitArray", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "discount\/util\/NTBitArray$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "discount\/util\/NTBitArray$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "discount\/util\/NTBitArray$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "discount\/util\/NTBitArray$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "discount\/util\/NTBitArray$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "discount\/util\/NTBitArray$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "discount\/util\/NTBitArray$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/util\/NTBitArray$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/util\/NTBitArray$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/util\/NTBitArray$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "discount\/util\/NTBitArray$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "discount\/util\/NTBitArray$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "discount\/util\/NTBitArray$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "discount\/util\/NTBitArray$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "discount\/util\/NTBitArray$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "discount\/util\/NTBitArray$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "discount\/util\/NTBitArray$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "discount\/util\/NTBitArray$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "discount\/util\/NTBitArray$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "discount\/util\/NTBitArray.html", "kind" : "object"}, {"name" : "discount.util.OffsetNTBitArray", "shortDescription" : "An NTBitArray that begins at some offset in its binary data", "members_case class" : [{"member" : "discount.util.OffsetNTBitArray#<init>", "error" : "unsupported entity"}, {"label" : "size", "tail" : ": Int", "member" : "discount.util.OffsetNTBitArray.size", "link" : "discount\/util\/OffsetNTBitArray.html#size:Int", "kind" : "val"}, {"label" : "offset", "tail" : ": Int", "member" : "discount.util.OffsetNTBitArray.offset", "link" : "discount\/util\/OffsetNTBitArray.html#offset:Int", "kind" : "val"}, {"label" : "data", "tail" : ": Array[Long]", "member" : "discount.util.OffsetNTBitArray.data", "link" : "discount\/util\/OffsetNTBitArray.html#data:Array[Long]", "kind" : "val"}, {"label" : "copyPartAsLongArray", "tail" : "(writeTo: Array[Long], offset: Int, size: Int): Unit", "member" : "discount.util.NTBitArray.copyPartAsLongArray", "link" : "discount\/util\/OffsetNTBitArray.html#copyPartAsLongArray(writeTo:Array[Long],offset:Int,size:Int):Unit", "kind" : "def"}, {"label" : "partAsLongArray", "tail" : "(offset: Int, size: Int): Array[Long]", "member" : "discount.util.NTBitArray.partAsLongArray", "link" : "discount\/util\/OffsetNTBitArray.html#partAsLongArray(offset:Int,size:Int):Array[Long]", "kind" : "final def"}, {"label" : "writeKmersToBuilder", "tail" : "(destination: KmerTableBuilder, k: Int, forwardOnly: Boolean): Unit", "member" : "discount.util.NTBitArray.writeKmersToBuilder", "link" : "discount\/util\/OffsetNTBitArray.html#writeKmersToBuilder(destination:discount.util.KmerTableBuilder,k:Int,forwardOnly:Boolean):Unit", "kind" : "def"}, {"label" : "kmersAsLongArrays", "tail" : "(k: Int, onlyForwardOrientation: Boolean): Iterator[Array[Long]]", "member" : "discount.util.NTBitArray.kmersAsLongArrays", "link" : "discount\/util\/OffsetNTBitArray.html#kmersAsLongArrays(k:Int,onlyForwardOrientation:Boolean):Iterator[Array[Long]]", "kind" : "def"}, {"label" : "kmers", "tail" : "(k: Int, onlyForwardOrientation: Boolean): Iterator[NTBitArray]", "member" : "discount.util.NTBitArray.kmers", "link" : "discount\/util\/OffsetNTBitArray.html#kmers(k:Int,onlyForwardOrientation:Boolean):Iterator[discount.util.NTBitArray]", "kind" : "def"}, {"label" : "apply", "tail" : "(pos: Int): Byte", "member" : "discount.util.NTBitArray.apply", "link" : "discount\/util\/OffsetNTBitArray.html#apply(pos:Int):Byte", "kind" : "def"}, {"label" : "sliceIsForwardOrientation", "tail" : "(pos: Int, size: Int): Boolean", "member" : "discount.util.NTBitArray.sliceIsForwardOrientation", "link" : "discount\/util\/OffsetNTBitArray.html#sliceIsForwardOrientation(pos:Int,size:Int):Boolean", "kind" : "def"}, {"label" : "sliceAsCopy", "tail" : "(offset: Int, length: Int): ZeroNTBitArray", "member" : "discount.util.NTBitArray.sliceAsCopy", "link" : "discount\/util\/OffsetNTBitArray.html#sliceAsCopy(offset:Int,length:Int):discount.util.ZeroNTBitArray", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, length: Int): NTBitArray", "member" : "discount.util.NTBitArray.slice", "link" : "discount\/util\/OffsetNTBitArray.html#slice(from:Int,length:Int):discount.util.NTBitArray", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "discount.util.NTBitArray.toString", "link" : "discount\/util\/OffsetNTBitArray.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "discount\/util\/OffsetNTBitArray.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "discount\/util\/OffsetNTBitArray.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "discount\/util\/OffsetNTBitArray.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "discount\/util\/OffsetNTBitArray.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "discount\/util\/OffsetNTBitArray.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "discount\/util\/OffsetNTBitArray.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "discount\/util\/OffsetNTBitArray.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/util\/OffsetNTBitArray.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/util\/OffsetNTBitArray.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/util\/OffsetNTBitArray.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "discount\/util\/OffsetNTBitArray.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "discount\/util\/OffsetNTBitArray.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "discount\/util\/OffsetNTBitArray.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "discount\/util\/OffsetNTBitArray.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "discount\/util\/OffsetNTBitArray.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "discount\/util\/OffsetNTBitArray.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "discount\/util\/OffsetNTBitArray.html", "kind" : "case class"}, {"name" : "discount.util.ZeroNTBitArray", "shortDescription" : "An NTBitArray that begins at offset zero in its binary data", "members_case class" : [{"label" : "offset", "tail" : "(): Int", "member" : "discount.util.ZeroNTBitArray.offset", "link" : "discount\/util\/ZeroNTBitArray.html#offset:Int", "kind" : "def"}, {"member" : "discount.util.ZeroNTBitArray#<init>", "error" : "unsupported entity"}, {"label" : "size", "tail" : ": Int", "member" : "discount.util.ZeroNTBitArray.size", "link" : "discount\/util\/ZeroNTBitArray.html#size:Int", "kind" : "val"}, {"label" : "data", "tail" : ": Array[Long]", "member" : "discount.util.ZeroNTBitArray.data", "link" : "discount\/util\/ZeroNTBitArray.html#data:Array[Long]", "kind" : "val"}, {"label" : "copyPartAsLongArray", "tail" : "(writeTo: Array[Long], offset: Int, size: Int): Unit", "member" : "discount.util.NTBitArray.copyPartAsLongArray", "link" : "discount\/util\/ZeroNTBitArray.html#copyPartAsLongArray(writeTo:Array[Long],offset:Int,size:Int):Unit", "kind" : "def"}, {"label" : "partAsLongArray", "tail" : "(offset: Int, size: Int): Array[Long]", "member" : "discount.util.NTBitArray.partAsLongArray", "link" : "discount\/util\/ZeroNTBitArray.html#partAsLongArray(offset:Int,size:Int):Array[Long]", "kind" : "final def"}, {"label" : "writeKmersToBuilder", "tail" : "(destination: KmerTableBuilder, k: Int, forwardOnly: Boolean): Unit", "member" : "discount.util.NTBitArray.writeKmersToBuilder", "link" : "discount\/util\/ZeroNTBitArray.html#writeKmersToBuilder(destination:discount.util.KmerTableBuilder,k:Int,forwardOnly:Boolean):Unit", "kind" : "def"}, {"label" : "kmersAsLongArrays", "tail" : "(k: Int, onlyForwardOrientation: Boolean): Iterator[Array[Long]]", "member" : "discount.util.NTBitArray.kmersAsLongArrays", "link" : "discount\/util\/ZeroNTBitArray.html#kmersAsLongArrays(k:Int,onlyForwardOrientation:Boolean):Iterator[Array[Long]]", "kind" : "def"}, {"label" : "kmers", "tail" : "(k: Int, onlyForwardOrientation: Boolean): Iterator[NTBitArray]", "member" : "discount.util.NTBitArray.kmers", "link" : "discount\/util\/ZeroNTBitArray.html#kmers(k:Int,onlyForwardOrientation:Boolean):Iterator[discount.util.NTBitArray]", "kind" : "def"}, {"label" : "apply", "tail" : "(pos: Int): Byte", "member" : "discount.util.NTBitArray.apply", "link" : "discount\/util\/ZeroNTBitArray.html#apply(pos:Int):Byte", "kind" : "def"}, {"label" : "sliceIsForwardOrientation", "tail" : "(pos: Int, size: Int): Boolean", "member" : "discount.util.NTBitArray.sliceIsForwardOrientation", "link" : "discount\/util\/ZeroNTBitArray.html#sliceIsForwardOrientation(pos:Int,size:Int):Boolean", "kind" : "def"}, {"label" : "sliceAsCopy", "tail" : "(offset: Int, length: Int): ZeroNTBitArray", "member" : "discount.util.NTBitArray.sliceAsCopy", "link" : "discount\/util\/ZeroNTBitArray.html#sliceAsCopy(offset:Int,length:Int):discount.util.ZeroNTBitArray", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, length: Int): NTBitArray", "member" : "discount.util.NTBitArray.slice", "link" : "discount\/util\/ZeroNTBitArray.html#slice(from:Int,length:Int):discount.util.NTBitArray", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "discount.util.NTBitArray.toString", "link" : "discount\/util\/ZeroNTBitArray.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "discount\/util\/ZeroNTBitArray.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "discount\/util\/ZeroNTBitArray.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "discount\/util\/ZeroNTBitArray.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "discount\/util\/ZeroNTBitArray.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "discount\/util\/ZeroNTBitArray.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "discount\/util\/ZeroNTBitArray.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "discount\/util\/ZeroNTBitArray.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/util\/ZeroNTBitArray.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/util\/ZeroNTBitArray.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/util\/ZeroNTBitArray.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "discount\/util\/ZeroNTBitArray.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "discount\/util\/ZeroNTBitArray.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "discount\/util\/ZeroNTBitArray.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "discount\/util\/ZeroNTBitArray.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "discount\/util\/ZeroNTBitArray.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "discount\/util\/ZeroNTBitArray.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "discount\/util\/ZeroNTBitArray.html", "kind" : "case class"}], "discount.spark" : [{"name" : "discount.spark.CountedKmers", "shortDescription" : "A set of counted k-mers represented in binary form.", "members_class" : [{"label" : "write", "tail" : "(withKmers: Boolean, output: String, tsvFormat: Boolean): Unit", "member" : "discount.spark.CountedKmers.write", "link" : "discount\/spark\/CountedKmers.html#write(withKmers:Boolean,output:String,tsvFormat:Boolean):Unit", "kind" : "def"}, {"label" : "writeHistogram", "tail" : "(output: String): Unit", "member" : "discount.spark.CountedKmers.writeHistogram", "link" : "discount\/spark\/CountedKmers.html#writeHistogram(output:String):Unit", "kind" : "def"}, {"label" : "withSequences", "tail" : "(): Dataset[(NTSeq, Abundance)]", "member" : "discount.spark.CountedKmers.withSequences", "link" : "discount\/spark\/CountedKmers.html#withSequences:org.apache.spark.sql.Dataset[(discount.NTSeq,discount.Abundance)]", "kind" : "def"}, {"label" : "histogram", "tail" : "(): Dataset[(Abundance, Long)]", "member" : "discount.spark.CountedKmers.histogram", "link" : "discount\/spark\/CountedKmers.html#histogram:org.apache.spark.sql.Dataset[(discount.Abundance,Long)]", "kind" : "def"}, {"label" : "unpersist", "tail" : "(): CountedKmers.this.type", "member" : "discount.spark.CountedKmers.unpersist", "link" : "discount\/spark\/CountedKmers.html#unpersist():CountedKmers.this.type", "kind" : "def"}, {"label" : "cache", "tail" : "(): CountedKmers.this.type", "member" : "discount.spark.CountedKmers.cache", "link" : "discount\/spark\/CountedKmers.html#cache():CountedKmers.this.type", "kind" : "def"}, {"member" : "discount.spark.CountedKmers#<init>", "error" : "unsupported entity"}, {"label" : "counts", "tail" : ": Dataset[(Array[Long], Abundance)]", "member" : "discount.spark.CountedKmers.counts", "link" : "discount\/spark\/CountedKmers.html#counts:org.apache.spark.sql.Dataset[(Array[Long],discount.Abundance)]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "discount\/spark\/CountedKmers.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "discount\/spark\/CountedKmers.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "discount\/spark\/CountedKmers.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "discount\/spark\/CountedKmers.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "discount\/spark\/CountedKmers.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "discount\/spark\/CountedKmers.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "discount\/spark\/CountedKmers.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/spark\/CountedKmers.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/spark\/CountedKmers.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/spark\/CountedKmers.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "discount\/spark\/CountedKmers.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "discount\/spark\/CountedKmers.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "discount\/spark\/CountedKmers.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "discount\/spark\/CountedKmers.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "discount\/spark\/CountedKmers.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "discount\/spark\/CountedKmers.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "discount\/spark\/CountedKmers.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "discount\/spark\/CountedKmers.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "discount\/spark\/CountedKmers.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "discount\/spark\/CountedKmers.html", "kind" : "class"}, {"name" : "discount.spark.CountFilter", "shortDescription" : "Min\/max abundance filtering for k-mer counts", "members_case class" : [{"label" : "filter", "tail" : "(x: (Array[Long], Abundance)): Boolean", "member" : "discount.spark.CountFilter.filter", "link" : "discount\/spark\/CountFilter.html#filter(x:(Array[Long],discount.Abundance)):Boolean", "kind" : "def"}, {"label" : "maxValue", "tail" : ": Long", "member" : "discount.spark.CountFilter.maxValue", "link" : "discount\/spark\/CountFilter.html#maxValue:Long", "kind" : "val"}, {"label" : "minValue", "tail" : ": Long", "member" : "discount.spark.CountFilter.minValue", "link" : "discount\/spark\/CountFilter.html#minValue:Long", "kind" : "val"}, {"label" : "active", "tail" : ": Boolean", "member" : "discount.spark.CountFilter.active", "link" : "discount\/spark\/CountFilter.html#active:Boolean", "kind" : "val"}, {"member" : "discount.spark.CountFilter#<init>", "error" : "unsupported entity"}, {"label" : "max", "tail" : ": Option[Abundance]", "member" : "discount.spark.CountFilter.max", "link" : "discount\/spark\/CountFilter.html#max:Option[discount.Abundance]", "kind" : "val"}, {"label" : "min", "tail" : ": Option[Abundance]", "member" : "discount.spark.CountFilter.min", "link" : "discount\/spark\/CountFilter.html#min:Option[discount.Abundance]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "discount\/spark\/CountFilter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "discount\/spark\/CountFilter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "discount\/spark\/CountFilter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "discount\/spark\/CountFilter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "discount\/spark\/CountFilter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "discount\/spark\/CountFilter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "discount\/spark\/CountFilter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/spark\/CountFilter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/spark\/CountFilter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/spark\/CountFilter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "discount\/spark\/CountFilter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "discount\/spark\/CountFilter.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "discount\/spark\/CountFilter.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "discount\/spark\/CountFilter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "discount\/spark\/CountFilter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "discount\/spark\/CountFilter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "discount\/spark\/CountFilter.html", "kind" : "case class"}, {"name" : "discount.spark.Counting", "shortDescription" : "Serialization-safe methods for counting", "object" : "discount\/spark\/Counting$.html", "members_object" : [{"label" : "showStats", "tail" : "(stats: Dataset[BucketStats]): Unit", "member" : "discount.spark.Counting.showStats", "link" : "discount\/spark\/Counting$.html#showStats(stats:org.apache.spark.sql.Dataset[discount.bucket.BucketStats]):Unit", "kind" : "def"}, {"label" : "writeFastaCounts", "tail" : "(allKmers: Dataset[(NTSeq, Long)], writeLocation: String)(spark: SparkSession): Unit", "member" : "discount.spark.Counting.writeFastaCounts", "link" : "discount\/spark\/Counting$.html#writeFastaCounts(allKmers:org.apache.spark.sql.Dataset[(discount.NTSeq,Long)],writeLocation:String)(implicitspark:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "writeCountsTable", "tail" : "(allKmers: Dataset[A], writeLocation: String): Unit", "member" : "discount.spark.Counting.writeCountsTable", "link" : "discount\/spark\/Counting$.html#writeCountsTable[A](allKmers:org.apache.spark.sql.Dataset[A],writeLocation:String):Unit", "kind" : "def"}, {"label" : "countsFromSequences", "tail" : "(segments: Iterable[NTBitArray], k: Int, forwardOnly: Boolean): Iterator[(Array[Long], Abundance)]", "member" : "discount.spark.Counting.countsFromSequences", "link" : "discount\/spark\/Counting$.html#countsFromSequences(segments:Iterable[discount.util.NTBitArray],k:Int,forwardOnly:Boolean):Iterator[(Array[Long],discount.Abundance)]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "discount\/spark\/Counting$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "discount\/spark\/Counting$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "discount\/spark\/Counting$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "discount\/spark\/Counting$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "discount\/spark\/Counting$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "discount\/spark\/Counting$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "discount\/spark\/Counting$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/spark\/Counting$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/spark\/Counting$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/spark\/Counting$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "discount\/spark\/Counting$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "discount\/spark\/Counting$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "discount\/spark\/Counting$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "discount\/spark\/Counting$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "discount\/spark\/Counting$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "discount\/spark\/Counting$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "discount\/spark\/Counting$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "discount\/spark\/Counting$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "discount\/spark\/Counting$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "discount.spark.Discount", "shortDescription" : "Main Spark API entry point for Discount.", "object" : "discount\/spark\/Discount$.html", "members_object" : [{"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "discount.spark.Discount.main", "link" : "discount\/spark\/Discount$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "spark", "tail" : ": SparkSession", "member" : "discount.spark.SparkTool.spark", "link" : "discount\/spark\/Discount$.html#spark:org.apache.spark.sql.SparkSession", "kind" : "lazy val"}, {"label" : "conf", "tail" : "(): SparkConf", "member" : "discount.spark.SparkTool.conf", "link" : "discount\/spark\/Discount$.html#conf:org.apache.spark.SparkConf", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "discount\/spark\/Discount$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "discount\/spark\/Discount$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "discount\/spark\/Discount$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "discount\/spark\/Discount$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "discount\/spark\/Discount$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "discount\/spark\/Discount$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "discount\/spark\/Discount$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/spark\/Discount$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/spark\/Discount$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/spark\/Discount$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "discount\/spark\/Discount$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "discount\/spark\/Discount$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "discount\/spark\/Discount$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "discount\/spark\/Discount$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "discount\/spark\/Discount$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "discount\/spark\/Discount$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "discount\/spark\/Discount$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "discount\/spark\/Discount$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "discount\/spark\/Discount$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "kmers", "tail" : "(inFile: String): Kmers", "member" : "discount.spark.Discount.kmers", "link" : "discount\/spark\/Discount.html#kmers(inFile:String):discount.spark.Kmers", "kind" : "def"}, {"label" : "kmers", "tail" : "(inFiles: List[String]): Kmers", "member" : "discount.spark.Discount.kmers", "link" : "discount\/spark\/Discount.html#kmers(inFiles:List[String]):discount.spark.Kmers", "kind" : "def"}, {"label" : "getSplitter", "tail" : "(inFiles: Option[String], persistHash: Option[String]): MinSplitter", "member" : "discount.spark.Discount.getSplitter", "link" : "discount\/spark\/Discount.html#getSplitter(inFiles:Option[String],persistHash:Option[String]):discount.hash.MinSplitter", "kind" : "def"}, {"label" : "getInputSequences", "tail" : "(input: String, sample: Option[Double]): Dataset[NTSeq]", "member" : "discount.spark.Discount.getInputSequences", "link" : "discount\/spark\/Discount.html#getInputSequences(input:String,sample:Option[Double]):org.apache.spark.sql.Dataset[discount.NTSeq]", "kind" : "def"}, {"label" : "inputReader", "tail" : "(): InputReader", "member" : "discount.spark.Discount.inputReader", "link" : "discount\/spark\/Discount.html#inputReader:discount.spark.InputReader", "kind" : "def"}, {"member" : "discount.spark.Discount#<init>", "error" : "unsupported entity"}, {"label" : "normalize", "tail" : ": Boolean", "member" : "discount.spark.Discount.normalize", "link" : "discount\/spark\/Discount.html#normalize:Boolean", "kind" : "val"}, {"label" : "rna", "tail" : ": Boolean", "member" : "discount.spark.Discount.rna", "link" : "discount\/spark\/Discount.html#rna:Boolean", "kind" : "val"}, {"label" : "longSequences", "tail" : ": Boolean", "member" : "discount.spark.Discount.longSequences", "link" : "discount\/spark\/Discount.html#longSequences:Boolean", "kind" : "val"}, {"label" : "multiline", "tail" : ": Boolean", "member" : "discount.spark.Discount.multiline", "link" : "discount\/spark\/Discount.html#multiline:Boolean", "kind" : "val"}, {"label" : "maxSequenceLength", "tail" : ": Int", "member" : "discount.spark.Discount.maxSequenceLength", "link" : "discount\/spark\/Discount.html#maxSequenceLength:Int", "kind" : "val"}, {"label" : "samplePartitions", "tail" : ": Int", "member" : "discount.spark.Discount.samplePartitions", "link" : "discount\/spark\/Discount.html#samplePartitions:Int", "kind" : "val"}, {"label" : "sample", "tail" : ": Double", "member" : "discount.spark.Discount.sample", "link" : "discount\/spark\/Discount.html#sample:Double", "kind" : "val"}, {"label" : "ordering", "tail" : ": String", "member" : "discount.spark.Discount.ordering", "link" : "discount\/spark\/Discount.html#ordering:String", "kind" : "val"}, {"label" : "m", "tail" : ": Int", "member" : "discount.spark.Discount.m", "link" : "discount\/spark\/Discount.html#m:Int", "kind" : "val"}, {"label" : "minimizersFile", "tail" : ": Option[String]", "member" : "discount.spark.Discount.minimizersFile", "link" : "discount\/spark\/Discount.html#minimizersFile:Option[String]", "kind" : "val"}, {"label" : "k", "tail" : ": Int", "member" : "discount.spark.Discount.k", "link" : "discount\/spark\/Discount.html#k:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "discount\/spark\/Discount.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "discount\/spark\/Discount.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "discount\/spark\/Discount.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "discount\/spark\/Discount.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "discount\/spark\/Discount.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "discount\/spark\/Discount.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "discount\/spark\/Discount.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/spark\/Discount.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/spark\/Discount.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/spark\/Discount.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "discount\/spark\/Discount.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "discount\/spark\/Discount.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "discount\/spark\/Discount.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "discount\/spark\/Discount.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "discount\/spark\/Discount.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "discount\/spark\/Discount.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "discount\/spark\/Discount.html", "kind" : "case class"}, {"name" : "discount.spark.DiscountSparkConf", "shortDescription" : "", "members_class" : [{"label" : "stats", "tail" : ": RunnableCommand", "member" : "discount.spark.DiscountSparkConf.stats", "link" : "discount\/spark\/DiscountSparkConf.html#stats:discount.RunnableCommand", "kind" : "val"}, {"label" : "count", "tail" : ": RunnableCommand { ... \/* 6 definitions in type refinement *\/ }", "member" : "discount.spark.DiscountSparkConf.count", "link" : "discount\/spark\/DiscountSparkConf.html#count:discount.RunnableCommand{valoutput:org.rogach.scallop.ScallopOption[String];valtsv:org.rogach.scallop.ScallopOption[Boolean];valsequence:org.rogach.scallop.ScallopOption[Boolean];valsuperkmers:org.rogach.scallop.ScallopOption[Boolean];valhistogram:org.rogach.scallop.ScallopOption[Boolean];valbuckets:org.rogach.scallop.ScallopOption[Boolean]}", "kind" : "val"}, {"label" : "max", "tail" : ": ScallopOption[Long]", "member" : "discount.spark.DiscountSparkConf.max", "link" : "discount\/spark\/DiscountSparkConf.html#max:org.rogach.scallop.ScallopOption[Long]", "kind" : "val"}, {"label" : "min", "tail" : ": ScallopOption[Long]", "member" : "discount.spark.DiscountSparkConf.min", "link" : "discount\/spark\/DiscountSparkConf.html#min:org.rogach.scallop.ScallopOption[Long]", "kind" : "val"}, {"label" : "inFiles", "tail" : ": ScallopOption[List[String]]", "member" : "discount.spark.DiscountSparkConf.inFiles", "link" : "discount\/spark\/DiscountSparkConf.html#inFiles:org.rogach.scallop.ScallopOption[List[String]]", "kind" : "val"}, {"member" : "discount.spark.DiscountSparkConf#<init>", "error" : "unsupported entity"}, {"label" : "getIndexSplitter", "tail" : "(location: String): MinSplitter", "member" : "discount.spark.SparkToolConf.getIndexSplitter", "link" : "discount\/spark\/DiscountSparkConf.html#getIndexSplitter(location:String):discount.hash.MinSplitter", "kind" : "def"}, {"label" : "discount", "tail" : ": Discount", "member" : "discount.spark.SparkToolConf.discount", "link" : "discount\/spark\/DiscountSparkConf.html#discount:discount.spark.Discount", "kind" : "lazy val"}, {"label" : "sampling", "tail" : "(): Sampling", "member" : "discount.spark.SparkToolConf.sampling", "link" : "discount\/spark\/DiscountSparkConf.html#sampling:discount.spark.Sampling", "kind" : "def"}, {"label" : "multiline", "tail" : ": ScallopOption[Boolean]", "member" : "discount.Configuration.multiline", "link" : "discount\/spark\/DiscountSparkConf.html#multiline:org.rogach.scallop.ScallopOption[Boolean]", "kind" : "val"}, {"label" : "maxSequenceLength", "tail" : ": ScallopOption[Int]", "member" : "discount.Configuration.maxSequenceLength", "link" : "discount\/spark\/DiscountSparkConf.html#maxSequenceLength:org.rogach.scallop.ScallopOption[Int]", "kind" : "val"}, {"label" : "templateSpace", "tail" : "(): MotifSpace", "member" : "discount.Configuration.templateSpace", "link" : "discount\/spark\/DiscountSparkConf.html#templateSpace:discount.hash.MotifSpace", "kind" : "def"}, {"label" : "long", "tail" : ": ScallopOption[Boolean]", "member" : "discount.Configuration.long", "link" : "discount\/spark\/DiscountSparkConf.html#long:org.rogach.scallop.ScallopOption[Boolean]", "kind" : "val"}, {"label" : "rna", "tail" : ": ScallopOption[Boolean]", "member" : "discount.Configuration.rna", "link" : "discount\/spark\/DiscountSparkConf.html#rna:org.rogach.scallop.ScallopOption[Boolean]", "kind" : "val"}, {"label" : "minimizers", "tail" : ": ScallopOption[String]", "member" : "discount.Configuration.minimizers", "link" : "discount\/spark\/DiscountSparkConf.html#minimizers:org.rogach.scallop.ScallopOption[String]", "kind" : "val"}, {"label" : "samplePartitions", "tail" : ": ScallopOption[Int]", "member" : "discount.Configuration.samplePartitions", "link" : "discount\/spark\/DiscountSparkConf.html#samplePartitions:org.rogach.scallop.ScallopOption[Int]", "kind" : "val"}, {"label" : "sample", "tail" : ": ScallopOption[Double]", "member" : "discount.Configuration.sample", "link" : "discount\/spark\/DiscountSparkConf.html#sample:org.rogach.scallop.ScallopOption[Double]", "kind" : "val"}, {"label" : "minimizerWidth", "tail" : ": ScallopOption[Int]", "member" : "discount.Configuration.minimizerWidth", "link" : "discount\/spark\/DiscountSparkConf.html#minimizerWidth:org.rogach.scallop.ScallopOption[Int]", "kind" : "val"}, {"label" : "ordering", "tail" : ": ScallopOption[String]", "member" : "discount.Configuration.ordering", "link" : "discount\/spark\/DiscountSparkConf.html#ordering:org.rogach.scallop.ScallopOption[String]", "kind" : "val"}, {"label" : "normalize", "tail" : ": ScallopOption[Boolean]", "member" : "discount.Configuration.normalize", "link" : "discount\/spark\/DiscountSparkConf.html#normalize:org.rogach.scallop.ScallopOption[Boolean]", "kind" : "val"}, {"label" : "k", "tail" : ": ScallopOption[Int]", "member" : "discount.Configuration.k", "link" : "discount\/spark\/DiscountSparkConf.html#k:org.rogach.scallop.ScallopOption[Int]", "kind" : "val"}, {"label" : "performOptionNameGuessing", "tail" : "(): Unit", "member" : "org.rogach.scallop.ScallopConf.performOptionNameGuessing", "link" : "discount\/spark\/DiscountSparkConf.html#performOptionNameGuessing():Unit", "kind" : "def"}, {"label" : "guessOptionName_=", "tail" : "(v: Boolean): Unit", "member" : "org.rogach.scallop.ScallopConf.guessOptionName_=", "link" : "discount\/spark\/DiscountSparkConf.html#guessOptionName_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "guessOptionName", "tail" : "(): Boolean", "member" : "org.rogach.scallop.ScallopConf.guessOptionName", "link" : "discount\/spark\/DiscountSparkConf.html#guessOptionName:Boolean", "kind" : "def"}, {"label" : "optionNameGuessingSupported", "tail" : "(): Boolean", "member" : "org.rogach.scallop.ScallopConf.optionNameGuessingSupported", "link" : "discount\/spark\/DiscountSparkConf.html#optionNameGuessingSupported:Boolean", "kind" : "def"}, {"label" : "verify", "tail" : "(): Unit", "member" : "org.rogach.scallop.ScallopConfBase.verify", "link" : "discount\/spark\/DiscountSparkConf.html#verify():Unit", "kind" : "def"}, {"label" : "shortSubcommandsHelp", "tail" : "(enable: Boolean): Unit", "member" : "org.rogach.scallop.ScallopConfBase.shortSubcommandsHelp", "link" : "discount\/spark\/DiscountSparkConf.html#shortSubcommandsHelp(enable:Boolean):Unit", "kind" : "def"}, {"label" : "helpWidth", "tail" : "(w: Int): Unit", "member" : "org.rogach.scallop.ScallopConfBase.helpWidth", "link" : "discount\/spark\/DiscountSparkConf.html#helpWidth(w:Int):Unit", "kind" : "def"}, {"label" : "footer", "tail" : "(f: String): Unit", "member" : "org.rogach.scallop.ScallopConfBase.footer", "link" : "discount\/spark\/DiscountSparkConf.html#footer(f:String):Unit", "kind" : "def"}, {"label" : "banner", "tail" : "(b: String): Unit", "member" : "org.rogach.scallop.ScallopConfBase.banner", "link" : "discount\/spark\/DiscountSparkConf.html#banner(b:String):Unit", "kind" : "def"}, {"label" : "version", "tail" : "(v: String): Unit", "member" : "org.rogach.scallop.ScallopConfBase.version", "link" : "discount\/spark\/DiscountSparkConf.html#version(v:String):Unit", "kind" : "def"}, {"label" : "printHelp", "tail" : "(): Unit", "member" : "org.rogach.scallop.ScallopConfBase.printHelp", "link" : "discount\/spark\/DiscountSparkConf.html#printHelp():Unit", "kind" : "def"}, {"label" : "getHelpString", "tail" : "(): String", "member" : "org.rogach.scallop.ScallopConfBase.getHelpString", "link" : "discount\/spark\/DiscountSparkConf.html#getHelpString():String", "kind" : "def"}, {"label" : "filteredSummary", "tail" : "(blurred: Set[String]): String", "member" : "org.rogach.scallop.ScallopConfBase.filteredSummary", "link" : "discount\/spark\/DiscountSparkConf.html#filteredSummary(blurred:Set[String]):String", "kind" : "def"}, {"label" : "summary", "tail" : "(): String", "member" : "org.rogach.scallop.ScallopConfBase.summary", "link" : "discount\/spark\/DiscountSparkConf.html#summary:String", "kind" : "def"}, {"label" : "requireSubcommand", "tail" : "(): Unit", "member" : "org.rogach.scallop.ScallopConfBase.requireSubcommand", "link" : "discount\/spark\/DiscountSparkConf.html#requireSubcommand():Unit", "kind" : "def"}, {"label" : "validatePathsIsFile", "tail" : "(pathsOption: ScallopOption[List[Path]]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.validatePathsIsFile", "link" : "discount\/spark\/DiscountSparkConf.html#validatePathsIsFile(pathsOption:org.rogach.scallop.ScallopOption[List[java.nio.file.Path]]):Unit", "kind" : "def"}, {"label" : "validatePathsIsDirectory", "tail" : "(pathsOption: ScallopOption[List[Path]]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.validatePathsIsDirectory", "link" : "discount\/spark\/DiscountSparkConf.html#validatePathsIsDirectory(pathsOption:org.rogach.scallop.ScallopOption[List[java.nio.file.Path]]):Unit", "kind" : "def"}, {"label" : "validatePathsDoesNotExist", "tail" : "(pathsOption: ScallopOption[List[Path]]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.validatePathsDoesNotExist", "link" : "discount\/spark\/DiscountSparkConf.html#validatePathsDoesNotExist(pathsOption:org.rogach.scallop.ScallopOption[List[java.nio.file.Path]]):Unit", "kind" : "def"}, {"label" : "validatePathsExists", "tail" : "(pathsOption: ScallopOption[List[Path]]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.validatePathsExists", "link" : "discount\/spark\/DiscountSparkConf.html#validatePathsExists(pathsOption:org.rogach.scallop.ScallopOption[List[java.nio.file.Path]]):Unit", "kind" : "def"}, {"label" : "validatePathIsFile", "tail" : "(pathOption: ScallopOption[Path]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.validatePathIsFile", "link" : "discount\/spark\/DiscountSparkConf.html#validatePathIsFile(pathOption:org.rogach.scallop.ScallopOption[java.nio.file.Path]):Unit", "kind" : "def"}, {"label" : "validatePathIsDirectory", "tail" : "(pathOption: ScallopOption[Path]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.validatePathIsDirectory", "link" : "discount\/spark\/DiscountSparkConf.html#validatePathIsDirectory(pathOption:org.rogach.scallop.ScallopOption[java.nio.file.Path]):Unit", "kind" : "def"}, {"label" : "validatePathDoesNotExist", "tail" : "(pathOption: ScallopOption[Path]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.validatePathDoesNotExist", "link" : "discount\/spark\/DiscountSparkConf.html#validatePathDoesNotExist(pathOption:org.rogach.scallop.ScallopOption[java.nio.file.Path]):Unit", "kind" : "def"}, {"label" : "validatePathExists", "tail" : "(pathOption: ScallopOption[Path]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.validatePathExists", "link" : "discount\/spark\/DiscountSparkConf.html#validatePathExists(pathOption:org.rogach.scallop.ScallopOption[java.nio.file.Path]):Unit", "kind" : "def"}, {"label" : "validateFilesIsFile", "tail" : "(filesOption: ScallopOption[List[File]]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.validateFilesIsFile", "link" : "discount\/spark\/DiscountSparkConf.html#validateFilesIsFile(filesOption:org.rogach.scallop.ScallopOption[List[java.io.File]]):Unit", "kind" : "def"}, {"label" : "validateFilesIsDirectory", "tail" : "(filesOption: ScallopOption[List[File]]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.validateFilesIsDirectory", "link" : "discount\/spark\/DiscountSparkConf.html#validateFilesIsDirectory(filesOption:org.rogach.scallop.ScallopOption[List[java.io.File]]):Unit", "kind" : "def"}, {"label" : "validateFilesDoNotExist", "tail" : "(filesOption: ScallopOption[List[File]]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.validateFilesDoNotExist", "link" : "discount\/spark\/DiscountSparkConf.html#validateFilesDoNotExist(filesOption:org.rogach.scallop.ScallopOption[List[java.io.File]]):Unit", "kind" : "def"}, {"label" : "validateFilesExist", "tail" : "(filesOption: ScallopOption[List[File]]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.validateFilesExist", "link" : "discount\/spark\/DiscountSparkConf.html#validateFilesExist(filesOption:org.rogach.scallop.ScallopOption[List[java.io.File]]):Unit", "kind" : "def"}, {"label" : "validateFileIsFile", "tail" : "(fileOption: ScallopOption[File]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.validateFileIsFile", "link" : "discount\/spark\/DiscountSparkConf.html#validateFileIsFile(fileOption:org.rogach.scallop.ScallopOption[java.io.File]):Unit", "kind" : "def"}, {"label" : "validateFileIsDirectory", "tail" : "(fileOption: ScallopOption[File]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.validateFileIsDirectory", "link" : "discount\/spark\/DiscountSparkConf.html#validateFileIsDirectory(fileOption:org.rogach.scallop.ScallopOption[java.io.File]):Unit", "kind" : "def"}, {"label" : "validateFileDoesNotExist", "tail" : "(fileOption: ScallopOption[File]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.validateFileDoesNotExist", "link" : "discount\/spark\/DiscountSparkConf.html#validateFileDoesNotExist(fileOption:org.rogach.scallop.ScallopOption[java.io.File]):Unit", "kind" : "def"}, {"label" : "validateFileExists", "tail" : "(fileOption: ScallopOption[File]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.validateFileExists", "link" : "discount\/spark\/DiscountSparkConf.html#validateFileExists(fileOption:org.rogach.scallop.ScallopOption[java.io.File]):Unit", "kind" : "def"}, {"label" : "allDefinedOrUndefined", "tail" : "(list: ScallopOption[_]*): Unit", "member" : "org.rogach.scallop.ScallopConfBase.allDefinedOrUndefined", "link" : "discount\/spark\/DiscountSparkConf.html#allDefinedOrUndefined(list:org.rogach.scallop.ScallopOption[_]*):Unit", "kind" : "def"}, {"label" : "codependent", "tail" : "(list: ScallopOption[_]*): Unit", "member" : "org.rogach.scallop.ScallopConfBase.codependent", "link" : "discount\/spark\/DiscountSparkConf.html#codependent(list:org.rogach.scallop.ScallopOption[_]*):Unit", "kind" : "def"}, {"label" : "mutuallyExclusive", "tail" : "(list: ScallopOption[_]*): Unit", "member" : "org.rogach.scallop.ScallopConfBase.mutuallyExclusive", "link" : "discount\/spark\/DiscountSparkConf.html#mutuallyExclusive(list:org.rogach.scallop.ScallopOption[_]*):Unit", "kind" : "def"}, {"label" : "requireOne", "tail" : "(list: ScallopOption[_]*): Unit", "member" : "org.rogach.scallop.ScallopConfBase.requireOne", "link" : "discount\/spark\/DiscountSparkConf.html#requireOne(list:org.rogach.scallop.ScallopOption[_]*):Unit", "kind" : "def"}, {"label" : "requireAtLeastOne", "tail" : "(list: ScallopOption[_]*): Unit", "member" : "org.rogach.scallop.ScallopConfBase.requireAtLeastOne", "link" : "discount\/spark\/DiscountSparkConf.html#requireAtLeastOne(list:org.rogach.scallop.ScallopOption[_]*):Unit", "kind" : "def"}, {"label" : "conflicts", "tail" : "(opt: ScallopOption[_], list: List[ScallopOption[_]]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.conflicts", "link" : "discount\/spark\/DiscountSparkConf.html#conflicts(opt:org.rogach.scallop.ScallopOption[_],list:List[org.rogach.scallop.ScallopOption[_]]):Unit", "kind" : "def"}, {"label" : "dependsOnAll", "tail" : "(opt: ScallopOption[_], list: List[ScallopOption[_]]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.dependsOnAll", "link" : "discount\/spark\/DiscountSparkConf.html#dependsOnAll(opt:org.rogach.scallop.ScallopOption[_],list:List[org.rogach.scallop.ScallopOption[_]]):Unit", "kind" : "def"}, {"label" : "dependsOnAny", "tail" : "(opt: ScallopOption[_], list: List[ScallopOption[_]]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.dependsOnAny", "link" : "discount\/spark\/DiscountSparkConf.html#dependsOnAny(opt:org.rogach.scallop.ScallopOption[_],list:List[org.rogach.scallop.ScallopOption[_]]):Unit", "kind" : "def"}, {"label" : "addValidation", "tail" : "(fn: ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.addValidation", "link" : "discount\/spark\/DiscountSparkConf.html#addValidation(fn:=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "assertVerified", "tail" : "(): Unit", "member" : "org.rogach.scallop.ScallopConfBase.assertVerified", "link" : "discount\/spark\/DiscountSparkConf.html#assertVerified():Unit", "kind" : "def"}, {"label" : "onError", "tail" : "(e: Throwable): Unit", "member" : "org.rogach.scallop.ScallopConfBase.onError", "link" : "discount\/spark\/DiscountSparkConf.html#onError(e:Throwable):Unit", "kind" : "def"}, {"label" : "errorMessageHandler", "tail" : ": (String) ⇒ Unit", "member" : "org.rogach.scallop.ScallopConfBase.errorMessageHandler", "link" : "discount\/spark\/DiscountSparkConf.html#errorMessageHandler:String=>Unit", "kind" : "var"}, {"label" : "printedName", "tail" : ": String", "member" : "org.rogach.scallop.ScallopConfBase.printedName", "link" : "discount\/spark\/DiscountSparkConf.html#printedName:String", "kind" : "var"}, {"label" : "group", "tail" : "(header: String): ScallopOptionGroup", "member" : "org.rogach.scallop.ScallopConfBase.group", "link" : "discount\/spark\/DiscountSparkConf.html#group(header:String):org.rogach.scallop.ScallopOptionGroup", "kind" : "def"}, {"label" : "mainOptions_=", "tail" : "(newMainOptions: ⇒ Seq[ScallopOption[_]]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.mainOptions_=", "link" : "discount\/spark\/DiscountSparkConf.html#mainOptions_=(newMainOptions:=>Seq[org.rogach.scallop.ScallopOption[_]]):Unit", "kind" : "def"}, {"label" : "mainOptions", "tail" : "(): Seq[CliOption]", "member" : "org.rogach.scallop.ScallopConfBase.mainOptions", "link" : "discount\/spark\/DiscountSparkConf.html#mainOptions:Seq[org.rogach.scallop.CliOption]", "kind" : "def"}, {"label" : "toggle", "tail" : "(name: String, default: ⇒ Option[Boolean], short: Char, noshort: Boolean, prefix: String, descrYes: String, descrNo: String, hidden: Boolean, group: ScallopOptionGroup): ScallopOption[Boolean]", "member" : "org.rogach.scallop.ScallopConfBase.toggle", "link" : "discount\/spark\/DiscountSparkConf.html#toggle(name:String,default:=>Option[Boolean],short:Char,noshort:Boolean,prefix:String,descrYes:String,descrNo:String,hidden:Boolean,group:org.rogach.scallop.ScallopOptionGroup):org.rogach.scallop.ScallopOption[Boolean]", "kind" : "def"}, {"label" : "number", "tail" : "(name: String, descr: String, validate: (Long) ⇒ Boolean, required: Boolean, default: ⇒ Option[Long], hidden: Boolean, group: ScallopOptionGroup)(conv: ValueConverter[Long]): ScallopOption[Long]", "member" : "org.rogach.scallop.ScallopConfBase.number", "link" : "discount\/spark\/DiscountSparkConf.html#number(name:String,descr:String,validate:Long=>Boolean,required:Boolean,default:=>Option[Long],hidden:Boolean,group:org.rogach.scallop.ScallopOptionGroup)(implicitconv:org.rogach.scallop.ValueConverter[Long]):org.rogach.scallop.ScallopOption[Long]", "kind" : "def"}, {"label" : "trailArg", "tail" : "(name: String, descr: String, validate: (A) ⇒ Boolean, required: Boolean, default: ⇒ Option[A], hidden: Boolean, group: ScallopOptionGroup)(conv: ValueConverter[A]): ScallopOption[A]", "member" : "org.rogach.scallop.ScallopConfBase.trailArg", "link" : "discount\/spark\/DiscountSparkConf.html#trailArg[A](name:String,descr:String,validate:A=>Boolean,required:Boolean,default:=>Option[A],hidden:Boolean,group:org.rogach.scallop.ScallopOptionGroup)(implicitconv:org.rogach.scallop.ValueConverter[A]):org.rogach.scallop.ScallopOption[A]", "kind" : "def"}, {"label" : "propsLong", "tail" : "(name: String, descr: String, keyName: String, valueName: String, hidden: Boolean, group: ScallopOptionGroup)(conv: ValueConverter[Map[String, A]]): Map[String, A]", "member" : "org.rogach.scallop.ScallopConfBase.propsLong", "link" : "discount\/spark\/DiscountSparkConf.html#propsLong[A](name:String,descr:String,keyName:String,valueName:String,hidden:Boolean,group:org.rogach.scallop.ScallopOptionGroup)(implicitconv:org.rogach.scallop.ValueConverter[Map[String,A]]):Map[String,A]", "kind" : "def"}, {"label" : "props", "tail" : "(name: Char, descr: String, keyName: String, valueName: String, hidden: Boolean, group: ScallopOptionGroup)(conv: ValueConverter[Map[String, A]]): LazyMap[String, A]", "member" : "org.rogach.scallop.ScallopConfBase.props", "link" : "discount\/spark\/DiscountSparkConf.html#props[A](name:Char,descr:String,keyName:String,valueName:String,hidden:Boolean,group:org.rogach.scallop.ScallopOptionGroup)(implicitconv:org.rogach.scallop.ValueConverter[Map[String,A]]):org.rogach.scallop.LazyMap[String,A]", "kind" : "def"}, {"label" : "tally", "tail" : "(name: String, short: Char, descr: String, hidden: Boolean, noshort: Boolean, group: ScallopOptionGroup): ScallopOption[Int]", "member" : "org.rogach.scallop.ScallopConfBase.tally", "link" : "discount\/spark\/DiscountSparkConf.html#tally(name:String,short:Char,descr:String,hidden:Boolean,noshort:Boolean,group:org.rogach.scallop.ScallopOptionGroup):org.rogach.scallop.ScallopOption[Int]", "kind" : "def"}, {"label" : "choice", "tail" : "(choices: Seq[String], name: String, short: Char, descr: String, default: ⇒ Option[String], required: Boolean, argName: String, hidden: Boolean, noshort: Boolean, group: ScallopOptionGroup): ScallopOption[String]", "member" : "org.rogach.scallop.ScallopConfBase.choice", "link" : "discount\/spark\/DiscountSparkConf.html#choice(choices:Seq[String],name:String,short:Char,descr:String,default:=>Option[String],required:Boolean,argName:String,hidden:Boolean,noshort:Boolean,group:org.rogach.scallop.ScallopOptionGroup):org.rogach.scallop.ScallopOption[String]", "kind" : "def"}, {"label" : "opt", "tail" : "(name: String, short: Char, descr: String, default: ⇒ Option[A], validate: (A) ⇒ Boolean, required: Boolean, argName: String, hidden: Boolean, noshort: Boolean, group: ScallopOptionGroup)(conv: ValueConverter[A]): ScallopOption[A]", "member" : "org.rogach.scallop.ScallopConfBase.opt", "link" : "discount\/spark\/DiscountSparkConf.html#opt[A](name:String,short:Char,descr:String,default:=>Option[A],validate:A=>Boolean,required:Boolean,argName:String,hidden:Boolean,noshort:Boolean,group:org.rogach.scallop.ScallopOptionGroup)(implicitconv:org.rogach.scallop.ValueConverter[A]):org.rogach.scallop.ScallopOption[A]", "kind" : "def"}, {"label" : "subcommands", "tail" : "(): List[ScallopConfBase]", "member" : "org.rogach.scallop.ScallopConfBase.subcommands", "link" : "discount\/spark\/DiscountSparkConf.html#subcommands:List[org.rogach.scallop.ScallopConfBase]", "kind" : "def"}, {"label" : "subcommand", "tail" : "(): Option[ScallopConfBase]", "member" : "org.rogach.scallop.ScallopConfBase.subcommand", "link" : "discount\/spark\/DiscountSparkConf.html#subcommand:Option[org.rogach.scallop.ScallopConfBase]", "kind" : "def"}, {"label" : "noshort_=", "tail" : "(v: Boolean): Unit", "member" : "org.rogach.scallop.ScallopConfBase.noshort_=", "link" : "discount\/spark\/DiscountSparkConf.html#noshort_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "noshort", "tail" : "(): Boolean", "member" : "org.rogach.scallop.ScallopConfBase.noshort", "link" : "discount\/spark\/DiscountSparkConf.html#noshort:Boolean", "kind" : "def"}, {"label" : "helpFormatter_=", "tail" : "(formatter: ScallopHelpFormatter): Unit", "member" : "org.rogach.scallop.ScallopConfBase.helpFormatter_=", "link" : "discount\/spark\/DiscountSparkConf.html#helpFormatter_=(formatter:org.rogach.scallop.ScallopHelpFormatter):Unit", "kind" : "def"}, {"label" : "helpFormatter", "tail" : "(): ScallopHelpFormatter", "member" : "org.rogach.scallop.ScallopConfBase.helpFormatter", "link" : "discount\/spark\/DiscountSparkConf.html#helpFormatter:org.rogach.scallop.ScallopHelpFormatter", "kind" : "def"}, {"label" : "appendDefaultToDescription_=", "tail" : "(v: Boolean): Unit", "member" : "org.rogach.scallop.ScallopConfBase.appendDefaultToDescription_=", "link" : "discount\/spark\/DiscountSparkConf.html#appendDefaultToDescription_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "appendDefaultToDescription", "tail" : "(): Boolean", "member" : "org.rogach.scallop.ScallopConfBase.appendDefaultToDescription", "link" : "discount\/spark\/DiscountSparkConf.html#appendDefaultToDescription:Boolean", "kind" : "def"}, {"label" : "_guessOptionName", "tail" : ": Boolean", "member" : "org.rogach.scallop.ScallopConfBase._guessOptionName", "link" : "discount\/spark\/DiscountSparkConf.html#_guessOptionName:Boolean", "kind" : "var"}, {"label" : "builder", "tail" : ": Scallop", "member" : "org.rogach.scallop.ScallopConfBase.builder", "link" : "discount\/spark\/DiscountSparkConf.html#builder:org.rogach.scallop.Scallop", "kind" : "var"}, {"label" : "addSubcommand", "tail" : "(conf: Subcommand): Unit", "member" : "org.rogach.scallop.ScallopConfBase.addSubcommand", "link" : "discount\/spark\/DiscountSparkConf.html#addSubcommand(conf:org.rogach.scallop.Subcommand):Unit", "kind" : "def"}, {"label" : "subconfigs", "tail" : ": Seq[ScallopConfBase]", "member" : "org.rogach.scallop.ScallopConfBase.subconfigs", "link" : "discount\/spark\/DiscountSparkConf.html#subconfigs:Seq[org.rogach.scallop.ScallopConfBase]", "kind" : "var"}, {"label" : "isRootConfig", "tail" : ": Boolean", "member" : "org.rogach.scallop.ScallopConfBase.isRootConfig", "link" : "discount\/spark\/DiscountSparkConf.html#isRootConfig:Boolean", "kind" : "var"}, {"label" : "parentConfig", "tail" : ": ScallopConfBase", "member" : "org.rogach.scallop.ScallopConfBase.parentConfig", "link" : "discount\/spark\/DiscountSparkConf.html#parentConfig:org.rogach.scallop.ScallopConfBase", "kind" : "var"}, {"label" : "commandNameAndAliases", "tail" : ": Seq[String]", "member" : "org.rogach.scallop.ScallopConfBase.commandNameAndAliases", "link" : "discount\/spark\/DiscountSparkConf.html#commandNameAndAliases:Seq[String]", "kind" : "val"}, {"label" : "args", "tail" : ": Seq[String]", "member" : "org.rogach.scallop.ScallopConfBase.args", "link" : "discount\/spark\/DiscountSparkConf.html#args:Seq[String]", "kind" : "val"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16], o17: ScallopOption[A17], o18: ScallopOption[A18], o19: ScallopOption[A19], o20: ScallopOption[A20], o21: ScallopOption[A21], o22: ScallopOption[A22])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9], Option[A10], Option[A11], Option[A12], Option[A13], Option[A14], Option[A15], Option[A16], Option[A17], Option[A18], Option[A19], Option[A20], Option[A21], Option[A22]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/spark\/DiscountSparkConf.html#validateOpt[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21,A22](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14],o15:org.rogach.scallop.ScallopOption[A15],o16:org.rogach.scallop.ScallopOption[A16],o17:org.rogach.scallop.ScallopOption[A17],o18:org.rogach.scallop.ScallopOption[A18],o19:org.rogach.scallop.ScallopOption[A19],o20:org.rogach.scallop.ScallopOption[A20],o21:org.rogach.scallop.ScallopOption[A21],o22:org.rogach.scallop.ScallopOption[A22])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6],Option[A7],Option[A8],Option[A9],Option[A10],Option[A11],Option[A12],Option[A13],Option[A14],Option[A15],Option[A16],Option[A17],Option[A18],Option[A19],Option[A20],Option[A21],Option[A22])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16], o17: ScallopOption[A17], o18: ScallopOption[A18], o19: ScallopOption[A19], o20: ScallopOption[A20], o21: ScallopOption[A21])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9], Option[A10], Option[A11], Option[A12], Option[A13], Option[A14], Option[A15], Option[A16], Option[A17], Option[A18], Option[A19], Option[A20], Option[A21]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/spark\/DiscountSparkConf.html#validateOpt[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14],o15:org.rogach.scallop.ScallopOption[A15],o16:org.rogach.scallop.ScallopOption[A16],o17:org.rogach.scallop.ScallopOption[A17],o18:org.rogach.scallop.ScallopOption[A18],o19:org.rogach.scallop.ScallopOption[A19],o20:org.rogach.scallop.ScallopOption[A20],o21:org.rogach.scallop.ScallopOption[A21])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6],Option[A7],Option[A8],Option[A9],Option[A10],Option[A11],Option[A12],Option[A13],Option[A14],Option[A15],Option[A16],Option[A17],Option[A18],Option[A19],Option[A20],Option[A21])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16], o17: ScallopOption[A17], o18: ScallopOption[A18], o19: ScallopOption[A19], o20: ScallopOption[A20])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9], Option[A10], Option[A11], Option[A12], Option[A13], Option[A14], Option[A15], Option[A16], Option[A17], Option[A18], Option[A19], Option[A20]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/spark\/DiscountSparkConf.html#validateOpt[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14],o15:org.rogach.scallop.ScallopOption[A15],o16:org.rogach.scallop.ScallopOption[A16],o17:org.rogach.scallop.ScallopOption[A17],o18:org.rogach.scallop.ScallopOption[A18],o19:org.rogach.scallop.ScallopOption[A19],o20:org.rogach.scallop.ScallopOption[A20])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6],Option[A7],Option[A8],Option[A9],Option[A10],Option[A11],Option[A12],Option[A13],Option[A14],Option[A15],Option[A16],Option[A17],Option[A18],Option[A19],Option[A20])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16], o17: ScallopOption[A17], o18: ScallopOption[A18], o19: ScallopOption[A19])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9], Option[A10], Option[A11], Option[A12], Option[A13], Option[A14], Option[A15], Option[A16], Option[A17], Option[A18], Option[A19]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/spark\/DiscountSparkConf.html#validateOpt[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14],o15:org.rogach.scallop.ScallopOption[A15],o16:org.rogach.scallop.ScallopOption[A16],o17:org.rogach.scallop.ScallopOption[A17],o18:org.rogach.scallop.ScallopOption[A18],o19:org.rogach.scallop.ScallopOption[A19])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6],Option[A7],Option[A8],Option[A9],Option[A10],Option[A11],Option[A12],Option[A13],Option[A14],Option[A15],Option[A16],Option[A17],Option[A18],Option[A19])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16], o17: ScallopOption[A17], o18: ScallopOption[A18])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9], Option[A10], Option[A11], Option[A12], Option[A13], Option[A14], Option[A15], Option[A16], Option[A17], Option[A18]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/spark\/DiscountSparkConf.html#validateOpt[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14],o15:org.rogach.scallop.ScallopOption[A15],o16:org.rogach.scallop.ScallopOption[A16],o17:org.rogach.scallop.ScallopOption[A17],o18:org.rogach.scallop.ScallopOption[A18])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6],Option[A7],Option[A8],Option[A9],Option[A10],Option[A11],Option[A12],Option[A13],Option[A14],Option[A15],Option[A16],Option[A17],Option[A18])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16], o17: ScallopOption[A17])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9], Option[A10], Option[A11], Option[A12], Option[A13], Option[A14], Option[A15], Option[A16], Option[A17]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/spark\/DiscountSparkConf.html#validateOpt[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14],o15:org.rogach.scallop.ScallopOption[A15],o16:org.rogach.scallop.ScallopOption[A16],o17:org.rogach.scallop.ScallopOption[A17])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6],Option[A7],Option[A8],Option[A9],Option[A10],Option[A11],Option[A12],Option[A13],Option[A14],Option[A15],Option[A16],Option[A17])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9], Option[A10], Option[A11], Option[A12], Option[A13], Option[A14], Option[A15], Option[A16]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/spark\/DiscountSparkConf.html#validateOpt[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14],o15:org.rogach.scallop.ScallopOption[A15],o16:org.rogach.scallop.ScallopOption[A16])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6],Option[A7],Option[A8],Option[A9],Option[A10],Option[A11],Option[A12],Option[A13],Option[A14],Option[A15],Option[A16])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9], Option[A10], Option[A11], Option[A12], Option[A13], Option[A14], Option[A15]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/spark\/DiscountSparkConf.html#validateOpt[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14],o15:org.rogach.scallop.ScallopOption[A15])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6],Option[A7],Option[A8],Option[A9],Option[A10],Option[A11],Option[A12],Option[A13],Option[A14],Option[A15])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9], Option[A10], Option[A11], Option[A12], Option[A13], Option[A14]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/spark\/DiscountSparkConf.html#validateOpt[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6],Option[A7],Option[A8],Option[A9],Option[A10],Option[A11],Option[A12],Option[A13],Option[A14])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9], Option[A10], Option[A11], Option[A12], Option[A13]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/spark\/DiscountSparkConf.html#validateOpt[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6],Option[A7],Option[A8],Option[A9],Option[A10],Option[A11],Option[A12],Option[A13])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9], Option[A10], Option[A11], Option[A12]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/spark\/DiscountSparkConf.html#validateOpt[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6],Option[A7],Option[A8],Option[A9],Option[A10],Option[A11],Option[A12])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9], Option[A10], Option[A11]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/spark\/DiscountSparkConf.html#validateOpt[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6],Option[A7],Option[A8],Option[A9],Option[A10],Option[A11])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9], Option[A10]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/spark\/DiscountSparkConf.html#validateOpt[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6],Option[A7],Option[A8],Option[A9],Option[A10])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/spark\/DiscountSparkConf.html#validateOpt[A1,A2,A3,A4,A5,A6,A7,A8,A9](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6],Option[A7],Option[A8],Option[A9])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/spark\/DiscountSparkConf.html#validateOpt[A1,A2,A3,A4,A5,A6,A7,A8](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6],Option[A7],Option[A8])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/spark\/DiscountSparkConf.html#validateOpt[A1,A2,A3,A4,A5,A6,A7](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6],Option[A7])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/spark\/DiscountSparkConf.html#validateOpt[A1,A2,A3,A4,A5,A6](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/spark\/DiscountSparkConf.html#validateOpt[A1,A2,A3,A4,A5](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4])(fn: (Option[A1], Option[A2], Option[A3], Option[A4]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/spark\/DiscountSparkConf.html#validateOpt[A1,A2,A3,A4](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4])(fn:(Option[A1],Option[A2],Option[A3],Option[A4])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3])(fn: (Option[A1], Option[A2], Option[A3]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/spark\/DiscountSparkConf.html#validateOpt[A1,A2,A3](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3])(fn:(Option[A1],Option[A2],Option[A3])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2])(fn: (Option[A1], Option[A2]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/spark\/DiscountSparkConf.html#validateOpt[A1,A2](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2])(fn:(Option[A1],Option[A2])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1])(fn: (Option[A1]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/spark\/DiscountSparkConf.html#validateOpt[A1](o1:org.rogach.scallop.ScallopOption[A1])(fn:Option[A1]=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16], o17: ScallopOption[A17], o18: ScallopOption[A18], o19: ScallopOption[A19], o20: ScallopOption[A20], o21: ScallopOption[A21], o22: ScallopOption[A22])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/spark\/DiscountSparkConf.html#validate[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21,A22](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14],o15:org.rogach.scallop.ScallopOption[A15],o16:org.rogach.scallop.ScallopOption[A16],o17:org.rogach.scallop.ScallopOption[A17],o18:org.rogach.scallop.ScallopOption[A18],o19:org.rogach.scallop.ScallopOption[A19],o20:org.rogach.scallop.ScallopOption[A20],o21:org.rogach.scallop.ScallopOption[A21],o22:org.rogach.scallop.ScallopOption[A22])(fn:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21,A22)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16], o17: ScallopOption[A17], o18: ScallopOption[A18], o19: ScallopOption[A19], o20: ScallopOption[A20], o21: ScallopOption[A21])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/spark\/DiscountSparkConf.html#validate[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14],o15:org.rogach.scallop.ScallopOption[A15],o16:org.rogach.scallop.ScallopOption[A16],o17:org.rogach.scallop.ScallopOption[A17],o18:org.rogach.scallop.ScallopOption[A18],o19:org.rogach.scallop.ScallopOption[A19],o20:org.rogach.scallop.ScallopOption[A20],o21:org.rogach.scallop.ScallopOption[A21])(fn:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16], o17: ScallopOption[A17], o18: ScallopOption[A18], o19: ScallopOption[A19], o20: ScallopOption[A20])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/spark\/DiscountSparkConf.html#validate[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14],o15:org.rogach.scallop.ScallopOption[A15],o16:org.rogach.scallop.ScallopOption[A16],o17:org.rogach.scallop.ScallopOption[A17],o18:org.rogach.scallop.ScallopOption[A18],o19:org.rogach.scallop.ScallopOption[A19],o20:org.rogach.scallop.ScallopOption[A20])(fn:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16], o17: ScallopOption[A17], o18: ScallopOption[A18], o19: ScallopOption[A19])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/spark\/DiscountSparkConf.html#validate[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14],o15:org.rogach.scallop.ScallopOption[A15],o16:org.rogach.scallop.ScallopOption[A16],o17:org.rogach.scallop.ScallopOption[A17],o18:org.rogach.scallop.ScallopOption[A18],o19:org.rogach.scallop.ScallopOption[A19])(fn:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16], o17: ScallopOption[A17], o18: ScallopOption[A18])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/spark\/DiscountSparkConf.html#validate[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14],o15:org.rogach.scallop.ScallopOption[A15],o16:org.rogach.scallop.ScallopOption[A16],o17:org.rogach.scallop.ScallopOption[A17],o18:org.rogach.scallop.ScallopOption[A18])(fn:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16], o17: ScallopOption[A17])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/spark\/DiscountSparkConf.html#validate[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14],o15:org.rogach.scallop.ScallopOption[A15],o16:org.rogach.scallop.ScallopOption[A16],o17:org.rogach.scallop.ScallopOption[A17])(fn:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/spark\/DiscountSparkConf.html#validate[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14],o15:org.rogach.scallop.ScallopOption[A15],o16:org.rogach.scallop.ScallopOption[A16])(fn:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/spark\/DiscountSparkConf.html#validate[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14],o15:org.rogach.scallop.ScallopOption[A15])(fn:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/spark\/DiscountSparkConf.html#validate[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14])(fn:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/spark\/DiscountSparkConf.html#validate[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13])(fn:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/spark\/DiscountSparkConf.html#validate[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12])(fn:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/spark\/DiscountSparkConf.html#validate[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11])(fn:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/spark\/DiscountSparkConf.html#validate[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10])(fn:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/spark\/DiscountSparkConf.html#validate[A1,A2,A3,A4,A5,A6,A7,A8,A9](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9])(fn:(A1,A2,A3,A4,A5,A6,A7,A8,A9)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8])(fn: (A1, A2, A3, A4, A5, A6, A7, A8) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/spark\/DiscountSparkConf.html#validate[A1,A2,A3,A4,A5,A6,A7,A8](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8])(fn:(A1,A2,A3,A4,A5,A6,A7,A8)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7])(fn: (A1, A2, A3, A4, A5, A6, A7) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/spark\/DiscountSparkConf.html#validate[A1,A2,A3,A4,A5,A6,A7](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7])(fn:(A1,A2,A3,A4,A5,A6,A7)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6])(fn: (A1, A2, A3, A4, A5, A6) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/spark\/DiscountSparkConf.html#validate[A1,A2,A3,A4,A5,A6](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6])(fn:(A1,A2,A3,A4,A5,A6)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5])(fn: (A1, A2, A3, A4, A5) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/spark\/DiscountSparkConf.html#validate[A1,A2,A3,A4,A5](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5])(fn:(A1,A2,A3,A4,A5)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4])(fn: (A1, A2, A3, A4) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/spark\/DiscountSparkConf.html#validate[A1,A2,A3,A4](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4])(fn:(A1,A2,A3,A4)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3])(fn: (A1, A2, A3) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/spark\/DiscountSparkConf.html#validate[A1,A2,A3](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3])(fn:(A1,A2,A3)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2])(fn: (A1, A2) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/spark\/DiscountSparkConf.html#validate[A1,A2](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2])(fn:(A1,A2)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1])(fn: (A1) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/spark\/DiscountSparkConf.html#validate[A1](o1:org.rogach.scallop.ScallopOption[A1])(fn:A1=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validations", "tail" : ": List[() ⇒ Either[String, Unit]]", "member" : "org.rogach.scallop.ScallopConfValidations.validations", "link" : "discount\/spark\/DiscountSparkConf.html#validations:List[()=>Either[String,Unit]]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "discount\/spark\/DiscountSparkConf.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "discount\/spark\/DiscountSparkConf.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "discount\/spark\/DiscountSparkConf.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "discount\/spark\/DiscountSparkConf.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "discount\/spark\/DiscountSparkConf.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "discount\/spark\/DiscountSparkConf.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "discount\/spark\/DiscountSparkConf.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/spark\/DiscountSparkConf.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/spark\/DiscountSparkConf.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/spark\/DiscountSparkConf.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "discount\/spark\/DiscountSparkConf.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "discount\/spark\/DiscountSparkConf.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "discount\/spark\/DiscountSparkConf.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "discount\/spark\/DiscountSparkConf.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "discount\/spark\/DiscountSparkConf.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "discount\/spark\/DiscountSparkConf.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "discount\/spark\/DiscountSparkConf.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "discount\/spark\/DiscountSparkConf.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "discount\/spark\/DiscountSparkConf.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "discount\/spark\/DiscountSparkConf.html", "kind" : "class"}, {"name" : "discount.spark.FastaOutputFormat", "shortDescription" : "", "members_class" : [{"label" : "getRecordWriter", "tail" : "(job: TaskAttemptContext): RecordWriter[K, V]", "member" : "discount.spark.FastaOutputFormat.getRecordWriter", "link" : "discount\/spark\/FastaOutputFormat.html#getRecordWriter(job:org.apache.hadoop.mapreduce.TaskAttemptContext):org.apache.hadoop.mapreduce.RecordWriter[K,V]", "kind" : "def"}, {"member" : "discount.spark.FastaOutputFormat#<init>", "error" : "unsupported entity"}, {"label" : "getOutputCommitter", "tail" : "(arg0: TaskAttemptContext): OutputCommitter", "member" : "org.apache.hadoop.mapreduce.lib.output.FileOutputFormat.getOutputCommitter", "link" : "discount\/spark\/FastaOutputFormat.html#getOutputCommitter(x$1:org.apache.hadoop.mapreduce.TaskAttemptContext):org.apache.hadoop.mapreduce.OutputCommitter", "kind" : "def"}, {"label" : "getDefaultWorkFile", "tail" : "(arg0: TaskAttemptContext, arg1: String): Path", "member" : "org.apache.hadoop.mapreduce.lib.output.FileOutputFormat.getDefaultWorkFile", "link" : "discount\/spark\/FastaOutputFormat.html#getDefaultWorkFile(x$1:org.apache.hadoop.mapreduce.TaskAttemptContext,x$2:String):org.apache.hadoop.fs.Path", "kind" : "def"}, {"label" : "checkOutputSpecs", "tail" : "(arg0: JobContext): Unit", "member" : "org.apache.hadoop.mapreduce.lib.output.FileOutputFormat.checkOutputSpecs", "link" : "discount\/spark\/FastaOutputFormat.html#checkOutputSpecs(x$1:org.apache.hadoop.mapreduce.JobContext):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "discount\/spark\/FastaOutputFormat.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "discount\/spark\/FastaOutputFormat.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "discount\/spark\/FastaOutputFormat.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "discount\/spark\/FastaOutputFormat.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "discount\/spark\/FastaOutputFormat.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "discount\/spark\/FastaOutputFormat.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "discount\/spark\/FastaOutputFormat.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/spark\/FastaOutputFormat.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/spark\/FastaOutputFormat.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/spark\/FastaOutputFormat.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "discount\/spark\/FastaOutputFormat.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "discount\/spark\/FastaOutputFormat.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "discount\/spark\/FastaOutputFormat.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "discount\/spark\/FastaOutputFormat.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "discount\/spark\/FastaOutputFormat.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "discount\/spark\/FastaOutputFormat.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "discount\/spark\/FastaOutputFormat.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "discount\/spark\/FastaOutputFormat.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "discount\/spark\/FastaOutputFormat.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "discount\/spark\/FastaOutputFormat.html", "kind" : "class"}, {"name" : "discount.spark.GroupedSegments", "shortDescription" : "", "object" : "discount\/spark\/GroupedSegments$.html", "members_class" : [{"label" : "counting", "tail" : "(minCount: Option[Abundance], maxCount: Option[Abundance], filterOrientation: Boolean): Counting", "member" : "discount.spark.GroupedSegments.counting", "link" : "discount\/spark\/GroupedSegments.html#counting(minCount:Option[discount.Abundance],maxCount:Option[discount.Abundance],filterOrientation:Boolean):GroupedSegments.this.Counting", "kind" : "def"}, {"label" : "Counting", "tail" : "", "member" : "discount.spark.GroupedSegments.Counting", "link" : "discount\/spark\/GroupedSegments.html#CountingextendsAnyRef", "kind" : "class"}, {"label" : "findKmerCounts", "tail" : "(needles: Iterable[NTSeq], unifyRC: Boolean)(spark: SparkSession): CountedKmers", "member" : "discount.spark.GroupedSegments.findKmerCounts", "link" : "discount\/spark\/GroupedSegments.html#findKmerCounts(needles:Iterable[discount.NTSeq],unifyRC:Boolean)(implicitspark:org.apache.spark.sql.SparkSession):discount.spark.CountedKmers", "kind" : "def"}, {"label" : "joinMatchingBuckets", "tail" : "(needles: Iterable[NTSeq])(spark: SparkSession): Dataset[(BucketId, Array[ZeroNTBitArray], Array[ZeroNTBitArray])]", "member" : "discount.spark.GroupedSegments.joinMatchingBuckets", "link" : "discount\/spark\/GroupedSegments.html#joinMatchingBuckets(needles:Iterable[discount.NTSeq])(implicitspark:org.apache.spark.sql.SparkSession):org.apache.spark.sql.Dataset[(discount.hash.BucketId,Array[discount.util.ZeroNTBitArray],Array[discount.util.ZeroNTBitArray])]", "kind" : "def"}, {"label" : "writeSupermerStrings", "tail" : "(outputLocation: String): Unit", "member" : "discount.spark.GroupedSegments.writeSupermerStrings", "link" : "discount\/spark\/GroupedSegments.html#writeSupermerStrings(outputLocation:String):Unit", "kind" : "def"}, {"label" : "superkmerStrings", "tail" : "(): Dataset[(String, NTSeq)]", "member" : "discount.spark.GroupedSegments.superkmerStrings", "link" : "discount\/spark\/GroupedSegments.html#superkmerStrings:org.apache.spark.sql.Dataset[(String,discount.NTSeq)]", "kind" : "def"}, {"label" : "unpersist", "tail" : "(): GroupedSegments.this.type", "member" : "discount.spark.GroupedSegments.unpersist", "link" : "discount\/spark\/GroupedSegments.html#unpersist():GroupedSegments.this.type", "kind" : "def"}, {"label" : "cache", "tail" : "(): GroupedSegments.this.type", "member" : "discount.spark.GroupedSegments.cache", "link" : "discount\/spark\/GroupedSegments.html#cache():GroupedSegments.this.type", "kind" : "def"}, {"member" : "discount.spark.GroupedSegments#<init>", "error" : "unsupported entity"}, {"label" : "splitter", "tail" : ": Broadcast[MinSplitter]", "member" : "discount.spark.GroupedSegments.splitter", "link" : "discount\/spark\/GroupedSegments.html#splitter:org.apache.spark.broadcast.Broadcast[discount.hash.MinSplitter]", "kind" : "val"}, {"label" : "segments", "tail" : ": Dataset[(BucketId, Array[ZeroNTBitArray])]", "member" : "discount.spark.GroupedSegments.segments", "link" : "discount\/spark\/GroupedSegments.html#segments:org.apache.spark.sql.Dataset[(discount.hash.BucketId,Array[discount.util.ZeroNTBitArray])]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "discount\/spark\/GroupedSegments.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "discount\/spark\/GroupedSegments.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "discount\/spark\/GroupedSegments.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "discount\/spark\/GroupedSegments.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "discount\/spark\/GroupedSegments.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "discount\/spark\/GroupedSegments.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "discount\/spark\/GroupedSegments.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/spark\/GroupedSegments.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/spark\/GroupedSegments.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/spark\/GroupedSegments.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "discount\/spark\/GroupedSegments.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "discount\/spark\/GroupedSegments.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "discount\/spark\/GroupedSegments.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "discount\/spark\/GroupedSegments.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "discount\/spark\/GroupedSegments.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "discount\/spark\/GroupedSegments.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "discount\/spark\/GroupedSegments.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "discount\/spark\/GroupedSegments.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "discount\/spark\/GroupedSegments.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "segmentsByHash", "tail" : "(segments: Dataset[HashSegment])(spark: SparkSession): Dataset[(BucketId, Array[ZeroNTBitArray])]", "member" : "discount.spark.GroupedSegments.segmentsByHash", "link" : "discount\/spark\/GroupedSegments$.html#segmentsByHash(segments:org.apache.spark.sql.Dataset[discount.spark.HashSegment])(implicitspark:org.apache.spark.sql.SparkSession):org.apache.spark.sql.Dataset[(discount.hash.BucketId,Array[discount.util.ZeroNTBitArray])]", "kind" : "def"}, {"label" : "fromReads", "tail" : "(input: Dataset[NTSeq], spl: Broadcast[MinSplitter])(spark: SparkSession): GroupedSegments", "member" : "discount.spark.GroupedSegments.fromReads", "link" : "discount\/spark\/GroupedSegments$.html#fromReads(input:org.apache.spark.sql.Dataset[discount.NTSeq],spl:org.apache.spark.broadcast.Broadcast[discount.hash.MinSplitter])(implicitspark:org.apache.spark.sql.SparkSession):discount.spark.GroupedSegments", "kind" : "def"}, {"label" : "hashSegments", "tail" : "(input: Dataset[NTSeq], spl: Broadcast[MinSplitter])(spark: SparkSession): Dataset[HashSegment]", "member" : "discount.spark.GroupedSegments.hashSegments", "link" : "discount\/spark\/GroupedSegments$.html#hashSegments(input:org.apache.spark.sql.Dataset[discount.NTSeq],spl:org.apache.spark.broadcast.Broadcast[discount.hash.MinSplitter])(implicitspark:org.apache.spark.sql.SparkSession):org.apache.spark.sql.Dataset[discount.spark.HashSegment]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "discount\/spark\/GroupedSegments$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "discount\/spark\/GroupedSegments$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "discount\/spark\/GroupedSegments$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "discount\/spark\/GroupedSegments$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "discount\/spark\/GroupedSegments$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "discount\/spark\/GroupedSegments$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "discount\/spark\/GroupedSegments$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/spark\/GroupedSegments$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/spark\/GroupedSegments$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/spark\/GroupedSegments$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "discount\/spark\/GroupedSegments$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "discount\/spark\/GroupedSegments$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "discount\/spark\/GroupedSegments$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "discount\/spark\/GroupedSegments$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "discount\/spark\/GroupedSegments$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "discount\/spark\/GroupedSegments$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "discount\/spark\/GroupedSegments$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "discount\/spark\/GroupedSegments$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "discount\/spark\/GroupedSegments$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "discount\/spark\/GroupedSegments.html", "kind" : "object"}, {"name" : "discount.spark.HashSegment", "shortDescription" : "A single hashed sequence segment (super-mer) with its minimizer.", "members_case class" : [{"member" : "discount.spark.HashSegment#<init>", "error" : "unsupported entity"}, {"label" : "segment", "tail" : ": ZeroNTBitArray", "member" : "discount.spark.HashSegment.segment", "link" : "discount\/spark\/HashSegment.html#segment:discount.util.ZeroNTBitArray", "kind" : "val"}, {"label" : "hash", "tail" : ": BucketId", "member" : "discount.spark.HashSegment.hash", "link" : "discount\/spark\/HashSegment.html#hash:discount.hash.BucketId", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "discount\/spark\/HashSegment.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "discount\/spark\/HashSegment.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "discount\/spark\/HashSegment.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "discount\/spark\/HashSegment.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "discount\/spark\/HashSegment.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "discount\/spark\/HashSegment.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "discount\/spark\/HashSegment.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/spark\/HashSegment.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/spark\/HashSegment.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/spark\/HashSegment.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "discount\/spark\/HashSegment.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "discount\/spark\/HashSegment.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "discount\/spark\/HashSegment.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "discount\/spark\/HashSegment.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "discount\/spark\/HashSegment.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "discount\/spark\/HashSegment.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "discount\/spark\/HashSegment.html", "kind" : "case class"}, {"name" : "discount.spark.InputReader", "shortDescription" : "Routines for reading input data using fastdoop.", "members_class" : [{"label" : "getReadsFromFilesWithID", "tail" : "(fileSpec: String, withRC: Boolean, longSequence: Boolean): Dataset[(SequenceID, NTSeq)]", "member" : "discount.spark.InputReader.getReadsFromFilesWithID", "link" : "discount\/spark\/InputReader.html#getReadsFromFilesWithID(fileSpec:String,withRC:Boolean,longSequence:Boolean):org.apache.spark.sql.Dataset[(discount.SequenceID,discount.NTSeq)]", "kind" : "def"}, {"label" : "getReadsFromFiles", "tail" : "(fileSpec: String, withRC: Boolean, sample: Option[Double], longSequence: Boolean): Dataset[NTSeq]", "member" : "discount.spark.InputReader.getReadsFromFiles", "link" : "discount\/spark\/InputReader.html#getReadsFromFiles(fileSpec:String,withRC:Boolean,sample:Option[Double],longSequence:Boolean):org.apache.spark.sql.Dataset[discount.NTSeq]", "kind" : "def"}, {"label" : "getLongSequence", "tail" : "(file: String, sample: Option[Double]): RDD[NTSeq]", "member" : "discount.spark.InputReader.getLongSequence", "link" : "discount\/spark\/InputReader.html#getLongSequence(file:String,sample:Option[Double]):org.apache.spark.rdd.RDD[discount.NTSeq]", "kind" : "def"}, {"label" : "getShortReadsWithID", "tail" : "(file: String): RDD[(SequenceID, NTSeq)]", "member" : "discount.spark.InputReader.getShortReadsWithID", "link" : "discount\/spark\/InputReader.html#getShortReadsWithID(file:String):org.apache.spark.rdd.RDD[(discount.SequenceID,discount.NTSeq)]", "kind" : "def"}, {"label" : "getShortReads", "tail" : "(file: String, sample: Option[Double]): RDD[NTSeq]", "member" : "discount.spark.InputReader.getShortReads", "link" : "discount\/spark\/InputReader.html#getShortReads(file:String,sample:Option[Double]):org.apache.spark.rdd.RDD[discount.NTSeq]", "kind" : "def"}, {"label" : "sc", "tail" : ": SparkContext", "member" : "discount.spark.InputReader.sc", "link" : "discount\/spark\/InputReader.html#sc:org.apache.spark.SparkContext", "kind" : "val"}, {"member" : "discount.spark.InputReader#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "discount\/spark\/InputReader.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "discount\/spark\/InputReader.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "discount\/spark\/InputReader.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "discount\/spark\/InputReader.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "discount\/spark\/InputReader.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "discount\/spark\/InputReader.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "discount\/spark\/InputReader.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/spark\/InputReader.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/spark\/InputReader.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/spark\/InputReader.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "discount\/spark\/InputReader.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "discount\/spark\/InputReader.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "discount\/spark\/InputReader.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "discount\/spark\/InputReader.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "discount\/spark\/InputReader.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "discount\/spark\/InputReader.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "discount\/spark\/InputReader.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "discount\/spark\/InputReader.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "discount\/spark\/InputReader.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "discount\/spark\/InputReader.html", "kind" : "class"}, {"name" : "discount.spark.Kmers", "shortDescription" : "Convenience methods for interacting with k-mers from a set of input files.", "members_class" : [{"label" : "showStats", "tail" : "(min: Option[Abundance], max: Option[Abundance]): Unit", "member" : "discount.spark.Kmers.showStats", "link" : "discount\/spark\/Kmers.html#showStats(min:Option[discount.Abundance],max:Option[discount.Abundance]):Unit", "kind" : "def"}, {"label" : "sample", "tail" : "(writeLocation: String): MinSplitter", "member" : "discount.spark.Kmers.sample", "link" : "discount\/spark\/Kmers.html#sample(writeLocation:String):discount.hash.MinSplitter", "kind" : "def"}, {"label" : "unpersist", "tail" : "(): Kmers.this.type", "member" : "discount.spark.Kmers.unpersist", "link" : "discount\/spark\/Kmers.html#unpersist():Kmers.this.type", "kind" : "def"}, {"label" : "cache", "tail" : "(): Kmers.this.type", "member" : "discount.spark.Kmers.cache", "link" : "discount\/spark\/Kmers.html#cache():Kmers.this.type", "kind" : "def"}, {"label" : "counting", "tail" : "(min: Option[Long], max: Option[Long]): Counting", "member" : "discount.spark.Kmers.counting", "link" : "discount\/spark\/Kmers.html#counting(min:Option[Long],max:Option[Long]):discount.spark.GroupedSegments#Counting", "kind" : "def"}, {"label" : "segments", "tail" : ": GroupedSegments", "member" : "discount.spark.Kmers.segments", "link" : "discount\/spark\/Kmers.html#segments:discount.spark.GroupedSegments", "kind" : "val"}, {"member" : "discount.spark.Kmers#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "discount\/spark\/Kmers.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "discount\/spark\/Kmers.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "discount\/spark\/Kmers.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "discount\/spark\/Kmers.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "discount\/spark\/Kmers.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "discount\/spark\/Kmers.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "discount\/spark\/Kmers.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/spark\/Kmers.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/spark\/Kmers.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/spark\/Kmers.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "discount\/spark\/Kmers.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "discount\/spark\/Kmers.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "discount\/spark\/Kmers.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "discount\/spark\/Kmers.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "discount\/spark\/Kmers.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "discount\/spark\/Kmers.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "discount\/spark\/Kmers.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "discount\/spark\/Kmers.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "discount\/spark\/Kmers.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "discount\/spark\/Kmers.html", "kind" : "class"}, {"name" : "discount.spark.Sampling", "shortDescription" : "Routines for creating and managing frequency sampled minimizer orderings.", "object" : "discount\/spark\/Sampling$.html", "members_class" : [{"label" : "readMotifList", "tail" : "(location: String): Array[String]", "member" : "discount.spark.Sampling.readMotifList", "link" : "discount\/spark\/Sampling.html#readMotifList(location:String):Array[String]", "kind" : "def"}, {"label" : "readMotifList", "tail" : "(location: String, k: Int, m: Int): Array[String]", "member" : "discount.spark.Sampling.readMotifList", "link" : "discount\/spark\/Sampling.html#readMotifList(location:String,k:Int,m:Int):Array[String]", "kind" : "def"}, {"label" : "writeTextFile", "tail" : "(location: String, data: String): Unit", "member" : "discount.spark.Sampling.writeTextFile", "link" : "discount\/spark\/Sampling.html#writeTextFile(location:String,data:String):Unit", "kind" : "def"}, {"label" : "persistMinimizers", "tail" : "(space: MotifSpace, location: String): Unit", "member" : "discount.spark.Sampling.persistMinimizers", "link" : "discount\/spark\/Sampling.html#persistMinimizers(space:discount.hash.MotifSpace,location:String):Unit", "kind" : "def"}, {"label" : "createSampledSpace", "tail" : "(input: Dataset[String], template: MotifSpace, samplePartitions: Int, persistLocation: Option[String]): MotifSpace", "member" : "discount.spark.Sampling.createSampledSpace", "link" : "discount\/spark\/Sampling.html#createSampledSpace(input:org.apache.spark.sql.Dataset[String],template:discount.hash.MotifSpace,samplePartitions:Int,persistLocation:Option[String]):discount.hash.MotifSpace", "kind" : "def"}, {"label" : "countFeatures", "tail" : "(reads: Dataset[String], space: MotifSpace, reducePartitions: Int): MotifCounter", "member" : "discount.spark.Sampling.countFeatures", "link" : "discount\/spark\/Sampling.html#countFeatures(reads:org.apache.spark.sql.Dataset[String],space:discount.hash.MotifSpace,reducePartitions:Int):discount.hash.MotifCounter", "kind" : "def"}, {"member" : "discount.spark.Sampling#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "discount\/spark\/Sampling.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "discount\/spark\/Sampling.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "discount\/spark\/Sampling.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "discount\/spark\/Sampling.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "discount\/spark\/Sampling.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "discount\/spark\/Sampling.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "discount\/spark\/Sampling.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/spark\/Sampling.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/spark\/Sampling.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/spark\/Sampling.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "discount\/spark\/Sampling.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "discount\/spark\/Sampling.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "discount\/spark\/Sampling.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "discount\/spark\/Sampling.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "discount\/spark\/Sampling.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "discount\/spark\/Sampling.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "discount\/spark\/Sampling.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "discount\/spark\/Sampling.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "discount\/spark\/Sampling.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "findBestMinimizerFile", "tail" : "(minimizerDir: String, k: Int, m: Int)(spark: SparkSession): String", "member" : "discount.spark.Sampling.findBestMinimizerFile", "link" : "discount\/spark\/Sampling$.html#findBestMinimizerFile(minimizerDir:String,k:Int,m:Int)(implicitspark:org.apache.spark.sql.SparkSession):String", "kind" : "def"}, {"label" : "createSampledSpace", "tail" : "(sampledInput: Dataset[String], m: Int, samplePartitions: Int, validMotifFile: Option[String])(spark: SparkSession): MotifSpace", "member" : "discount.spark.Sampling.createSampledSpace", "link" : "discount\/spark\/Sampling$.html#createSampledSpace(sampledInput:org.apache.spark.sql.Dataset[String],m:Int,samplePartitions:Int,validMotifFile:Option[String])(implicitspark:org.apache.spark.sql.SparkSession):discount.hash.MotifSpace", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "discount\/spark\/Sampling$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "discount\/spark\/Sampling$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "discount\/spark\/Sampling$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "discount\/spark\/Sampling$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "discount\/spark\/Sampling$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "discount\/spark\/Sampling$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "discount\/spark\/Sampling$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/spark\/Sampling$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/spark\/Sampling$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/spark\/Sampling$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "discount\/spark\/Sampling$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "discount\/spark\/Sampling$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "discount\/spark\/Sampling$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "discount\/spark\/Sampling$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "discount\/spark\/Sampling$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "discount\/spark\/Sampling$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "discount\/spark\/Sampling$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "discount\/spark\/Sampling$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "discount\/spark\/Sampling$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "discount\/spark\/Sampling.html", "kind" : "class"}, {"name" : "discount.spark.SparkTool", "shortDescription" : "", "members_class" : [{"label" : "spark", "tail" : ": SparkSession", "member" : "discount.spark.SparkTool.spark", "link" : "discount\/spark\/SparkTool.html#spark:org.apache.spark.sql.SparkSession", "kind" : "lazy val"}, {"label" : "conf", "tail" : "(): SparkConf", "member" : "discount.spark.SparkTool.conf", "link" : "discount\/spark\/SparkTool.html#conf:org.apache.spark.SparkConf", "kind" : "def"}, {"member" : "discount.spark.SparkTool#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "discount\/spark\/SparkTool.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "discount\/spark\/SparkTool.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "discount\/spark\/SparkTool.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "discount\/spark\/SparkTool.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "discount\/spark\/SparkTool.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "discount\/spark\/SparkTool.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "discount\/spark\/SparkTool.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/spark\/SparkTool.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/spark\/SparkTool.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/spark\/SparkTool.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "discount\/spark\/SparkTool.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "discount\/spark\/SparkTool.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "discount\/spark\/SparkTool.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "discount\/spark\/SparkTool.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "discount\/spark\/SparkTool.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "discount\/spark\/SparkTool.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "discount\/spark\/SparkTool.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "discount\/spark\/SparkTool.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "discount\/spark\/SparkTool.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "discount\/spark\/SparkTool.html", "kind" : "class"}, {"name" : "discount.spark.SparkToolConf", "shortDescription" : "Configuration for a Spark-based tool.", "members_class" : [{"label" : "getIndexSplitter", "tail" : "(location: String): MinSplitter", "member" : "discount.spark.SparkToolConf.getIndexSplitter", "link" : "discount\/spark\/SparkToolConf.html#getIndexSplitter(location:String):discount.hash.MinSplitter", "kind" : "def"}, {"label" : "discount", "tail" : ": Discount", "member" : "discount.spark.SparkToolConf.discount", "link" : "discount\/spark\/SparkToolConf.html#discount:discount.spark.Discount", "kind" : "lazy val"}, {"label" : "sampling", "tail" : "(): Sampling", "member" : "discount.spark.SparkToolConf.sampling", "link" : "discount\/spark\/SparkToolConf.html#sampling:discount.spark.Sampling", "kind" : "def"}, {"member" : "discount.spark.SparkToolConf#<init>", "error" : "unsupported entity"}, {"label" : "multiline", "tail" : ": ScallopOption[Boolean]", "member" : "discount.Configuration.multiline", "link" : "discount\/spark\/SparkToolConf.html#multiline:org.rogach.scallop.ScallopOption[Boolean]", "kind" : "val"}, {"label" : "maxSequenceLength", "tail" : ": ScallopOption[Int]", "member" : "discount.Configuration.maxSequenceLength", "link" : "discount\/spark\/SparkToolConf.html#maxSequenceLength:org.rogach.scallop.ScallopOption[Int]", "kind" : "val"}, {"label" : "templateSpace", "tail" : "(): MotifSpace", "member" : "discount.Configuration.templateSpace", "link" : "discount\/spark\/SparkToolConf.html#templateSpace:discount.hash.MotifSpace", "kind" : "def"}, {"label" : "long", "tail" : ": ScallopOption[Boolean]", "member" : "discount.Configuration.long", "link" : "discount\/spark\/SparkToolConf.html#long:org.rogach.scallop.ScallopOption[Boolean]", "kind" : "val"}, {"label" : "rna", "tail" : ": ScallopOption[Boolean]", "member" : "discount.Configuration.rna", "link" : "discount\/spark\/SparkToolConf.html#rna:org.rogach.scallop.ScallopOption[Boolean]", "kind" : "val"}, {"label" : "minimizers", "tail" : ": ScallopOption[String]", "member" : "discount.Configuration.minimizers", "link" : "discount\/spark\/SparkToolConf.html#minimizers:org.rogach.scallop.ScallopOption[String]", "kind" : "val"}, {"label" : "samplePartitions", "tail" : ": ScallopOption[Int]", "member" : "discount.Configuration.samplePartitions", "link" : "discount\/spark\/SparkToolConf.html#samplePartitions:org.rogach.scallop.ScallopOption[Int]", "kind" : "val"}, {"label" : "sample", "tail" : ": ScallopOption[Double]", "member" : "discount.Configuration.sample", "link" : "discount\/spark\/SparkToolConf.html#sample:org.rogach.scallop.ScallopOption[Double]", "kind" : "val"}, {"label" : "minimizerWidth", "tail" : ": ScallopOption[Int]", "member" : "discount.Configuration.minimizerWidth", "link" : "discount\/spark\/SparkToolConf.html#minimizerWidth:org.rogach.scallop.ScallopOption[Int]", "kind" : "val"}, {"label" : "ordering", "tail" : ": ScallopOption[String]", "member" : "discount.Configuration.ordering", "link" : "discount\/spark\/SparkToolConf.html#ordering:org.rogach.scallop.ScallopOption[String]", "kind" : "val"}, {"label" : "normalize", "tail" : ": ScallopOption[Boolean]", "member" : "discount.Configuration.normalize", "link" : "discount\/spark\/SparkToolConf.html#normalize:org.rogach.scallop.ScallopOption[Boolean]", "kind" : "val"}, {"label" : "k", "tail" : ": ScallopOption[Int]", "member" : "discount.Configuration.k", "link" : "discount\/spark\/SparkToolConf.html#k:org.rogach.scallop.ScallopOption[Int]", "kind" : "val"}, {"label" : "performOptionNameGuessing", "tail" : "(): Unit", "member" : "org.rogach.scallop.ScallopConf.performOptionNameGuessing", "link" : "discount\/spark\/SparkToolConf.html#performOptionNameGuessing():Unit", "kind" : "def"}, {"label" : "guessOptionName_=", "tail" : "(v: Boolean): Unit", "member" : "org.rogach.scallop.ScallopConf.guessOptionName_=", "link" : "discount\/spark\/SparkToolConf.html#guessOptionName_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "guessOptionName", "tail" : "(): Boolean", "member" : "org.rogach.scallop.ScallopConf.guessOptionName", "link" : "discount\/spark\/SparkToolConf.html#guessOptionName:Boolean", "kind" : "def"}, {"label" : "optionNameGuessingSupported", "tail" : "(): Boolean", "member" : "org.rogach.scallop.ScallopConf.optionNameGuessingSupported", "link" : "discount\/spark\/SparkToolConf.html#optionNameGuessingSupported:Boolean", "kind" : "def"}, {"label" : "verify", "tail" : "(): Unit", "member" : "org.rogach.scallop.ScallopConfBase.verify", "link" : "discount\/spark\/SparkToolConf.html#verify():Unit", "kind" : "def"}, {"label" : "shortSubcommandsHelp", "tail" : "(enable: Boolean): Unit", "member" : "org.rogach.scallop.ScallopConfBase.shortSubcommandsHelp", "link" : "discount\/spark\/SparkToolConf.html#shortSubcommandsHelp(enable:Boolean):Unit", "kind" : "def"}, {"label" : "helpWidth", "tail" : "(w: Int): Unit", "member" : "org.rogach.scallop.ScallopConfBase.helpWidth", "link" : "discount\/spark\/SparkToolConf.html#helpWidth(w:Int):Unit", "kind" : "def"}, {"label" : "footer", "tail" : "(f: String): Unit", "member" : "org.rogach.scallop.ScallopConfBase.footer", "link" : "discount\/spark\/SparkToolConf.html#footer(f:String):Unit", "kind" : "def"}, {"label" : "banner", "tail" : "(b: String): Unit", "member" : "org.rogach.scallop.ScallopConfBase.banner", "link" : "discount\/spark\/SparkToolConf.html#banner(b:String):Unit", "kind" : "def"}, {"label" : "version", "tail" : "(v: String): Unit", "member" : "org.rogach.scallop.ScallopConfBase.version", "link" : "discount\/spark\/SparkToolConf.html#version(v:String):Unit", "kind" : "def"}, {"label" : "printHelp", "tail" : "(): Unit", "member" : "org.rogach.scallop.ScallopConfBase.printHelp", "link" : "discount\/spark\/SparkToolConf.html#printHelp():Unit", "kind" : "def"}, {"label" : "getHelpString", "tail" : "(): String", "member" : "org.rogach.scallop.ScallopConfBase.getHelpString", "link" : "discount\/spark\/SparkToolConf.html#getHelpString():String", "kind" : "def"}, {"label" : "filteredSummary", "tail" : "(blurred: Set[String]): String", "member" : "org.rogach.scallop.ScallopConfBase.filteredSummary", "link" : "discount\/spark\/SparkToolConf.html#filteredSummary(blurred:Set[String]):String", "kind" : "def"}, {"label" : "summary", "tail" : "(): String", "member" : "org.rogach.scallop.ScallopConfBase.summary", "link" : "discount\/spark\/SparkToolConf.html#summary:String", "kind" : "def"}, {"label" : "requireSubcommand", "tail" : "(): Unit", "member" : "org.rogach.scallop.ScallopConfBase.requireSubcommand", "link" : "discount\/spark\/SparkToolConf.html#requireSubcommand():Unit", "kind" : "def"}, {"label" : "validatePathsIsFile", "tail" : "(pathsOption: ScallopOption[List[Path]]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.validatePathsIsFile", "link" : "discount\/spark\/SparkToolConf.html#validatePathsIsFile(pathsOption:org.rogach.scallop.ScallopOption[List[java.nio.file.Path]]):Unit", "kind" : "def"}, {"label" : "validatePathsIsDirectory", "tail" : "(pathsOption: ScallopOption[List[Path]]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.validatePathsIsDirectory", "link" : "discount\/spark\/SparkToolConf.html#validatePathsIsDirectory(pathsOption:org.rogach.scallop.ScallopOption[List[java.nio.file.Path]]):Unit", "kind" : "def"}, {"label" : "validatePathsDoesNotExist", "tail" : "(pathsOption: ScallopOption[List[Path]]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.validatePathsDoesNotExist", "link" : "discount\/spark\/SparkToolConf.html#validatePathsDoesNotExist(pathsOption:org.rogach.scallop.ScallopOption[List[java.nio.file.Path]]):Unit", "kind" : "def"}, {"label" : "validatePathsExists", "tail" : "(pathsOption: ScallopOption[List[Path]]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.validatePathsExists", "link" : "discount\/spark\/SparkToolConf.html#validatePathsExists(pathsOption:org.rogach.scallop.ScallopOption[List[java.nio.file.Path]]):Unit", "kind" : "def"}, {"label" : "validatePathIsFile", "tail" : "(pathOption: ScallopOption[Path]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.validatePathIsFile", "link" : "discount\/spark\/SparkToolConf.html#validatePathIsFile(pathOption:org.rogach.scallop.ScallopOption[java.nio.file.Path]):Unit", "kind" : "def"}, {"label" : "validatePathIsDirectory", "tail" : "(pathOption: ScallopOption[Path]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.validatePathIsDirectory", "link" : "discount\/spark\/SparkToolConf.html#validatePathIsDirectory(pathOption:org.rogach.scallop.ScallopOption[java.nio.file.Path]):Unit", "kind" : "def"}, {"label" : "validatePathDoesNotExist", "tail" : "(pathOption: ScallopOption[Path]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.validatePathDoesNotExist", "link" : "discount\/spark\/SparkToolConf.html#validatePathDoesNotExist(pathOption:org.rogach.scallop.ScallopOption[java.nio.file.Path]):Unit", "kind" : "def"}, {"label" : "validatePathExists", "tail" : "(pathOption: ScallopOption[Path]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.validatePathExists", "link" : "discount\/spark\/SparkToolConf.html#validatePathExists(pathOption:org.rogach.scallop.ScallopOption[java.nio.file.Path]):Unit", "kind" : "def"}, {"label" : "validateFilesIsFile", "tail" : "(filesOption: ScallopOption[List[File]]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.validateFilesIsFile", "link" : "discount\/spark\/SparkToolConf.html#validateFilesIsFile(filesOption:org.rogach.scallop.ScallopOption[List[java.io.File]]):Unit", "kind" : "def"}, {"label" : "validateFilesIsDirectory", "tail" : "(filesOption: ScallopOption[List[File]]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.validateFilesIsDirectory", "link" : "discount\/spark\/SparkToolConf.html#validateFilesIsDirectory(filesOption:org.rogach.scallop.ScallopOption[List[java.io.File]]):Unit", "kind" : "def"}, {"label" : "validateFilesDoNotExist", "tail" : "(filesOption: ScallopOption[List[File]]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.validateFilesDoNotExist", "link" : "discount\/spark\/SparkToolConf.html#validateFilesDoNotExist(filesOption:org.rogach.scallop.ScallopOption[List[java.io.File]]):Unit", "kind" : "def"}, {"label" : "validateFilesExist", "tail" : "(filesOption: ScallopOption[List[File]]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.validateFilesExist", "link" : "discount\/spark\/SparkToolConf.html#validateFilesExist(filesOption:org.rogach.scallop.ScallopOption[List[java.io.File]]):Unit", "kind" : "def"}, {"label" : "validateFileIsFile", "tail" : "(fileOption: ScallopOption[File]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.validateFileIsFile", "link" : "discount\/spark\/SparkToolConf.html#validateFileIsFile(fileOption:org.rogach.scallop.ScallopOption[java.io.File]):Unit", "kind" : "def"}, {"label" : "validateFileIsDirectory", "tail" : "(fileOption: ScallopOption[File]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.validateFileIsDirectory", "link" : "discount\/spark\/SparkToolConf.html#validateFileIsDirectory(fileOption:org.rogach.scallop.ScallopOption[java.io.File]):Unit", "kind" : "def"}, {"label" : "validateFileDoesNotExist", "tail" : "(fileOption: ScallopOption[File]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.validateFileDoesNotExist", "link" : "discount\/spark\/SparkToolConf.html#validateFileDoesNotExist(fileOption:org.rogach.scallop.ScallopOption[java.io.File]):Unit", "kind" : "def"}, {"label" : "validateFileExists", "tail" : "(fileOption: ScallopOption[File]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.validateFileExists", "link" : "discount\/spark\/SparkToolConf.html#validateFileExists(fileOption:org.rogach.scallop.ScallopOption[java.io.File]):Unit", "kind" : "def"}, {"label" : "allDefinedOrUndefined", "tail" : "(list: ScallopOption[_]*): Unit", "member" : "org.rogach.scallop.ScallopConfBase.allDefinedOrUndefined", "link" : "discount\/spark\/SparkToolConf.html#allDefinedOrUndefined(list:org.rogach.scallop.ScallopOption[_]*):Unit", "kind" : "def"}, {"label" : "codependent", "tail" : "(list: ScallopOption[_]*): Unit", "member" : "org.rogach.scallop.ScallopConfBase.codependent", "link" : "discount\/spark\/SparkToolConf.html#codependent(list:org.rogach.scallop.ScallopOption[_]*):Unit", "kind" : "def"}, {"label" : "mutuallyExclusive", "tail" : "(list: ScallopOption[_]*): Unit", "member" : "org.rogach.scallop.ScallopConfBase.mutuallyExclusive", "link" : "discount\/spark\/SparkToolConf.html#mutuallyExclusive(list:org.rogach.scallop.ScallopOption[_]*):Unit", "kind" : "def"}, {"label" : "requireOne", "tail" : "(list: ScallopOption[_]*): Unit", "member" : "org.rogach.scallop.ScallopConfBase.requireOne", "link" : "discount\/spark\/SparkToolConf.html#requireOne(list:org.rogach.scallop.ScallopOption[_]*):Unit", "kind" : "def"}, {"label" : "requireAtLeastOne", "tail" : "(list: ScallopOption[_]*): Unit", "member" : "org.rogach.scallop.ScallopConfBase.requireAtLeastOne", "link" : "discount\/spark\/SparkToolConf.html#requireAtLeastOne(list:org.rogach.scallop.ScallopOption[_]*):Unit", "kind" : "def"}, {"label" : "conflicts", "tail" : "(opt: ScallopOption[_], list: List[ScallopOption[_]]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.conflicts", "link" : "discount\/spark\/SparkToolConf.html#conflicts(opt:org.rogach.scallop.ScallopOption[_],list:List[org.rogach.scallop.ScallopOption[_]]):Unit", "kind" : "def"}, {"label" : "dependsOnAll", "tail" : "(opt: ScallopOption[_], list: List[ScallopOption[_]]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.dependsOnAll", "link" : "discount\/spark\/SparkToolConf.html#dependsOnAll(opt:org.rogach.scallop.ScallopOption[_],list:List[org.rogach.scallop.ScallopOption[_]]):Unit", "kind" : "def"}, {"label" : "dependsOnAny", "tail" : "(opt: ScallopOption[_], list: List[ScallopOption[_]]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.dependsOnAny", "link" : "discount\/spark\/SparkToolConf.html#dependsOnAny(opt:org.rogach.scallop.ScallopOption[_],list:List[org.rogach.scallop.ScallopOption[_]]):Unit", "kind" : "def"}, {"label" : "addValidation", "tail" : "(fn: ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.addValidation", "link" : "discount\/spark\/SparkToolConf.html#addValidation(fn:=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "assertVerified", "tail" : "(): Unit", "member" : "org.rogach.scallop.ScallopConfBase.assertVerified", "link" : "discount\/spark\/SparkToolConf.html#assertVerified():Unit", "kind" : "def"}, {"label" : "onError", "tail" : "(e: Throwable): Unit", "member" : "org.rogach.scallop.ScallopConfBase.onError", "link" : "discount\/spark\/SparkToolConf.html#onError(e:Throwable):Unit", "kind" : "def"}, {"label" : "errorMessageHandler", "tail" : ": (String) ⇒ Unit", "member" : "org.rogach.scallop.ScallopConfBase.errorMessageHandler", "link" : "discount\/spark\/SparkToolConf.html#errorMessageHandler:String=>Unit", "kind" : "var"}, {"label" : "printedName", "tail" : ": String", "member" : "org.rogach.scallop.ScallopConfBase.printedName", "link" : "discount\/spark\/SparkToolConf.html#printedName:String", "kind" : "var"}, {"label" : "group", "tail" : "(header: String): ScallopOptionGroup", "member" : "org.rogach.scallop.ScallopConfBase.group", "link" : "discount\/spark\/SparkToolConf.html#group(header:String):org.rogach.scallop.ScallopOptionGroup", "kind" : "def"}, {"label" : "mainOptions_=", "tail" : "(newMainOptions: ⇒ Seq[ScallopOption[_]]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.mainOptions_=", "link" : "discount\/spark\/SparkToolConf.html#mainOptions_=(newMainOptions:=>Seq[org.rogach.scallop.ScallopOption[_]]):Unit", "kind" : "def"}, {"label" : "mainOptions", "tail" : "(): Seq[CliOption]", "member" : "org.rogach.scallop.ScallopConfBase.mainOptions", "link" : "discount\/spark\/SparkToolConf.html#mainOptions:Seq[org.rogach.scallop.CliOption]", "kind" : "def"}, {"label" : "toggle", "tail" : "(name: String, default: ⇒ Option[Boolean], short: Char, noshort: Boolean, prefix: String, descrYes: String, descrNo: String, hidden: Boolean, group: ScallopOptionGroup): ScallopOption[Boolean]", "member" : "org.rogach.scallop.ScallopConfBase.toggle", "link" : "discount\/spark\/SparkToolConf.html#toggle(name:String,default:=>Option[Boolean],short:Char,noshort:Boolean,prefix:String,descrYes:String,descrNo:String,hidden:Boolean,group:org.rogach.scallop.ScallopOptionGroup):org.rogach.scallop.ScallopOption[Boolean]", "kind" : "def"}, {"label" : "number", "tail" : "(name: String, descr: String, validate: (Long) ⇒ Boolean, required: Boolean, default: ⇒ Option[Long], hidden: Boolean, group: ScallopOptionGroup)(conv: ValueConverter[Long]): ScallopOption[Long]", "member" : "org.rogach.scallop.ScallopConfBase.number", "link" : "discount\/spark\/SparkToolConf.html#number(name:String,descr:String,validate:Long=>Boolean,required:Boolean,default:=>Option[Long],hidden:Boolean,group:org.rogach.scallop.ScallopOptionGroup)(implicitconv:org.rogach.scallop.ValueConverter[Long]):org.rogach.scallop.ScallopOption[Long]", "kind" : "def"}, {"label" : "trailArg", "tail" : "(name: String, descr: String, validate: (A) ⇒ Boolean, required: Boolean, default: ⇒ Option[A], hidden: Boolean, group: ScallopOptionGroup)(conv: ValueConverter[A]): ScallopOption[A]", "member" : "org.rogach.scallop.ScallopConfBase.trailArg", "link" : "discount\/spark\/SparkToolConf.html#trailArg[A](name:String,descr:String,validate:A=>Boolean,required:Boolean,default:=>Option[A],hidden:Boolean,group:org.rogach.scallop.ScallopOptionGroup)(implicitconv:org.rogach.scallop.ValueConverter[A]):org.rogach.scallop.ScallopOption[A]", "kind" : "def"}, {"label" : "propsLong", "tail" : "(name: String, descr: String, keyName: String, valueName: String, hidden: Boolean, group: ScallopOptionGroup)(conv: ValueConverter[Map[String, A]]): Map[String, A]", "member" : "org.rogach.scallop.ScallopConfBase.propsLong", "link" : "discount\/spark\/SparkToolConf.html#propsLong[A](name:String,descr:String,keyName:String,valueName:String,hidden:Boolean,group:org.rogach.scallop.ScallopOptionGroup)(implicitconv:org.rogach.scallop.ValueConverter[Map[String,A]]):Map[String,A]", "kind" : "def"}, {"label" : "props", "tail" : "(name: Char, descr: String, keyName: String, valueName: String, hidden: Boolean, group: ScallopOptionGroup)(conv: ValueConverter[Map[String, A]]): LazyMap[String, A]", "member" : "org.rogach.scallop.ScallopConfBase.props", "link" : "discount\/spark\/SparkToolConf.html#props[A](name:Char,descr:String,keyName:String,valueName:String,hidden:Boolean,group:org.rogach.scallop.ScallopOptionGroup)(implicitconv:org.rogach.scallop.ValueConverter[Map[String,A]]):org.rogach.scallop.LazyMap[String,A]", "kind" : "def"}, {"label" : "tally", "tail" : "(name: String, short: Char, descr: String, hidden: Boolean, noshort: Boolean, group: ScallopOptionGroup): ScallopOption[Int]", "member" : "org.rogach.scallop.ScallopConfBase.tally", "link" : "discount\/spark\/SparkToolConf.html#tally(name:String,short:Char,descr:String,hidden:Boolean,noshort:Boolean,group:org.rogach.scallop.ScallopOptionGroup):org.rogach.scallop.ScallopOption[Int]", "kind" : "def"}, {"label" : "choice", "tail" : "(choices: Seq[String], name: String, short: Char, descr: String, default: ⇒ Option[String], required: Boolean, argName: String, hidden: Boolean, noshort: Boolean, group: ScallopOptionGroup): ScallopOption[String]", "member" : "org.rogach.scallop.ScallopConfBase.choice", "link" : "discount\/spark\/SparkToolConf.html#choice(choices:Seq[String],name:String,short:Char,descr:String,default:=>Option[String],required:Boolean,argName:String,hidden:Boolean,noshort:Boolean,group:org.rogach.scallop.ScallopOptionGroup):org.rogach.scallop.ScallopOption[String]", "kind" : "def"}, {"label" : "opt", "tail" : "(name: String, short: Char, descr: String, default: ⇒ Option[A], validate: (A) ⇒ Boolean, required: Boolean, argName: String, hidden: Boolean, noshort: Boolean, group: ScallopOptionGroup)(conv: ValueConverter[A]): ScallopOption[A]", "member" : "org.rogach.scallop.ScallopConfBase.opt", "link" : "discount\/spark\/SparkToolConf.html#opt[A](name:String,short:Char,descr:String,default:=>Option[A],validate:A=>Boolean,required:Boolean,argName:String,hidden:Boolean,noshort:Boolean,group:org.rogach.scallop.ScallopOptionGroup)(implicitconv:org.rogach.scallop.ValueConverter[A]):org.rogach.scallop.ScallopOption[A]", "kind" : "def"}, {"label" : "subcommands", "tail" : "(): List[ScallopConfBase]", "member" : "org.rogach.scallop.ScallopConfBase.subcommands", "link" : "discount\/spark\/SparkToolConf.html#subcommands:List[org.rogach.scallop.ScallopConfBase]", "kind" : "def"}, {"label" : "subcommand", "tail" : "(): Option[ScallopConfBase]", "member" : "org.rogach.scallop.ScallopConfBase.subcommand", "link" : "discount\/spark\/SparkToolConf.html#subcommand:Option[org.rogach.scallop.ScallopConfBase]", "kind" : "def"}, {"label" : "noshort_=", "tail" : "(v: Boolean): Unit", "member" : "org.rogach.scallop.ScallopConfBase.noshort_=", "link" : "discount\/spark\/SparkToolConf.html#noshort_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "noshort", "tail" : "(): Boolean", "member" : "org.rogach.scallop.ScallopConfBase.noshort", "link" : "discount\/spark\/SparkToolConf.html#noshort:Boolean", "kind" : "def"}, {"label" : "helpFormatter_=", "tail" : "(formatter: ScallopHelpFormatter): Unit", "member" : "org.rogach.scallop.ScallopConfBase.helpFormatter_=", "link" : "discount\/spark\/SparkToolConf.html#helpFormatter_=(formatter:org.rogach.scallop.ScallopHelpFormatter):Unit", "kind" : "def"}, {"label" : "helpFormatter", "tail" : "(): ScallopHelpFormatter", "member" : "org.rogach.scallop.ScallopConfBase.helpFormatter", "link" : "discount\/spark\/SparkToolConf.html#helpFormatter:org.rogach.scallop.ScallopHelpFormatter", "kind" : "def"}, {"label" : "appendDefaultToDescription_=", "tail" : "(v: Boolean): Unit", "member" : "org.rogach.scallop.ScallopConfBase.appendDefaultToDescription_=", "link" : "discount\/spark\/SparkToolConf.html#appendDefaultToDescription_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "appendDefaultToDescription", "tail" : "(): Boolean", "member" : "org.rogach.scallop.ScallopConfBase.appendDefaultToDescription", "link" : "discount\/spark\/SparkToolConf.html#appendDefaultToDescription:Boolean", "kind" : "def"}, {"label" : "_guessOptionName", "tail" : ": Boolean", "member" : "org.rogach.scallop.ScallopConfBase._guessOptionName", "link" : "discount\/spark\/SparkToolConf.html#_guessOptionName:Boolean", "kind" : "var"}, {"label" : "builder", "tail" : ": Scallop", "member" : "org.rogach.scallop.ScallopConfBase.builder", "link" : "discount\/spark\/SparkToolConf.html#builder:org.rogach.scallop.Scallop", "kind" : "var"}, {"label" : "addSubcommand", "tail" : "(conf: Subcommand): Unit", "member" : "org.rogach.scallop.ScallopConfBase.addSubcommand", "link" : "discount\/spark\/SparkToolConf.html#addSubcommand(conf:org.rogach.scallop.Subcommand):Unit", "kind" : "def"}, {"label" : "subconfigs", "tail" : ": Seq[ScallopConfBase]", "member" : "org.rogach.scallop.ScallopConfBase.subconfigs", "link" : "discount\/spark\/SparkToolConf.html#subconfigs:Seq[org.rogach.scallop.ScallopConfBase]", "kind" : "var"}, {"label" : "isRootConfig", "tail" : ": Boolean", "member" : "org.rogach.scallop.ScallopConfBase.isRootConfig", "link" : "discount\/spark\/SparkToolConf.html#isRootConfig:Boolean", "kind" : "var"}, {"label" : "parentConfig", "tail" : ": ScallopConfBase", "member" : "org.rogach.scallop.ScallopConfBase.parentConfig", "link" : "discount\/spark\/SparkToolConf.html#parentConfig:org.rogach.scallop.ScallopConfBase", "kind" : "var"}, {"label" : "commandNameAndAliases", "tail" : ": Seq[String]", "member" : "org.rogach.scallop.ScallopConfBase.commandNameAndAliases", "link" : "discount\/spark\/SparkToolConf.html#commandNameAndAliases:Seq[String]", "kind" : "val"}, {"label" : "args", "tail" : ": Seq[String]", "member" : "org.rogach.scallop.ScallopConfBase.args", "link" : "discount\/spark\/SparkToolConf.html#args:Seq[String]", "kind" : "val"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16], o17: ScallopOption[A17], o18: ScallopOption[A18], o19: ScallopOption[A19], o20: ScallopOption[A20], o21: ScallopOption[A21], o22: ScallopOption[A22])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9], Option[A10], Option[A11], Option[A12], Option[A13], Option[A14], Option[A15], Option[A16], Option[A17], Option[A18], Option[A19], Option[A20], Option[A21], Option[A22]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/spark\/SparkToolConf.html#validateOpt[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21,A22](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14],o15:org.rogach.scallop.ScallopOption[A15],o16:org.rogach.scallop.ScallopOption[A16],o17:org.rogach.scallop.ScallopOption[A17],o18:org.rogach.scallop.ScallopOption[A18],o19:org.rogach.scallop.ScallopOption[A19],o20:org.rogach.scallop.ScallopOption[A20],o21:org.rogach.scallop.ScallopOption[A21],o22:org.rogach.scallop.ScallopOption[A22])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6],Option[A7],Option[A8],Option[A9],Option[A10],Option[A11],Option[A12],Option[A13],Option[A14],Option[A15],Option[A16],Option[A17],Option[A18],Option[A19],Option[A20],Option[A21],Option[A22])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16], o17: ScallopOption[A17], o18: ScallopOption[A18], o19: ScallopOption[A19], o20: ScallopOption[A20], o21: ScallopOption[A21])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9], Option[A10], Option[A11], Option[A12], Option[A13], Option[A14], Option[A15], Option[A16], Option[A17], Option[A18], Option[A19], Option[A20], Option[A21]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/spark\/SparkToolConf.html#validateOpt[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14],o15:org.rogach.scallop.ScallopOption[A15],o16:org.rogach.scallop.ScallopOption[A16],o17:org.rogach.scallop.ScallopOption[A17],o18:org.rogach.scallop.ScallopOption[A18],o19:org.rogach.scallop.ScallopOption[A19],o20:org.rogach.scallop.ScallopOption[A20],o21:org.rogach.scallop.ScallopOption[A21])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6],Option[A7],Option[A8],Option[A9],Option[A10],Option[A11],Option[A12],Option[A13],Option[A14],Option[A15],Option[A16],Option[A17],Option[A18],Option[A19],Option[A20],Option[A21])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16], o17: ScallopOption[A17], o18: ScallopOption[A18], o19: ScallopOption[A19], o20: ScallopOption[A20])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9], Option[A10], Option[A11], Option[A12], Option[A13], Option[A14], Option[A15], Option[A16], Option[A17], Option[A18], Option[A19], Option[A20]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/spark\/SparkToolConf.html#validateOpt[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14],o15:org.rogach.scallop.ScallopOption[A15],o16:org.rogach.scallop.ScallopOption[A16],o17:org.rogach.scallop.ScallopOption[A17],o18:org.rogach.scallop.ScallopOption[A18],o19:org.rogach.scallop.ScallopOption[A19],o20:org.rogach.scallop.ScallopOption[A20])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6],Option[A7],Option[A8],Option[A9],Option[A10],Option[A11],Option[A12],Option[A13],Option[A14],Option[A15],Option[A16],Option[A17],Option[A18],Option[A19],Option[A20])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16], o17: ScallopOption[A17], o18: ScallopOption[A18], o19: ScallopOption[A19])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9], Option[A10], Option[A11], Option[A12], Option[A13], Option[A14], Option[A15], Option[A16], Option[A17], Option[A18], Option[A19]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/spark\/SparkToolConf.html#validateOpt[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14],o15:org.rogach.scallop.ScallopOption[A15],o16:org.rogach.scallop.ScallopOption[A16],o17:org.rogach.scallop.ScallopOption[A17],o18:org.rogach.scallop.ScallopOption[A18],o19:org.rogach.scallop.ScallopOption[A19])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6],Option[A7],Option[A8],Option[A9],Option[A10],Option[A11],Option[A12],Option[A13],Option[A14],Option[A15],Option[A16],Option[A17],Option[A18],Option[A19])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16], o17: ScallopOption[A17], o18: ScallopOption[A18])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9], Option[A10], Option[A11], Option[A12], Option[A13], Option[A14], Option[A15], Option[A16], Option[A17], Option[A18]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/spark\/SparkToolConf.html#validateOpt[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14],o15:org.rogach.scallop.ScallopOption[A15],o16:org.rogach.scallop.ScallopOption[A16],o17:org.rogach.scallop.ScallopOption[A17],o18:org.rogach.scallop.ScallopOption[A18])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6],Option[A7],Option[A8],Option[A9],Option[A10],Option[A11],Option[A12],Option[A13],Option[A14],Option[A15],Option[A16],Option[A17],Option[A18])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16], o17: ScallopOption[A17])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9], Option[A10], Option[A11], Option[A12], Option[A13], Option[A14], Option[A15], Option[A16], Option[A17]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/spark\/SparkToolConf.html#validateOpt[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14],o15:org.rogach.scallop.ScallopOption[A15],o16:org.rogach.scallop.ScallopOption[A16],o17:org.rogach.scallop.ScallopOption[A17])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6],Option[A7],Option[A8],Option[A9],Option[A10],Option[A11],Option[A12],Option[A13],Option[A14],Option[A15],Option[A16],Option[A17])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9], Option[A10], Option[A11], Option[A12], Option[A13], Option[A14], Option[A15], Option[A16]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/spark\/SparkToolConf.html#validateOpt[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14],o15:org.rogach.scallop.ScallopOption[A15],o16:org.rogach.scallop.ScallopOption[A16])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6],Option[A7],Option[A8],Option[A9],Option[A10],Option[A11],Option[A12],Option[A13],Option[A14],Option[A15],Option[A16])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9], Option[A10], Option[A11], Option[A12], Option[A13], Option[A14], Option[A15]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/spark\/SparkToolConf.html#validateOpt[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14],o15:org.rogach.scallop.ScallopOption[A15])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6],Option[A7],Option[A8],Option[A9],Option[A10],Option[A11],Option[A12],Option[A13],Option[A14],Option[A15])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9], Option[A10], Option[A11], Option[A12], Option[A13], Option[A14]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/spark\/SparkToolConf.html#validateOpt[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6],Option[A7],Option[A8],Option[A9],Option[A10],Option[A11],Option[A12],Option[A13],Option[A14])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9], Option[A10], Option[A11], Option[A12], Option[A13]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/spark\/SparkToolConf.html#validateOpt[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6],Option[A7],Option[A8],Option[A9],Option[A10],Option[A11],Option[A12],Option[A13])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9], Option[A10], Option[A11], Option[A12]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/spark\/SparkToolConf.html#validateOpt[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6],Option[A7],Option[A8],Option[A9],Option[A10],Option[A11],Option[A12])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9], Option[A10], Option[A11]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/spark\/SparkToolConf.html#validateOpt[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6],Option[A7],Option[A8],Option[A9],Option[A10],Option[A11])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9], Option[A10]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/spark\/SparkToolConf.html#validateOpt[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6],Option[A7],Option[A8],Option[A9],Option[A10])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/spark\/SparkToolConf.html#validateOpt[A1,A2,A3,A4,A5,A6,A7,A8,A9](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6],Option[A7],Option[A8],Option[A9])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/spark\/SparkToolConf.html#validateOpt[A1,A2,A3,A4,A5,A6,A7,A8](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6],Option[A7],Option[A8])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/spark\/SparkToolConf.html#validateOpt[A1,A2,A3,A4,A5,A6,A7](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6],Option[A7])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/spark\/SparkToolConf.html#validateOpt[A1,A2,A3,A4,A5,A6](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/spark\/SparkToolConf.html#validateOpt[A1,A2,A3,A4,A5](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4])(fn: (Option[A1], Option[A2], Option[A3], Option[A4]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/spark\/SparkToolConf.html#validateOpt[A1,A2,A3,A4](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4])(fn:(Option[A1],Option[A2],Option[A3],Option[A4])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3])(fn: (Option[A1], Option[A2], Option[A3]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/spark\/SparkToolConf.html#validateOpt[A1,A2,A3](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3])(fn:(Option[A1],Option[A2],Option[A3])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2])(fn: (Option[A1], Option[A2]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/spark\/SparkToolConf.html#validateOpt[A1,A2](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2])(fn:(Option[A1],Option[A2])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1])(fn: (Option[A1]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/spark\/SparkToolConf.html#validateOpt[A1](o1:org.rogach.scallop.ScallopOption[A1])(fn:Option[A1]=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16], o17: ScallopOption[A17], o18: ScallopOption[A18], o19: ScallopOption[A19], o20: ScallopOption[A20], o21: ScallopOption[A21], o22: ScallopOption[A22])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/spark\/SparkToolConf.html#validate[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21,A22](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14],o15:org.rogach.scallop.ScallopOption[A15],o16:org.rogach.scallop.ScallopOption[A16],o17:org.rogach.scallop.ScallopOption[A17],o18:org.rogach.scallop.ScallopOption[A18],o19:org.rogach.scallop.ScallopOption[A19],o20:org.rogach.scallop.ScallopOption[A20],o21:org.rogach.scallop.ScallopOption[A21],o22:org.rogach.scallop.ScallopOption[A22])(fn:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21,A22)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16], o17: ScallopOption[A17], o18: ScallopOption[A18], o19: ScallopOption[A19], o20: ScallopOption[A20], o21: ScallopOption[A21])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/spark\/SparkToolConf.html#validate[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14],o15:org.rogach.scallop.ScallopOption[A15],o16:org.rogach.scallop.ScallopOption[A16],o17:org.rogach.scallop.ScallopOption[A17],o18:org.rogach.scallop.ScallopOption[A18],o19:org.rogach.scallop.ScallopOption[A19],o20:org.rogach.scallop.ScallopOption[A20],o21:org.rogach.scallop.ScallopOption[A21])(fn:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16], o17: ScallopOption[A17], o18: ScallopOption[A18], o19: ScallopOption[A19], o20: ScallopOption[A20])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/spark\/SparkToolConf.html#validate[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14],o15:org.rogach.scallop.ScallopOption[A15],o16:org.rogach.scallop.ScallopOption[A16],o17:org.rogach.scallop.ScallopOption[A17],o18:org.rogach.scallop.ScallopOption[A18],o19:org.rogach.scallop.ScallopOption[A19],o20:org.rogach.scallop.ScallopOption[A20])(fn:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16], o17: ScallopOption[A17], o18: ScallopOption[A18], o19: ScallopOption[A19])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/spark\/SparkToolConf.html#validate[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14],o15:org.rogach.scallop.ScallopOption[A15],o16:org.rogach.scallop.ScallopOption[A16],o17:org.rogach.scallop.ScallopOption[A17],o18:org.rogach.scallop.ScallopOption[A18],o19:org.rogach.scallop.ScallopOption[A19])(fn:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16], o17: ScallopOption[A17], o18: ScallopOption[A18])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/spark\/SparkToolConf.html#validate[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14],o15:org.rogach.scallop.ScallopOption[A15],o16:org.rogach.scallop.ScallopOption[A16],o17:org.rogach.scallop.ScallopOption[A17],o18:org.rogach.scallop.ScallopOption[A18])(fn:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16], o17: ScallopOption[A17])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/spark\/SparkToolConf.html#validate[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14],o15:org.rogach.scallop.ScallopOption[A15],o16:org.rogach.scallop.ScallopOption[A16],o17:org.rogach.scallop.ScallopOption[A17])(fn:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/spark\/SparkToolConf.html#validate[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14],o15:org.rogach.scallop.ScallopOption[A15],o16:org.rogach.scallop.ScallopOption[A16])(fn:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/spark\/SparkToolConf.html#validate[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14],o15:org.rogach.scallop.ScallopOption[A15])(fn:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/spark\/SparkToolConf.html#validate[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14])(fn:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/spark\/SparkToolConf.html#validate[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13])(fn:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/spark\/SparkToolConf.html#validate[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12])(fn:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/spark\/SparkToolConf.html#validate[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11])(fn:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/spark\/SparkToolConf.html#validate[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10])(fn:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/spark\/SparkToolConf.html#validate[A1,A2,A3,A4,A5,A6,A7,A8,A9](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9])(fn:(A1,A2,A3,A4,A5,A6,A7,A8,A9)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8])(fn: (A1, A2, A3, A4, A5, A6, A7, A8) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/spark\/SparkToolConf.html#validate[A1,A2,A3,A4,A5,A6,A7,A8](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8])(fn:(A1,A2,A3,A4,A5,A6,A7,A8)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7])(fn: (A1, A2, A3, A4, A5, A6, A7) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/spark\/SparkToolConf.html#validate[A1,A2,A3,A4,A5,A6,A7](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7])(fn:(A1,A2,A3,A4,A5,A6,A7)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6])(fn: (A1, A2, A3, A4, A5, A6) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/spark\/SparkToolConf.html#validate[A1,A2,A3,A4,A5,A6](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6])(fn:(A1,A2,A3,A4,A5,A6)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5])(fn: (A1, A2, A3, A4, A5) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/spark\/SparkToolConf.html#validate[A1,A2,A3,A4,A5](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5])(fn:(A1,A2,A3,A4,A5)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4])(fn: (A1, A2, A3, A4) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/spark\/SparkToolConf.html#validate[A1,A2,A3,A4](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4])(fn:(A1,A2,A3,A4)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3])(fn: (A1, A2, A3) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/spark\/SparkToolConf.html#validate[A1,A2,A3](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3])(fn:(A1,A2,A3)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2])(fn: (A1, A2) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/spark\/SparkToolConf.html#validate[A1,A2](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2])(fn:(A1,A2)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1])(fn: (A1) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/spark\/SparkToolConf.html#validate[A1](o1:org.rogach.scallop.ScallopOption[A1])(fn:A1=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validations", "tail" : ": List[() ⇒ Either[String, Unit]]", "member" : "org.rogach.scallop.ScallopConfValidations.validations", "link" : "discount\/spark\/SparkToolConf.html#validations:List[()=>Either[String,Unit]]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "discount\/spark\/SparkToolConf.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "discount\/spark\/SparkToolConf.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "discount\/spark\/SparkToolConf.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "discount\/spark\/SparkToolConf.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "discount\/spark\/SparkToolConf.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "discount\/spark\/SparkToolConf.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "discount\/spark\/SparkToolConf.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/spark\/SparkToolConf.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/spark\/SparkToolConf.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/spark\/SparkToolConf.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "discount\/spark\/SparkToolConf.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "discount\/spark\/SparkToolConf.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "discount\/spark\/SparkToolConf.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "discount\/spark\/SparkToolConf.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "discount\/spark\/SparkToolConf.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "discount\/spark\/SparkToolConf.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "discount\/spark\/SparkToolConf.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "discount\/spark\/SparkToolConf.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "discount\/spark\/SparkToolConf.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "discount\/spark\/SparkToolConf.html", "kind" : "class"}], "discount.bucket" : [{"name" : "discount.bucket.BucketStats", "shortDescription" : "Statistics for a single bin\/bucket.", "object" : "discount\/bucket\/BucketStats$.html", "members_object" : [{"label" : "collectFromCounts", "tail" : "(id: String, counts: Iterator[Abundance]): BucketStats", "member" : "discount.bucket.BucketStats.collectFromCounts", "link" : "discount\/bucket\/BucketStats$.html#collectFromCounts(id:String,counts:Iterator[discount.Abundance]):discount.bucket.BucketStats", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "discount\/bucket\/BucketStats$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "discount\/bucket\/BucketStats$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "discount\/bucket\/BucketStats$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "discount\/bucket\/BucketStats$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "discount\/bucket\/BucketStats$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "discount\/bucket\/BucketStats$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "discount\/bucket\/BucketStats$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/bucket\/BucketStats$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/bucket\/BucketStats$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/bucket\/BucketStats$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "discount\/bucket\/BucketStats$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "discount\/bucket\/BucketStats$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "discount\/bucket\/BucketStats$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "discount\/bucket\/BucketStats$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "discount\/bucket\/BucketStats$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "discount\/bucket\/BucketStats$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "discount\/bucket\/BucketStats$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "discount\/bucket\/BucketStats$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "discount\/bucket\/BucketStats$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "merge", "tail" : "(other: BucketStats): BucketStats", "member" : "discount.bucket.BucketStats.merge", "link" : "discount\/bucket\/BucketStats.html#merge(other:discount.bucket.BucketStats):discount.bucket.BucketStats", "kind" : "def"}, {"member" : "discount.bucket.BucketStats#<init>", "error" : "unsupported entity"}, {"label" : "maxAbundance", "tail" : ": Abundance", "member" : "discount.bucket.BucketStats.maxAbundance", "link" : "discount\/bucket\/BucketStats.html#maxAbundance:discount.Abundance", "kind" : "val"}, {"label" : "uniqueKmers", "tail" : ": Long", "member" : "discount.bucket.BucketStats.uniqueKmers", "link" : "discount\/bucket\/BucketStats.html#uniqueKmers:Long", "kind" : "val"}, {"label" : "distinctKmers", "tail" : ": Long", "member" : "discount.bucket.BucketStats.distinctKmers", "link" : "discount\/bucket\/BucketStats.html#distinctKmers:Long", "kind" : "val"}, {"label" : "totalAbundance", "tail" : ": Abundance", "member" : "discount.bucket.BucketStats.totalAbundance", "link" : "discount\/bucket\/BucketStats.html#totalAbundance:discount.Abundance", "kind" : "val"}, {"label" : "superKmers", "tail" : ": Long", "member" : "discount.bucket.BucketStats.superKmers", "link" : "discount\/bucket\/BucketStats.html#superKmers:Long", "kind" : "val"}, {"label" : "id", "tail" : ": String", "member" : "discount.bucket.BucketStats.id", "link" : "discount\/bucket\/BucketStats.html#id:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "discount\/bucket\/BucketStats.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "discount\/bucket\/BucketStats.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "discount\/bucket\/BucketStats.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "discount\/bucket\/BucketStats.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "discount\/bucket\/BucketStats.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "discount\/bucket\/BucketStats.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "discount\/bucket\/BucketStats.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/bucket\/BucketStats.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/bucket\/BucketStats.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/bucket\/BucketStats.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "discount\/bucket\/BucketStats.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "discount\/bucket\/BucketStats.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "discount\/bucket\/BucketStats.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "discount\/bucket\/BucketStats.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "discount\/bucket\/BucketStats.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "discount\/bucket\/BucketStats.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "discount\/bucket\/BucketStats.html", "kind" : "case class"}], "discount" : [{"name" : "discount.Commands", "shortDescription" : "", "object" : "discount\/Commands$.html", "members_object" : [{"label" : "run", "tail" : "(conf: ScallopConf): Unit", "member" : "discount.Commands.run", "link" : "discount\/Commands$.html#run(conf:org.rogach.scallop.ScallopConf):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "discount\/Commands$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "discount\/Commands$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "discount\/Commands$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "discount\/Commands$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "discount\/Commands$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "discount\/Commands$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "discount\/Commands$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/Commands$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/Commands$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/Commands$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "discount\/Commands$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "discount\/Commands$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "discount\/Commands$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "discount\/Commands$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "discount\/Commands$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "discount\/Commands$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "discount\/Commands$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "discount\/Commands$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "discount\/Commands$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "discount.Configuration", "shortDescription" : "Main command-line configuration", "members_class" : [{"label" : "multiline", "tail" : ": ScallopOption[Boolean]", "member" : "discount.Configuration.multiline", "link" : "discount\/Configuration.html#multiline:org.rogach.scallop.ScallopOption[Boolean]", "kind" : "val"}, {"label" : "maxSequenceLength", "tail" : ": ScallopOption[Int]", "member" : "discount.Configuration.maxSequenceLength", "link" : "discount\/Configuration.html#maxSequenceLength:org.rogach.scallop.ScallopOption[Int]", "kind" : "val"}, {"label" : "templateSpace", "tail" : "(): MotifSpace", "member" : "discount.Configuration.templateSpace", "link" : "discount\/Configuration.html#templateSpace:discount.hash.MotifSpace", "kind" : "def"}, {"label" : "long", "tail" : ": ScallopOption[Boolean]", "member" : "discount.Configuration.long", "link" : "discount\/Configuration.html#long:org.rogach.scallop.ScallopOption[Boolean]", "kind" : "val"}, {"label" : "rna", "tail" : ": ScallopOption[Boolean]", "member" : "discount.Configuration.rna", "link" : "discount\/Configuration.html#rna:org.rogach.scallop.ScallopOption[Boolean]", "kind" : "val"}, {"label" : "minimizers", "tail" : ": ScallopOption[String]", "member" : "discount.Configuration.minimizers", "link" : "discount\/Configuration.html#minimizers:org.rogach.scallop.ScallopOption[String]", "kind" : "val"}, {"label" : "samplePartitions", "tail" : ": ScallopOption[Int]", "member" : "discount.Configuration.samplePartitions", "link" : "discount\/Configuration.html#samplePartitions:org.rogach.scallop.ScallopOption[Int]", "kind" : "val"}, {"label" : "sample", "tail" : ": ScallopOption[Double]", "member" : "discount.Configuration.sample", "link" : "discount\/Configuration.html#sample:org.rogach.scallop.ScallopOption[Double]", "kind" : "val"}, {"label" : "minimizerWidth", "tail" : ": ScallopOption[Int]", "member" : "discount.Configuration.minimizerWidth", "link" : "discount\/Configuration.html#minimizerWidth:org.rogach.scallop.ScallopOption[Int]", "kind" : "val"}, {"label" : "ordering", "tail" : ": ScallopOption[String]", "member" : "discount.Configuration.ordering", "link" : "discount\/Configuration.html#ordering:org.rogach.scallop.ScallopOption[String]", "kind" : "val"}, {"label" : "normalize", "tail" : ": ScallopOption[Boolean]", "member" : "discount.Configuration.normalize", "link" : "discount\/Configuration.html#normalize:org.rogach.scallop.ScallopOption[Boolean]", "kind" : "val"}, {"label" : "k", "tail" : ": ScallopOption[Int]", "member" : "discount.Configuration.k", "link" : "discount\/Configuration.html#k:org.rogach.scallop.ScallopOption[Int]", "kind" : "val"}, {"member" : "discount.Configuration#<init>", "error" : "unsupported entity"}, {"label" : "performOptionNameGuessing", "tail" : "(): Unit", "member" : "org.rogach.scallop.ScallopConf.performOptionNameGuessing", "link" : "discount\/Configuration.html#performOptionNameGuessing():Unit", "kind" : "def"}, {"label" : "guessOptionName_=", "tail" : "(v: Boolean): Unit", "member" : "org.rogach.scallop.ScallopConf.guessOptionName_=", "link" : "discount\/Configuration.html#guessOptionName_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "guessOptionName", "tail" : "(): Boolean", "member" : "org.rogach.scallop.ScallopConf.guessOptionName", "link" : "discount\/Configuration.html#guessOptionName:Boolean", "kind" : "def"}, {"label" : "optionNameGuessingSupported", "tail" : "(): Boolean", "member" : "org.rogach.scallop.ScallopConf.optionNameGuessingSupported", "link" : "discount\/Configuration.html#optionNameGuessingSupported:Boolean", "kind" : "def"}, {"label" : "verify", "tail" : "(): Unit", "member" : "org.rogach.scallop.ScallopConfBase.verify", "link" : "discount\/Configuration.html#verify():Unit", "kind" : "def"}, {"label" : "shortSubcommandsHelp", "tail" : "(enable: Boolean): Unit", "member" : "org.rogach.scallop.ScallopConfBase.shortSubcommandsHelp", "link" : "discount\/Configuration.html#shortSubcommandsHelp(enable:Boolean):Unit", "kind" : "def"}, {"label" : "helpWidth", "tail" : "(w: Int): Unit", "member" : "org.rogach.scallop.ScallopConfBase.helpWidth", "link" : "discount\/Configuration.html#helpWidth(w:Int):Unit", "kind" : "def"}, {"label" : "footer", "tail" : "(f: String): Unit", "member" : "org.rogach.scallop.ScallopConfBase.footer", "link" : "discount\/Configuration.html#footer(f:String):Unit", "kind" : "def"}, {"label" : "banner", "tail" : "(b: String): Unit", "member" : "org.rogach.scallop.ScallopConfBase.banner", "link" : "discount\/Configuration.html#banner(b:String):Unit", "kind" : "def"}, {"label" : "version", "tail" : "(v: String): Unit", "member" : "org.rogach.scallop.ScallopConfBase.version", "link" : "discount\/Configuration.html#version(v:String):Unit", "kind" : "def"}, {"label" : "printHelp", "tail" : "(): Unit", "member" : "org.rogach.scallop.ScallopConfBase.printHelp", "link" : "discount\/Configuration.html#printHelp():Unit", "kind" : "def"}, {"label" : "getHelpString", "tail" : "(): String", "member" : "org.rogach.scallop.ScallopConfBase.getHelpString", "link" : "discount\/Configuration.html#getHelpString():String", "kind" : "def"}, {"label" : "filteredSummary", "tail" : "(blurred: Set[String]): String", "member" : "org.rogach.scallop.ScallopConfBase.filteredSummary", "link" : "discount\/Configuration.html#filteredSummary(blurred:Set[String]):String", "kind" : "def"}, {"label" : "summary", "tail" : "(): String", "member" : "org.rogach.scallop.ScallopConfBase.summary", "link" : "discount\/Configuration.html#summary:String", "kind" : "def"}, {"label" : "requireSubcommand", "tail" : "(): Unit", "member" : "org.rogach.scallop.ScallopConfBase.requireSubcommand", "link" : "discount\/Configuration.html#requireSubcommand():Unit", "kind" : "def"}, {"label" : "validatePathsIsFile", "tail" : "(pathsOption: ScallopOption[List[Path]]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.validatePathsIsFile", "link" : "discount\/Configuration.html#validatePathsIsFile(pathsOption:org.rogach.scallop.ScallopOption[List[java.nio.file.Path]]):Unit", "kind" : "def"}, {"label" : "validatePathsIsDirectory", "tail" : "(pathsOption: ScallopOption[List[Path]]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.validatePathsIsDirectory", "link" : "discount\/Configuration.html#validatePathsIsDirectory(pathsOption:org.rogach.scallop.ScallopOption[List[java.nio.file.Path]]):Unit", "kind" : "def"}, {"label" : "validatePathsDoesNotExist", "tail" : "(pathsOption: ScallopOption[List[Path]]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.validatePathsDoesNotExist", "link" : "discount\/Configuration.html#validatePathsDoesNotExist(pathsOption:org.rogach.scallop.ScallopOption[List[java.nio.file.Path]]):Unit", "kind" : "def"}, {"label" : "validatePathsExists", "tail" : "(pathsOption: ScallopOption[List[Path]]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.validatePathsExists", "link" : "discount\/Configuration.html#validatePathsExists(pathsOption:org.rogach.scallop.ScallopOption[List[java.nio.file.Path]]):Unit", "kind" : "def"}, {"label" : "validatePathIsFile", "tail" : "(pathOption: ScallopOption[Path]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.validatePathIsFile", "link" : "discount\/Configuration.html#validatePathIsFile(pathOption:org.rogach.scallop.ScallopOption[java.nio.file.Path]):Unit", "kind" : "def"}, {"label" : "validatePathIsDirectory", "tail" : "(pathOption: ScallopOption[Path]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.validatePathIsDirectory", "link" : "discount\/Configuration.html#validatePathIsDirectory(pathOption:org.rogach.scallop.ScallopOption[java.nio.file.Path]):Unit", "kind" : "def"}, {"label" : "validatePathDoesNotExist", "tail" : "(pathOption: ScallopOption[Path]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.validatePathDoesNotExist", "link" : "discount\/Configuration.html#validatePathDoesNotExist(pathOption:org.rogach.scallop.ScallopOption[java.nio.file.Path]):Unit", "kind" : "def"}, {"label" : "validatePathExists", "tail" : "(pathOption: ScallopOption[Path]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.validatePathExists", "link" : "discount\/Configuration.html#validatePathExists(pathOption:org.rogach.scallop.ScallopOption[java.nio.file.Path]):Unit", "kind" : "def"}, {"label" : "validateFilesIsFile", "tail" : "(filesOption: ScallopOption[List[File]]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.validateFilesIsFile", "link" : "discount\/Configuration.html#validateFilesIsFile(filesOption:org.rogach.scallop.ScallopOption[List[java.io.File]]):Unit", "kind" : "def"}, {"label" : "validateFilesIsDirectory", "tail" : "(filesOption: ScallopOption[List[File]]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.validateFilesIsDirectory", "link" : "discount\/Configuration.html#validateFilesIsDirectory(filesOption:org.rogach.scallop.ScallopOption[List[java.io.File]]):Unit", "kind" : "def"}, {"label" : "validateFilesDoNotExist", "tail" : "(filesOption: ScallopOption[List[File]]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.validateFilesDoNotExist", "link" : "discount\/Configuration.html#validateFilesDoNotExist(filesOption:org.rogach.scallop.ScallopOption[List[java.io.File]]):Unit", "kind" : "def"}, {"label" : "validateFilesExist", "tail" : "(filesOption: ScallopOption[List[File]]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.validateFilesExist", "link" : "discount\/Configuration.html#validateFilesExist(filesOption:org.rogach.scallop.ScallopOption[List[java.io.File]]):Unit", "kind" : "def"}, {"label" : "validateFileIsFile", "tail" : "(fileOption: ScallopOption[File]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.validateFileIsFile", "link" : "discount\/Configuration.html#validateFileIsFile(fileOption:org.rogach.scallop.ScallopOption[java.io.File]):Unit", "kind" : "def"}, {"label" : "validateFileIsDirectory", "tail" : "(fileOption: ScallopOption[File]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.validateFileIsDirectory", "link" : "discount\/Configuration.html#validateFileIsDirectory(fileOption:org.rogach.scallop.ScallopOption[java.io.File]):Unit", "kind" : "def"}, {"label" : "validateFileDoesNotExist", "tail" : "(fileOption: ScallopOption[File]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.validateFileDoesNotExist", "link" : "discount\/Configuration.html#validateFileDoesNotExist(fileOption:org.rogach.scallop.ScallopOption[java.io.File]):Unit", "kind" : "def"}, {"label" : "validateFileExists", "tail" : "(fileOption: ScallopOption[File]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.validateFileExists", "link" : "discount\/Configuration.html#validateFileExists(fileOption:org.rogach.scallop.ScallopOption[java.io.File]):Unit", "kind" : "def"}, {"label" : "allDefinedOrUndefined", "tail" : "(list: ScallopOption[_]*): Unit", "member" : "org.rogach.scallop.ScallopConfBase.allDefinedOrUndefined", "link" : "discount\/Configuration.html#allDefinedOrUndefined(list:org.rogach.scallop.ScallopOption[_]*):Unit", "kind" : "def"}, {"label" : "codependent", "tail" : "(list: ScallopOption[_]*): Unit", "member" : "org.rogach.scallop.ScallopConfBase.codependent", "link" : "discount\/Configuration.html#codependent(list:org.rogach.scallop.ScallopOption[_]*):Unit", "kind" : "def"}, {"label" : "mutuallyExclusive", "tail" : "(list: ScallopOption[_]*): Unit", "member" : "org.rogach.scallop.ScallopConfBase.mutuallyExclusive", "link" : "discount\/Configuration.html#mutuallyExclusive(list:org.rogach.scallop.ScallopOption[_]*):Unit", "kind" : "def"}, {"label" : "requireOne", "tail" : "(list: ScallopOption[_]*): Unit", "member" : "org.rogach.scallop.ScallopConfBase.requireOne", "link" : "discount\/Configuration.html#requireOne(list:org.rogach.scallop.ScallopOption[_]*):Unit", "kind" : "def"}, {"label" : "requireAtLeastOne", "tail" : "(list: ScallopOption[_]*): Unit", "member" : "org.rogach.scallop.ScallopConfBase.requireAtLeastOne", "link" : "discount\/Configuration.html#requireAtLeastOne(list:org.rogach.scallop.ScallopOption[_]*):Unit", "kind" : "def"}, {"label" : "conflicts", "tail" : "(opt: ScallopOption[_], list: List[ScallopOption[_]]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.conflicts", "link" : "discount\/Configuration.html#conflicts(opt:org.rogach.scallop.ScallopOption[_],list:List[org.rogach.scallop.ScallopOption[_]]):Unit", "kind" : "def"}, {"label" : "dependsOnAll", "tail" : "(opt: ScallopOption[_], list: List[ScallopOption[_]]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.dependsOnAll", "link" : "discount\/Configuration.html#dependsOnAll(opt:org.rogach.scallop.ScallopOption[_],list:List[org.rogach.scallop.ScallopOption[_]]):Unit", "kind" : "def"}, {"label" : "dependsOnAny", "tail" : "(opt: ScallopOption[_], list: List[ScallopOption[_]]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.dependsOnAny", "link" : "discount\/Configuration.html#dependsOnAny(opt:org.rogach.scallop.ScallopOption[_],list:List[org.rogach.scallop.ScallopOption[_]]):Unit", "kind" : "def"}, {"label" : "addValidation", "tail" : "(fn: ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.addValidation", "link" : "discount\/Configuration.html#addValidation(fn:=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "assertVerified", "tail" : "(): Unit", "member" : "org.rogach.scallop.ScallopConfBase.assertVerified", "link" : "discount\/Configuration.html#assertVerified():Unit", "kind" : "def"}, {"label" : "onError", "tail" : "(e: Throwable): Unit", "member" : "org.rogach.scallop.ScallopConfBase.onError", "link" : "discount\/Configuration.html#onError(e:Throwable):Unit", "kind" : "def"}, {"label" : "errorMessageHandler", "tail" : ": (String) ⇒ Unit", "member" : "org.rogach.scallop.ScallopConfBase.errorMessageHandler", "link" : "discount\/Configuration.html#errorMessageHandler:String=>Unit", "kind" : "var"}, {"label" : "printedName", "tail" : ": String", "member" : "org.rogach.scallop.ScallopConfBase.printedName", "link" : "discount\/Configuration.html#printedName:String", "kind" : "var"}, {"label" : "group", "tail" : "(header: String): ScallopOptionGroup", "member" : "org.rogach.scallop.ScallopConfBase.group", "link" : "discount\/Configuration.html#group(header:String):org.rogach.scallop.ScallopOptionGroup", "kind" : "def"}, {"label" : "mainOptions_=", "tail" : "(newMainOptions: ⇒ Seq[ScallopOption[_]]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.mainOptions_=", "link" : "discount\/Configuration.html#mainOptions_=(newMainOptions:=>Seq[org.rogach.scallop.ScallopOption[_]]):Unit", "kind" : "def"}, {"label" : "mainOptions", "tail" : "(): Seq[CliOption]", "member" : "org.rogach.scallop.ScallopConfBase.mainOptions", "link" : "discount\/Configuration.html#mainOptions:Seq[org.rogach.scallop.CliOption]", "kind" : "def"}, {"label" : "toggle", "tail" : "(name: String, default: ⇒ Option[Boolean], short: Char, noshort: Boolean, prefix: String, descrYes: String, descrNo: String, hidden: Boolean, group: ScallopOptionGroup): ScallopOption[Boolean]", "member" : "org.rogach.scallop.ScallopConfBase.toggle", "link" : "discount\/Configuration.html#toggle(name:String,default:=>Option[Boolean],short:Char,noshort:Boolean,prefix:String,descrYes:String,descrNo:String,hidden:Boolean,group:org.rogach.scallop.ScallopOptionGroup):org.rogach.scallop.ScallopOption[Boolean]", "kind" : "def"}, {"label" : "number", "tail" : "(name: String, descr: String, validate: (Long) ⇒ Boolean, required: Boolean, default: ⇒ Option[Long], hidden: Boolean, group: ScallopOptionGroup)(conv: ValueConverter[Long]): ScallopOption[Long]", "member" : "org.rogach.scallop.ScallopConfBase.number", "link" : "discount\/Configuration.html#number(name:String,descr:String,validate:Long=>Boolean,required:Boolean,default:=>Option[Long],hidden:Boolean,group:org.rogach.scallop.ScallopOptionGroup)(implicitconv:org.rogach.scallop.ValueConverter[Long]):org.rogach.scallop.ScallopOption[Long]", "kind" : "def"}, {"label" : "trailArg", "tail" : "(name: String, descr: String, validate: (A) ⇒ Boolean, required: Boolean, default: ⇒ Option[A], hidden: Boolean, group: ScallopOptionGroup)(conv: ValueConverter[A]): ScallopOption[A]", "member" : "org.rogach.scallop.ScallopConfBase.trailArg", "link" : "discount\/Configuration.html#trailArg[A](name:String,descr:String,validate:A=>Boolean,required:Boolean,default:=>Option[A],hidden:Boolean,group:org.rogach.scallop.ScallopOptionGroup)(implicitconv:org.rogach.scallop.ValueConverter[A]):org.rogach.scallop.ScallopOption[A]", "kind" : "def"}, {"label" : "propsLong", "tail" : "(name: String, descr: String, keyName: String, valueName: String, hidden: Boolean, group: ScallopOptionGroup)(conv: ValueConverter[Map[String, A]]): Map[String, A]", "member" : "org.rogach.scallop.ScallopConfBase.propsLong", "link" : "discount\/Configuration.html#propsLong[A](name:String,descr:String,keyName:String,valueName:String,hidden:Boolean,group:org.rogach.scallop.ScallopOptionGroup)(implicitconv:org.rogach.scallop.ValueConverter[Map[String,A]]):Map[String,A]", "kind" : "def"}, {"label" : "props", "tail" : "(name: Char, descr: String, keyName: String, valueName: String, hidden: Boolean, group: ScallopOptionGroup)(conv: ValueConverter[Map[String, A]]): LazyMap[String, A]", "member" : "org.rogach.scallop.ScallopConfBase.props", "link" : "discount\/Configuration.html#props[A](name:Char,descr:String,keyName:String,valueName:String,hidden:Boolean,group:org.rogach.scallop.ScallopOptionGroup)(implicitconv:org.rogach.scallop.ValueConverter[Map[String,A]]):org.rogach.scallop.LazyMap[String,A]", "kind" : "def"}, {"label" : "tally", "tail" : "(name: String, short: Char, descr: String, hidden: Boolean, noshort: Boolean, group: ScallopOptionGroup): ScallopOption[Int]", "member" : "org.rogach.scallop.ScallopConfBase.tally", "link" : "discount\/Configuration.html#tally(name:String,short:Char,descr:String,hidden:Boolean,noshort:Boolean,group:org.rogach.scallop.ScallopOptionGroup):org.rogach.scallop.ScallopOption[Int]", "kind" : "def"}, {"label" : "choice", "tail" : "(choices: Seq[String], name: String, short: Char, descr: String, default: ⇒ Option[String], required: Boolean, argName: String, hidden: Boolean, noshort: Boolean, group: ScallopOptionGroup): ScallopOption[String]", "member" : "org.rogach.scallop.ScallopConfBase.choice", "link" : "discount\/Configuration.html#choice(choices:Seq[String],name:String,short:Char,descr:String,default:=>Option[String],required:Boolean,argName:String,hidden:Boolean,noshort:Boolean,group:org.rogach.scallop.ScallopOptionGroup):org.rogach.scallop.ScallopOption[String]", "kind" : "def"}, {"label" : "opt", "tail" : "(name: String, short: Char, descr: String, default: ⇒ Option[A], validate: (A) ⇒ Boolean, required: Boolean, argName: String, hidden: Boolean, noshort: Boolean, group: ScallopOptionGroup)(conv: ValueConverter[A]): ScallopOption[A]", "member" : "org.rogach.scallop.ScallopConfBase.opt", "link" : "discount\/Configuration.html#opt[A](name:String,short:Char,descr:String,default:=>Option[A],validate:A=>Boolean,required:Boolean,argName:String,hidden:Boolean,noshort:Boolean,group:org.rogach.scallop.ScallopOptionGroup)(implicitconv:org.rogach.scallop.ValueConverter[A]):org.rogach.scallop.ScallopOption[A]", "kind" : "def"}, {"label" : "subcommands", "tail" : "(): List[ScallopConfBase]", "member" : "org.rogach.scallop.ScallopConfBase.subcommands", "link" : "discount\/Configuration.html#subcommands:List[org.rogach.scallop.ScallopConfBase]", "kind" : "def"}, {"label" : "subcommand", "tail" : "(): Option[ScallopConfBase]", "member" : "org.rogach.scallop.ScallopConfBase.subcommand", "link" : "discount\/Configuration.html#subcommand:Option[org.rogach.scallop.ScallopConfBase]", "kind" : "def"}, {"label" : "noshort_=", "tail" : "(v: Boolean): Unit", "member" : "org.rogach.scallop.ScallopConfBase.noshort_=", "link" : "discount\/Configuration.html#noshort_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "noshort", "tail" : "(): Boolean", "member" : "org.rogach.scallop.ScallopConfBase.noshort", "link" : "discount\/Configuration.html#noshort:Boolean", "kind" : "def"}, {"label" : "helpFormatter_=", "tail" : "(formatter: ScallopHelpFormatter): Unit", "member" : "org.rogach.scallop.ScallopConfBase.helpFormatter_=", "link" : "discount\/Configuration.html#helpFormatter_=(formatter:org.rogach.scallop.ScallopHelpFormatter):Unit", "kind" : "def"}, {"label" : "helpFormatter", "tail" : "(): ScallopHelpFormatter", "member" : "org.rogach.scallop.ScallopConfBase.helpFormatter", "link" : "discount\/Configuration.html#helpFormatter:org.rogach.scallop.ScallopHelpFormatter", "kind" : "def"}, {"label" : "appendDefaultToDescription_=", "tail" : "(v: Boolean): Unit", "member" : "org.rogach.scallop.ScallopConfBase.appendDefaultToDescription_=", "link" : "discount\/Configuration.html#appendDefaultToDescription_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "appendDefaultToDescription", "tail" : "(): Boolean", "member" : "org.rogach.scallop.ScallopConfBase.appendDefaultToDescription", "link" : "discount\/Configuration.html#appendDefaultToDescription:Boolean", "kind" : "def"}, {"label" : "_guessOptionName", "tail" : ": Boolean", "member" : "org.rogach.scallop.ScallopConfBase._guessOptionName", "link" : "discount\/Configuration.html#_guessOptionName:Boolean", "kind" : "var"}, {"label" : "builder", "tail" : ": Scallop", "member" : "org.rogach.scallop.ScallopConfBase.builder", "link" : "discount\/Configuration.html#builder:org.rogach.scallop.Scallop", "kind" : "var"}, {"label" : "addSubcommand", "tail" : "(conf: Subcommand): Unit", "member" : "org.rogach.scallop.ScallopConfBase.addSubcommand", "link" : "discount\/Configuration.html#addSubcommand(conf:org.rogach.scallop.Subcommand):Unit", "kind" : "def"}, {"label" : "subconfigs", "tail" : ": Seq[ScallopConfBase]", "member" : "org.rogach.scallop.ScallopConfBase.subconfigs", "link" : "discount\/Configuration.html#subconfigs:Seq[org.rogach.scallop.ScallopConfBase]", "kind" : "var"}, {"label" : "isRootConfig", "tail" : ": Boolean", "member" : "org.rogach.scallop.ScallopConfBase.isRootConfig", "link" : "discount\/Configuration.html#isRootConfig:Boolean", "kind" : "var"}, {"label" : "parentConfig", "tail" : ": ScallopConfBase", "member" : "org.rogach.scallop.ScallopConfBase.parentConfig", "link" : "discount\/Configuration.html#parentConfig:org.rogach.scallop.ScallopConfBase", "kind" : "var"}, {"label" : "commandNameAndAliases", "tail" : ": Seq[String]", "member" : "org.rogach.scallop.ScallopConfBase.commandNameAndAliases", "link" : "discount\/Configuration.html#commandNameAndAliases:Seq[String]", "kind" : "val"}, {"label" : "args", "tail" : ": Seq[String]", "member" : "org.rogach.scallop.ScallopConfBase.args", "link" : "discount\/Configuration.html#args:Seq[String]", "kind" : "val"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16], o17: ScallopOption[A17], o18: ScallopOption[A18], o19: ScallopOption[A19], o20: ScallopOption[A20], o21: ScallopOption[A21], o22: ScallopOption[A22])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9], Option[A10], Option[A11], Option[A12], Option[A13], Option[A14], Option[A15], Option[A16], Option[A17], Option[A18], Option[A19], Option[A20], Option[A21], Option[A22]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/Configuration.html#validateOpt[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21,A22](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14],o15:org.rogach.scallop.ScallopOption[A15],o16:org.rogach.scallop.ScallopOption[A16],o17:org.rogach.scallop.ScallopOption[A17],o18:org.rogach.scallop.ScallopOption[A18],o19:org.rogach.scallop.ScallopOption[A19],o20:org.rogach.scallop.ScallopOption[A20],o21:org.rogach.scallop.ScallopOption[A21],o22:org.rogach.scallop.ScallopOption[A22])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6],Option[A7],Option[A8],Option[A9],Option[A10],Option[A11],Option[A12],Option[A13],Option[A14],Option[A15],Option[A16],Option[A17],Option[A18],Option[A19],Option[A20],Option[A21],Option[A22])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16], o17: ScallopOption[A17], o18: ScallopOption[A18], o19: ScallopOption[A19], o20: ScallopOption[A20], o21: ScallopOption[A21])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9], Option[A10], Option[A11], Option[A12], Option[A13], Option[A14], Option[A15], Option[A16], Option[A17], Option[A18], Option[A19], Option[A20], Option[A21]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/Configuration.html#validateOpt[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14],o15:org.rogach.scallop.ScallopOption[A15],o16:org.rogach.scallop.ScallopOption[A16],o17:org.rogach.scallop.ScallopOption[A17],o18:org.rogach.scallop.ScallopOption[A18],o19:org.rogach.scallop.ScallopOption[A19],o20:org.rogach.scallop.ScallopOption[A20],o21:org.rogach.scallop.ScallopOption[A21])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6],Option[A7],Option[A8],Option[A9],Option[A10],Option[A11],Option[A12],Option[A13],Option[A14],Option[A15],Option[A16],Option[A17],Option[A18],Option[A19],Option[A20],Option[A21])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16], o17: ScallopOption[A17], o18: ScallopOption[A18], o19: ScallopOption[A19], o20: ScallopOption[A20])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9], Option[A10], Option[A11], Option[A12], Option[A13], Option[A14], Option[A15], Option[A16], Option[A17], Option[A18], Option[A19], Option[A20]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/Configuration.html#validateOpt[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14],o15:org.rogach.scallop.ScallopOption[A15],o16:org.rogach.scallop.ScallopOption[A16],o17:org.rogach.scallop.ScallopOption[A17],o18:org.rogach.scallop.ScallopOption[A18],o19:org.rogach.scallop.ScallopOption[A19],o20:org.rogach.scallop.ScallopOption[A20])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6],Option[A7],Option[A8],Option[A9],Option[A10],Option[A11],Option[A12],Option[A13],Option[A14],Option[A15],Option[A16],Option[A17],Option[A18],Option[A19],Option[A20])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16], o17: ScallopOption[A17], o18: ScallopOption[A18], o19: ScallopOption[A19])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9], Option[A10], Option[A11], Option[A12], Option[A13], Option[A14], Option[A15], Option[A16], Option[A17], Option[A18], Option[A19]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/Configuration.html#validateOpt[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14],o15:org.rogach.scallop.ScallopOption[A15],o16:org.rogach.scallop.ScallopOption[A16],o17:org.rogach.scallop.ScallopOption[A17],o18:org.rogach.scallop.ScallopOption[A18],o19:org.rogach.scallop.ScallopOption[A19])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6],Option[A7],Option[A8],Option[A9],Option[A10],Option[A11],Option[A12],Option[A13],Option[A14],Option[A15],Option[A16],Option[A17],Option[A18],Option[A19])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16], o17: ScallopOption[A17], o18: ScallopOption[A18])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9], Option[A10], Option[A11], Option[A12], Option[A13], Option[A14], Option[A15], Option[A16], Option[A17], Option[A18]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/Configuration.html#validateOpt[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14],o15:org.rogach.scallop.ScallopOption[A15],o16:org.rogach.scallop.ScallopOption[A16],o17:org.rogach.scallop.ScallopOption[A17],o18:org.rogach.scallop.ScallopOption[A18])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6],Option[A7],Option[A8],Option[A9],Option[A10],Option[A11],Option[A12],Option[A13],Option[A14],Option[A15],Option[A16],Option[A17],Option[A18])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16], o17: ScallopOption[A17])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9], Option[A10], Option[A11], Option[A12], Option[A13], Option[A14], Option[A15], Option[A16], Option[A17]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/Configuration.html#validateOpt[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14],o15:org.rogach.scallop.ScallopOption[A15],o16:org.rogach.scallop.ScallopOption[A16],o17:org.rogach.scallop.ScallopOption[A17])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6],Option[A7],Option[A8],Option[A9],Option[A10],Option[A11],Option[A12],Option[A13],Option[A14],Option[A15],Option[A16],Option[A17])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9], Option[A10], Option[A11], Option[A12], Option[A13], Option[A14], Option[A15], Option[A16]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/Configuration.html#validateOpt[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14],o15:org.rogach.scallop.ScallopOption[A15],o16:org.rogach.scallop.ScallopOption[A16])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6],Option[A7],Option[A8],Option[A9],Option[A10],Option[A11],Option[A12],Option[A13],Option[A14],Option[A15],Option[A16])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9], Option[A10], Option[A11], Option[A12], Option[A13], Option[A14], Option[A15]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/Configuration.html#validateOpt[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14],o15:org.rogach.scallop.ScallopOption[A15])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6],Option[A7],Option[A8],Option[A9],Option[A10],Option[A11],Option[A12],Option[A13],Option[A14],Option[A15])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9], Option[A10], Option[A11], Option[A12], Option[A13], Option[A14]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/Configuration.html#validateOpt[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6],Option[A7],Option[A8],Option[A9],Option[A10],Option[A11],Option[A12],Option[A13],Option[A14])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9], Option[A10], Option[A11], Option[A12], Option[A13]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/Configuration.html#validateOpt[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6],Option[A7],Option[A8],Option[A9],Option[A10],Option[A11],Option[A12],Option[A13])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9], Option[A10], Option[A11], Option[A12]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/Configuration.html#validateOpt[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6],Option[A7],Option[A8],Option[A9],Option[A10],Option[A11],Option[A12])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9], Option[A10], Option[A11]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/Configuration.html#validateOpt[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6],Option[A7],Option[A8],Option[A9],Option[A10],Option[A11])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9], Option[A10]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/Configuration.html#validateOpt[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6],Option[A7],Option[A8],Option[A9],Option[A10])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/Configuration.html#validateOpt[A1,A2,A3,A4,A5,A6,A7,A8,A9](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6],Option[A7],Option[A8],Option[A9])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/Configuration.html#validateOpt[A1,A2,A3,A4,A5,A6,A7,A8](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6],Option[A7],Option[A8])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/Configuration.html#validateOpt[A1,A2,A3,A4,A5,A6,A7](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6],Option[A7])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/Configuration.html#validateOpt[A1,A2,A3,A4,A5,A6](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/Configuration.html#validateOpt[A1,A2,A3,A4,A5](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4])(fn: (Option[A1], Option[A2], Option[A3], Option[A4]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/Configuration.html#validateOpt[A1,A2,A3,A4](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4])(fn:(Option[A1],Option[A2],Option[A3],Option[A4])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3])(fn: (Option[A1], Option[A2], Option[A3]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/Configuration.html#validateOpt[A1,A2,A3](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3])(fn:(Option[A1],Option[A2],Option[A3])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2])(fn: (Option[A1], Option[A2]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/Configuration.html#validateOpt[A1,A2](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2])(fn:(Option[A1],Option[A2])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1])(fn: (Option[A1]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/Configuration.html#validateOpt[A1](o1:org.rogach.scallop.ScallopOption[A1])(fn:Option[A1]=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16], o17: ScallopOption[A17], o18: ScallopOption[A18], o19: ScallopOption[A19], o20: ScallopOption[A20], o21: ScallopOption[A21], o22: ScallopOption[A22])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/Configuration.html#validate[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21,A22](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14],o15:org.rogach.scallop.ScallopOption[A15],o16:org.rogach.scallop.ScallopOption[A16],o17:org.rogach.scallop.ScallopOption[A17],o18:org.rogach.scallop.ScallopOption[A18],o19:org.rogach.scallop.ScallopOption[A19],o20:org.rogach.scallop.ScallopOption[A20],o21:org.rogach.scallop.ScallopOption[A21],o22:org.rogach.scallop.ScallopOption[A22])(fn:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21,A22)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16], o17: ScallopOption[A17], o18: ScallopOption[A18], o19: ScallopOption[A19], o20: ScallopOption[A20], o21: ScallopOption[A21])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/Configuration.html#validate[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14],o15:org.rogach.scallop.ScallopOption[A15],o16:org.rogach.scallop.ScallopOption[A16],o17:org.rogach.scallop.ScallopOption[A17],o18:org.rogach.scallop.ScallopOption[A18],o19:org.rogach.scallop.ScallopOption[A19],o20:org.rogach.scallop.ScallopOption[A20],o21:org.rogach.scallop.ScallopOption[A21])(fn:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16], o17: ScallopOption[A17], o18: ScallopOption[A18], o19: ScallopOption[A19], o20: ScallopOption[A20])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/Configuration.html#validate[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14],o15:org.rogach.scallop.ScallopOption[A15],o16:org.rogach.scallop.ScallopOption[A16],o17:org.rogach.scallop.ScallopOption[A17],o18:org.rogach.scallop.ScallopOption[A18],o19:org.rogach.scallop.ScallopOption[A19],o20:org.rogach.scallop.ScallopOption[A20])(fn:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16], o17: ScallopOption[A17], o18: ScallopOption[A18], o19: ScallopOption[A19])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/Configuration.html#validate[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14],o15:org.rogach.scallop.ScallopOption[A15],o16:org.rogach.scallop.ScallopOption[A16],o17:org.rogach.scallop.ScallopOption[A17],o18:org.rogach.scallop.ScallopOption[A18],o19:org.rogach.scallop.ScallopOption[A19])(fn:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16], o17: ScallopOption[A17], o18: ScallopOption[A18])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/Configuration.html#validate[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14],o15:org.rogach.scallop.ScallopOption[A15],o16:org.rogach.scallop.ScallopOption[A16],o17:org.rogach.scallop.ScallopOption[A17],o18:org.rogach.scallop.ScallopOption[A18])(fn:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16], o17: ScallopOption[A17])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/Configuration.html#validate[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14],o15:org.rogach.scallop.ScallopOption[A15],o16:org.rogach.scallop.ScallopOption[A16],o17:org.rogach.scallop.ScallopOption[A17])(fn:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/Configuration.html#validate[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14],o15:org.rogach.scallop.ScallopOption[A15],o16:org.rogach.scallop.ScallopOption[A16])(fn:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/Configuration.html#validate[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14],o15:org.rogach.scallop.ScallopOption[A15])(fn:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/Configuration.html#validate[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14])(fn:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/Configuration.html#validate[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13])(fn:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/Configuration.html#validate[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12])(fn:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/Configuration.html#validate[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11])(fn:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/Configuration.html#validate[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10])(fn:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/Configuration.html#validate[A1,A2,A3,A4,A5,A6,A7,A8,A9](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9])(fn:(A1,A2,A3,A4,A5,A6,A7,A8,A9)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8])(fn: (A1, A2, A3, A4, A5, A6, A7, A8) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/Configuration.html#validate[A1,A2,A3,A4,A5,A6,A7,A8](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8])(fn:(A1,A2,A3,A4,A5,A6,A7,A8)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7])(fn: (A1, A2, A3, A4, A5, A6, A7) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/Configuration.html#validate[A1,A2,A3,A4,A5,A6,A7](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7])(fn:(A1,A2,A3,A4,A5,A6,A7)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6])(fn: (A1, A2, A3, A4, A5, A6) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/Configuration.html#validate[A1,A2,A3,A4,A5,A6](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6])(fn:(A1,A2,A3,A4,A5,A6)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5])(fn: (A1, A2, A3, A4, A5) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/Configuration.html#validate[A1,A2,A3,A4,A5](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5])(fn:(A1,A2,A3,A4,A5)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4])(fn: (A1, A2, A3, A4) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/Configuration.html#validate[A1,A2,A3,A4](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4])(fn:(A1,A2,A3,A4)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3])(fn: (A1, A2, A3) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/Configuration.html#validate[A1,A2,A3](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3])(fn:(A1,A2,A3)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2])(fn: (A1, A2) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/Configuration.html#validate[A1,A2](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2])(fn:(A1,A2)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1])(fn: (A1) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/Configuration.html#validate[A1](o1:org.rogach.scallop.ScallopOption[A1])(fn:A1=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validations", "tail" : ": List[() ⇒ Either[String, Unit]]", "member" : "org.rogach.scallop.ScallopConfValidations.validations", "link" : "discount\/Configuration.html#validations:List[()=>Either[String,Unit]]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "discount\/Configuration.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "discount\/Configuration.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "discount\/Configuration.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "discount\/Configuration.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "discount\/Configuration.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "discount\/Configuration.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "discount\/Configuration.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/Configuration.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/Configuration.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/Configuration.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "discount\/Configuration.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "discount\/Configuration.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "discount\/Configuration.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "discount\/Configuration.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "discount\/Configuration.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "discount\/Configuration.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "discount\/Configuration.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "discount\/Configuration.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "discount\/Configuration.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "discount\/Configuration.html", "kind" : "class"}, {"name" : "discount.ReadSplitDemo", "shortDescription" : "Minimal test program that demonstrates using the Discount APIto split reads into super-mers without using Spark.", "object" : "discount\/ReadSplitDemo$.html", "members_object" : [{"label" : "writeToFile", "tail" : "(conf: ReadSplitConf, destination: String): Unit", "member" : "discount.ReadSplitDemo.writeToFile", "link" : "discount\/ReadSplitDemo$.html#writeToFile(conf:discount.ReadSplitConf,destination:String):Unit", "kind" : "def"}, {"label" : "prettyOutput", "tail" : "(conf: ReadSplitConf): Unit", "member" : "discount.ReadSplitDemo.prettyOutput", "link" : "discount\/ReadSplitDemo$.html#prettyOutput(conf:discount.ReadSplitConf):Unit", "kind" : "def"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "discount.ReadSplitDemo.main", "link" : "discount\/ReadSplitDemo$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "discount\/ReadSplitDemo$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "discount\/ReadSplitDemo$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "discount\/ReadSplitDemo$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "discount\/ReadSplitDemo$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "discount\/ReadSplitDemo$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "discount\/ReadSplitDemo$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "discount\/ReadSplitDemo$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/ReadSplitDemo$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/ReadSplitDemo$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/ReadSplitDemo$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "discount\/ReadSplitDemo$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "discount\/ReadSplitDemo$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "discount\/ReadSplitDemo$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "discount\/ReadSplitDemo$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "discount\/ReadSplitDemo$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "discount\/ReadSplitDemo$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "discount\/ReadSplitDemo$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "discount\/ReadSplitDemo$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "discount\/ReadSplitDemo$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "discount.RunnableCommand", "shortDescription" : "", "members_class" : [{"member" : "discount.RunnableCommand#<init>", "error" : "unsupported entity"}, {"label" : "descr", "tail" : "(d: String): Unit", "member" : "org.rogach.scallop.Subcommand.descr", "link" : "discount\/RunnableCommand.html#descr(d:String):Unit", "kind" : "def"}, {"label" : "performOptionNameGuessing", "tail" : "(): Unit", "member" : "org.rogach.scallop.ScallopConf.performOptionNameGuessing", "link" : "discount\/RunnableCommand.html#performOptionNameGuessing():Unit", "kind" : "def"}, {"label" : "guessOptionName_=", "tail" : "(v: Boolean): Unit", "member" : "org.rogach.scallop.ScallopConf.guessOptionName_=", "link" : "discount\/RunnableCommand.html#guessOptionName_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "guessOptionName", "tail" : "(): Boolean", "member" : "org.rogach.scallop.ScallopConf.guessOptionName", "link" : "discount\/RunnableCommand.html#guessOptionName:Boolean", "kind" : "def"}, {"label" : "optionNameGuessingSupported", "tail" : "(): Boolean", "member" : "org.rogach.scallop.ScallopConf.optionNameGuessingSupported", "link" : "discount\/RunnableCommand.html#optionNameGuessingSupported:Boolean", "kind" : "def"}, {"label" : "verify", "tail" : "(): Unit", "member" : "org.rogach.scallop.ScallopConfBase.verify", "link" : "discount\/RunnableCommand.html#verify():Unit", "kind" : "def"}, {"label" : "shortSubcommandsHelp", "tail" : "(enable: Boolean): Unit", "member" : "org.rogach.scallop.ScallopConfBase.shortSubcommandsHelp", "link" : "discount\/RunnableCommand.html#shortSubcommandsHelp(enable:Boolean):Unit", "kind" : "def"}, {"label" : "helpWidth", "tail" : "(w: Int): Unit", "member" : "org.rogach.scallop.ScallopConfBase.helpWidth", "link" : "discount\/RunnableCommand.html#helpWidth(w:Int):Unit", "kind" : "def"}, {"label" : "footer", "tail" : "(f: String): Unit", "member" : "org.rogach.scallop.ScallopConfBase.footer", "link" : "discount\/RunnableCommand.html#footer(f:String):Unit", "kind" : "def"}, {"label" : "banner", "tail" : "(b: String): Unit", "member" : "org.rogach.scallop.ScallopConfBase.banner", "link" : "discount\/RunnableCommand.html#banner(b:String):Unit", "kind" : "def"}, {"label" : "version", "tail" : "(v: String): Unit", "member" : "org.rogach.scallop.ScallopConfBase.version", "link" : "discount\/RunnableCommand.html#version(v:String):Unit", "kind" : "def"}, {"label" : "printHelp", "tail" : "(): Unit", "member" : "org.rogach.scallop.ScallopConfBase.printHelp", "link" : "discount\/RunnableCommand.html#printHelp():Unit", "kind" : "def"}, {"label" : "getHelpString", "tail" : "(): String", "member" : "org.rogach.scallop.ScallopConfBase.getHelpString", "link" : "discount\/RunnableCommand.html#getHelpString():String", "kind" : "def"}, {"label" : "filteredSummary", "tail" : "(blurred: Set[String]): String", "member" : "org.rogach.scallop.ScallopConfBase.filteredSummary", "link" : "discount\/RunnableCommand.html#filteredSummary(blurred:Set[String]):String", "kind" : "def"}, {"label" : "summary", "tail" : "(): String", "member" : "org.rogach.scallop.ScallopConfBase.summary", "link" : "discount\/RunnableCommand.html#summary:String", "kind" : "def"}, {"label" : "requireSubcommand", "tail" : "(): Unit", "member" : "org.rogach.scallop.ScallopConfBase.requireSubcommand", "link" : "discount\/RunnableCommand.html#requireSubcommand():Unit", "kind" : "def"}, {"label" : "validatePathsIsFile", "tail" : "(pathsOption: ScallopOption[List[Path]]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.validatePathsIsFile", "link" : "discount\/RunnableCommand.html#validatePathsIsFile(pathsOption:org.rogach.scallop.ScallopOption[List[java.nio.file.Path]]):Unit", "kind" : "def"}, {"label" : "validatePathsIsDirectory", "tail" : "(pathsOption: ScallopOption[List[Path]]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.validatePathsIsDirectory", "link" : "discount\/RunnableCommand.html#validatePathsIsDirectory(pathsOption:org.rogach.scallop.ScallopOption[List[java.nio.file.Path]]):Unit", "kind" : "def"}, {"label" : "validatePathsDoesNotExist", "tail" : "(pathsOption: ScallopOption[List[Path]]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.validatePathsDoesNotExist", "link" : "discount\/RunnableCommand.html#validatePathsDoesNotExist(pathsOption:org.rogach.scallop.ScallopOption[List[java.nio.file.Path]]):Unit", "kind" : "def"}, {"label" : "validatePathsExists", "tail" : "(pathsOption: ScallopOption[List[Path]]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.validatePathsExists", "link" : "discount\/RunnableCommand.html#validatePathsExists(pathsOption:org.rogach.scallop.ScallopOption[List[java.nio.file.Path]]):Unit", "kind" : "def"}, {"label" : "validatePathIsFile", "tail" : "(pathOption: ScallopOption[Path]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.validatePathIsFile", "link" : "discount\/RunnableCommand.html#validatePathIsFile(pathOption:org.rogach.scallop.ScallopOption[java.nio.file.Path]):Unit", "kind" : "def"}, {"label" : "validatePathIsDirectory", "tail" : "(pathOption: ScallopOption[Path]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.validatePathIsDirectory", "link" : "discount\/RunnableCommand.html#validatePathIsDirectory(pathOption:org.rogach.scallop.ScallopOption[java.nio.file.Path]):Unit", "kind" : "def"}, {"label" : "validatePathDoesNotExist", "tail" : "(pathOption: ScallopOption[Path]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.validatePathDoesNotExist", "link" : "discount\/RunnableCommand.html#validatePathDoesNotExist(pathOption:org.rogach.scallop.ScallopOption[java.nio.file.Path]):Unit", "kind" : "def"}, {"label" : "validatePathExists", "tail" : "(pathOption: ScallopOption[Path]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.validatePathExists", "link" : "discount\/RunnableCommand.html#validatePathExists(pathOption:org.rogach.scallop.ScallopOption[java.nio.file.Path]):Unit", "kind" : "def"}, {"label" : "validateFilesIsFile", "tail" : "(filesOption: ScallopOption[List[File]]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.validateFilesIsFile", "link" : "discount\/RunnableCommand.html#validateFilesIsFile(filesOption:org.rogach.scallop.ScallopOption[List[java.io.File]]):Unit", "kind" : "def"}, {"label" : "validateFilesIsDirectory", "tail" : "(filesOption: ScallopOption[List[File]]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.validateFilesIsDirectory", "link" : "discount\/RunnableCommand.html#validateFilesIsDirectory(filesOption:org.rogach.scallop.ScallopOption[List[java.io.File]]):Unit", "kind" : "def"}, {"label" : "validateFilesDoNotExist", "tail" : "(filesOption: ScallopOption[List[File]]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.validateFilesDoNotExist", "link" : "discount\/RunnableCommand.html#validateFilesDoNotExist(filesOption:org.rogach.scallop.ScallopOption[List[java.io.File]]):Unit", "kind" : "def"}, {"label" : "validateFilesExist", "tail" : "(filesOption: ScallopOption[List[File]]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.validateFilesExist", "link" : "discount\/RunnableCommand.html#validateFilesExist(filesOption:org.rogach.scallop.ScallopOption[List[java.io.File]]):Unit", "kind" : "def"}, {"label" : "validateFileIsFile", "tail" : "(fileOption: ScallopOption[File]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.validateFileIsFile", "link" : "discount\/RunnableCommand.html#validateFileIsFile(fileOption:org.rogach.scallop.ScallopOption[java.io.File]):Unit", "kind" : "def"}, {"label" : "validateFileIsDirectory", "tail" : "(fileOption: ScallopOption[File]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.validateFileIsDirectory", "link" : "discount\/RunnableCommand.html#validateFileIsDirectory(fileOption:org.rogach.scallop.ScallopOption[java.io.File]):Unit", "kind" : "def"}, {"label" : "validateFileDoesNotExist", "tail" : "(fileOption: ScallopOption[File]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.validateFileDoesNotExist", "link" : "discount\/RunnableCommand.html#validateFileDoesNotExist(fileOption:org.rogach.scallop.ScallopOption[java.io.File]):Unit", "kind" : "def"}, {"label" : "validateFileExists", "tail" : "(fileOption: ScallopOption[File]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.validateFileExists", "link" : "discount\/RunnableCommand.html#validateFileExists(fileOption:org.rogach.scallop.ScallopOption[java.io.File]):Unit", "kind" : "def"}, {"label" : "allDefinedOrUndefined", "tail" : "(list: ScallopOption[_]*): Unit", "member" : "org.rogach.scallop.ScallopConfBase.allDefinedOrUndefined", "link" : "discount\/RunnableCommand.html#allDefinedOrUndefined(list:org.rogach.scallop.ScallopOption[_]*):Unit", "kind" : "def"}, {"label" : "codependent", "tail" : "(list: ScallopOption[_]*): Unit", "member" : "org.rogach.scallop.ScallopConfBase.codependent", "link" : "discount\/RunnableCommand.html#codependent(list:org.rogach.scallop.ScallopOption[_]*):Unit", "kind" : "def"}, {"label" : "mutuallyExclusive", "tail" : "(list: ScallopOption[_]*): Unit", "member" : "org.rogach.scallop.ScallopConfBase.mutuallyExclusive", "link" : "discount\/RunnableCommand.html#mutuallyExclusive(list:org.rogach.scallop.ScallopOption[_]*):Unit", "kind" : "def"}, {"label" : "requireOne", "tail" : "(list: ScallopOption[_]*): Unit", "member" : "org.rogach.scallop.ScallopConfBase.requireOne", "link" : "discount\/RunnableCommand.html#requireOne(list:org.rogach.scallop.ScallopOption[_]*):Unit", "kind" : "def"}, {"label" : "requireAtLeastOne", "tail" : "(list: ScallopOption[_]*): Unit", "member" : "org.rogach.scallop.ScallopConfBase.requireAtLeastOne", "link" : "discount\/RunnableCommand.html#requireAtLeastOne(list:org.rogach.scallop.ScallopOption[_]*):Unit", "kind" : "def"}, {"label" : "conflicts", "tail" : "(opt: ScallopOption[_], list: List[ScallopOption[_]]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.conflicts", "link" : "discount\/RunnableCommand.html#conflicts(opt:org.rogach.scallop.ScallopOption[_],list:List[org.rogach.scallop.ScallopOption[_]]):Unit", "kind" : "def"}, {"label" : "dependsOnAll", "tail" : "(opt: ScallopOption[_], list: List[ScallopOption[_]]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.dependsOnAll", "link" : "discount\/RunnableCommand.html#dependsOnAll(opt:org.rogach.scallop.ScallopOption[_],list:List[org.rogach.scallop.ScallopOption[_]]):Unit", "kind" : "def"}, {"label" : "dependsOnAny", "tail" : "(opt: ScallopOption[_], list: List[ScallopOption[_]]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.dependsOnAny", "link" : "discount\/RunnableCommand.html#dependsOnAny(opt:org.rogach.scallop.ScallopOption[_],list:List[org.rogach.scallop.ScallopOption[_]]):Unit", "kind" : "def"}, {"label" : "addValidation", "tail" : "(fn: ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.addValidation", "link" : "discount\/RunnableCommand.html#addValidation(fn:=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "assertVerified", "tail" : "(): Unit", "member" : "org.rogach.scallop.ScallopConfBase.assertVerified", "link" : "discount\/RunnableCommand.html#assertVerified():Unit", "kind" : "def"}, {"label" : "onError", "tail" : "(e: Throwable): Unit", "member" : "org.rogach.scallop.ScallopConfBase.onError", "link" : "discount\/RunnableCommand.html#onError(e:Throwable):Unit", "kind" : "def"}, {"label" : "errorMessageHandler", "tail" : ": (String) ⇒ Unit", "member" : "org.rogach.scallop.ScallopConfBase.errorMessageHandler", "link" : "discount\/RunnableCommand.html#errorMessageHandler:String=>Unit", "kind" : "var"}, {"label" : "printedName", "tail" : ": String", "member" : "org.rogach.scallop.ScallopConfBase.printedName", "link" : "discount\/RunnableCommand.html#printedName:String", "kind" : "var"}, {"label" : "group", "tail" : "(header: String): ScallopOptionGroup", "member" : "org.rogach.scallop.ScallopConfBase.group", "link" : "discount\/RunnableCommand.html#group(header:String):org.rogach.scallop.ScallopOptionGroup", "kind" : "def"}, {"label" : "mainOptions_=", "tail" : "(newMainOptions: ⇒ Seq[ScallopOption[_]]): Unit", "member" : "org.rogach.scallop.ScallopConfBase.mainOptions_=", "link" : "discount\/RunnableCommand.html#mainOptions_=(newMainOptions:=>Seq[org.rogach.scallop.ScallopOption[_]]):Unit", "kind" : "def"}, {"label" : "mainOptions", "tail" : "(): Seq[CliOption]", "member" : "org.rogach.scallop.ScallopConfBase.mainOptions", "link" : "discount\/RunnableCommand.html#mainOptions:Seq[org.rogach.scallop.CliOption]", "kind" : "def"}, {"label" : "toggle", "tail" : "(name: String, default: ⇒ Option[Boolean], short: Char, noshort: Boolean, prefix: String, descrYes: String, descrNo: String, hidden: Boolean, group: ScallopOptionGroup): ScallopOption[Boolean]", "member" : "org.rogach.scallop.ScallopConfBase.toggle", "link" : "discount\/RunnableCommand.html#toggle(name:String,default:=>Option[Boolean],short:Char,noshort:Boolean,prefix:String,descrYes:String,descrNo:String,hidden:Boolean,group:org.rogach.scallop.ScallopOptionGroup):org.rogach.scallop.ScallopOption[Boolean]", "kind" : "def"}, {"label" : "number", "tail" : "(name: String, descr: String, validate: (Long) ⇒ Boolean, required: Boolean, default: ⇒ Option[Long], hidden: Boolean, group: ScallopOptionGroup)(conv: ValueConverter[Long]): ScallopOption[Long]", "member" : "org.rogach.scallop.ScallopConfBase.number", "link" : "discount\/RunnableCommand.html#number(name:String,descr:String,validate:Long=>Boolean,required:Boolean,default:=>Option[Long],hidden:Boolean,group:org.rogach.scallop.ScallopOptionGroup)(implicitconv:org.rogach.scallop.ValueConverter[Long]):org.rogach.scallop.ScallopOption[Long]", "kind" : "def"}, {"label" : "trailArg", "tail" : "(name: String, descr: String, validate: (A) ⇒ Boolean, required: Boolean, default: ⇒ Option[A], hidden: Boolean, group: ScallopOptionGroup)(conv: ValueConverter[A]): ScallopOption[A]", "member" : "org.rogach.scallop.ScallopConfBase.trailArg", "link" : "discount\/RunnableCommand.html#trailArg[A](name:String,descr:String,validate:A=>Boolean,required:Boolean,default:=>Option[A],hidden:Boolean,group:org.rogach.scallop.ScallopOptionGroup)(implicitconv:org.rogach.scallop.ValueConverter[A]):org.rogach.scallop.ScallopOption[A]", "kind" : "def"}, {"label" : "propsLong", "tail" : "(name: String, descr: String, keyName: String, valueName: String, hidden: Boolean, group: ScallopOptionGroup)(conv: ValueConverter[Map[String, A]]): Map[String, A]", "member" : "org.rogach.scallop.ScallopConfBase.propsLong", "link" : "discount\/RunnableCommand.html#propsLong[A](name:String,descr:String,keyName:String,valueName:String,hidden:Boolean,group:org.rogach.scallop.ScallopOptionGroup)(implicitconv:org.rogach.scallop.ValueConverter[Map[String,A]]):Map[String,A]", "kind" : "def"}, {"label" : "props", "tail" : "(name: Char, descr: String, keyName: String, valueName: String, hidden: Boolean, group: ScallopOptionGroup)(conv: ValueConverter[Map[String, A]]): LazyMap[String, A]", "member" : "org.rogach.scallop.ScallopConfBase.props", "link" : "discount\/RunnableCommand.html#props[A](name:Char,descr:String,keyName:String,valueName:String,hidden:Boolean,group:org.rogach.scallop.ScallopOptionGroup)(implicitconv:org.rogach.scallop.ValueConverter[Map[String,A]]):org.rogach.scallop.LazyMap[String,A]", "kind" : "def"}, {"label" : "tally", "tail" : "(name: String, short: Char, descr: String, hidden: Boolean, noshort: Boolean, group: ScallopOptionGroup): ScallopOption[Int]", "member" : "org.rogach.scallop.ScallopConfBase.tally", "link" : "discount\/RunnableCommand.html#tally(name:String,short:Char,descr:String,hidden:Boolean,noshort:Boolean,group:org.rogach.scallop.ScallopOptionGroup):org.rogach.scallop.ScallopOption[Int]", "kind" : "def"}, {"label" : "choice", "tail" : "(choices: Seq[String], name: String, short: Char, descr: String, default: ⇒ Option[String], required: Boolean, argName: String, hidden: Boolean, noshort: Boolean, group: ScallopOptionGroup): ScallopOption[String]", "member" : "org.rogach.scallop.ScallopConfBase.choice", "link" : "discount\/RunnableCommand.html#choice(choices:Seq[String],name:String,short:Char,descr:String,default:=>Option[String],required:Boolean,argName:String,hidden:Boolean,noshort:Boolean,group:org.rogach.scallop.ScallopOptionGroup):org.rogach.scallop.ScallopOption[String]", "kind" : "def"}, {"label" : "opt", "tail" : "(name: String, short: Char, descr: String, default: ⇒ Option[A], validate: (A) ⇒ Boolean, required: Boolean, argName: String, hidden: Boolean, noshort: Boolean, group: ScallopOptionGroup)(conv: ValueConverter[A]): ScallopOption[A]", "member" : "org.rogach.scallop.ScallopConfBase.opt", "link" : "discount\/RunnableCommand.html#opt[A](name:String,short:Char,descr:String,default:=>Option[A],validate:A=>Boolean,required:Boolean,argName:String,hidden:Boolean,noshort:Boolean,group:org.rogach.scallop.ScallopOptionGroup)(implicitconv:org.rogach.scallop.ValueConverter[A]):org.rogach.scallop.ScallopOption[A]", "kind" : "def"}, {"label" : "subcommands", "tail" : "(): List[ScallopConfBase]", "member" : "org.rogach.scallop.ScallopConfBase.subcommands", "link" : "discount\/RunnableCommand.html#subcommands:List[org.rogach.scallop.ScallopConfBase]", "kind" : "def"}, {"label" : "subcommand", "tail" : "(): Option[ScallopConfBase]", "member" : "org.rogach.scallop.ScallopConfBase.subcommand", "link" : "discount\/RunnableCommand.html#subcommand:Option[org.rogach.scallop.ScallopConfBase]", "kind" : "def"}, {"label" : "noshort_=", "tail" : "(v: Boolean): Unit", "member" : "org.rogach.scallop.ScallopConfBase.noshort_=", "link" : "discount\/RunnableCommand.html#noshort_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "noshort", "tail" : "(): Boolean", "member" : "org.rogach.scallop.ScallopConfBase.noshort", "link" : "discount\/RunnableCommand.html#noshort:Boolean", "kind" : "def"}, {"label" : "helpFormatter_=", "tail" : "(formatter: ScallopHelpFormatter): Unit", "member" : "org.rogach.scallop.ScallopConfBase.helpFormatter_=", "link" : "discount\/RunnableCommand.html#helpFormatter_=(formatter:org.rogach.scallop.ScallopHelpFormatter):Unit", "kind" : "def"}, {"label" : "helpFormatter", "tail" : "(): ScallopHelpFormatter", "member" : "org.rogach.scallop.ScallopConfBase.helpFormatter", "link" : "discount\/RunnableCommand.html#helpFormatter:org.rogach.scallop.ScallopHelpFormatter", "kind" : "def"}, {"label" : "appendDefaultToDescription_=", "tail" : "(v: Boolean): Unit", "member" : "org.rogach.scallop.ScallopConfBase.appendDefaultToDescription_=", "link" : "discount\/RunnableCommand.html#appendDefaultToDescription_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "appendDefaultToDescription", "tail" : "(): Boolean", "member" : "org.rogach.scallop.ScallopConfBase.appendDefaultToDescription", "link" : "discount\/RunnableCommand.html#appendDefaultToDescription:Boolean", "kind" : "def"}, {"label" : "_guessOptionName", "tail" : ": Boolean", "member" : "org.rogach.scallop.ScallopConfBase._guessOptionName", "link" : "discount\/RunnableCommand.html#_guessOptionName:Boolean", "kind" : "var"}, {"label" : "builder", "tail" : ": Scallop", "member" : "org.rogach.scallop.ScallopConfBase.builder", "link" : "discount\/RunnableCommand.html#builder:org.rogach.scallop.Scallop", "kind" : "var"}, {"label" : "addSubcommand", "tail" : "(conf: Subcommand): Unit", "member" : "org.rogach.scallop.ScallopConfBase.addSubcommand", "link" : "discount\/RunnableCommand.html#addSubcommand(conf:org.rogach.scallop.Subcommand):Unit", "kind" : "def"}, {"label" : "subconfigs", "tail" : ": Seq[ScallopConfBase]", "member" : "org.rogach.scallop.ScallopConfBase.subconfigs", "link" : "discount\/RunnableCommand.html#subconfigs:Seq[org.rogach.scallop.ScallopConfBase]", "kind" : "var"}, {"label" : "isRootConfig", "tail" : ": Boolean", "member" : "org.rogach.scallop.ScallopConfBase.isRootConfig", "link" : "discount\/RunnableCommand.html#isRootConfig:Boolean", "kind" : "var"}, {"label" : "parentConfig", "tail" : ": ScallopConfBase", "member" : "org.rogach.scallop.ScallopConfBase.parentConfig", "link" : "discount\/RunnableCommand.html#parentConfig:org.rogach.scallop.ScallopConfBase", "kind" : "var"}, {"label" : "commandNameAndAliases", "tail" : ": Seq[String]", "member" : "org.rogach.scallop.ScallopConfBase.commandNameAndAliases", "link" : "discount\/RunnableCommand.html#commandNameAndAliases:Seq[String]", "kind" : "val"}, {"label" : "args", "tail" : ": Seq[String]", "member" : "org.rogach.scallop.ScallopConfBase.args", "link" : "discount\/RunnableCommand.html#args:Seq[String]", "kind" : "val"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16], o17: ScallopOption[A17], o18: ScallopOption[A18], o19: ScallopOption[A19], o20: ScallopOption[A20], o21: ScallopOption[A21], o22: ScallopOption[A22])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9], Option[A10], Option[A11], Option[A12], Option[A13], Option[A14], Option[A15], Option[A16], Option[A17], Option[A18], Option[A19], Option[A20], Option[A21], Option[A22]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/RunnableCommand.html#validateOpt[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21,A22](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14],o15:org.rogach.scallop.ScallopOption[A15],o16:org.rogach.scallop.ScallopOption[A16],o17:org.rogach.scallop.ScallopOption[A17],o18:org.rogach.scallop.ScallopOption[A18],o19:org.rogach.scallop.ScallopOption[A19],o20:org.rogach.scallop.ScallopOption[A20],o21:org.rogach.scallop.ScallopOption[A21],o22:org.rogach.scallop.ScallopOption[A22])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6],Option[A7],Option[A8],Option[A9],Option[A10],Option[A11],Option[A12],Option[A13],Option[A14],Option[A15],Option[A16],Option[A17],Option[A18],Option[A19],Option[A20],Option[A21],Option[A22])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16], o17: ScallopOption[A17], o18: ScallopOption[A18], o19: ScallopOption[A19], o20: ScallopOption[A20], o21: ScallopOption[A21])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9], Option[A10], Option[A11], Option[A12], Option[A13], Option[A14], Option[A15], Option[A16], Option[A17], Option[A18], Option[A19], Option[A20], Option[A21]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/RunnableCommand.html#validateOpt[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14],o15:org.rogach.scallop.ScallopOption[A15],o16:org.rogach.scallop.ScallopOption[A16],o17:org.rogach.scallop.ScallopOption[A17],o18:org.rogach.scallop.ScallopOption[A18],o19:org.rogach.scallop.ScallopOption[A19],o20:org.rogach.scallop.ScallopOption[A20],o21:org.rogach.scallop.ScallopOption[A21])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6],Option[A7],Option[A8],Option[A9],Option[A10],Option[A11],Option[A12],Option[A13],Option[A14],Option[A15],Option[A16],Option[A17],Option[A18],Option[A19],Option[A20],Option[A21])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16], o17: ScallopOption[A17], o18: ScallopOption[A18], o19: ScallopOption[A19], o20: ScallopOption[A20])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9], Option[A10], Option[A11], Option[A12], Option[A13], Option[A14], Option[A15], Option[A16], Option[A17], Option[A18], Option[A19], Option[A20]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/RunnableCommand.html#validateOpt[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14],o15:org.rogach.scallop.ScallopOption[A15],o16:org.rogach.scallop.ScallopOption[A16],o17:org.rogach.scallop.ScallopOption[A17],o18:org.rogach.scallop.ScallopOption[A18],o19:org.rogach.scallop.ScallopOption[A19],o20:org.rogach.scallop.ScallopOption[A20])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6],Option[A7],Option[A8],Option[A9],Option[A10],Option[A11],Option[A12],Option[A13],Option[A14],Option[A15],Option[A16],Option[A17],Option[A18],Option[A19],Option[A20])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16], o17: ScallopOption[A17], o18: ScallopOption[A18], o19: ScallopOption[A19])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9], Option[A10], Option[A11], Option[A12], Option[A13], Option[A14], Option[A15], Option[A16], Option[A17], Option[A18], Option[A19]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/RunnableCommand.html#validateOpt[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14],o15:org.rogach.scallop.ScallopOption[A15],o16:org.rogach.scallop.ScallopOption[A16],o17:org.rogach.scallop.ScallopOption[A17],o18:org.rogach.scallop.ScallopOption[A18],o19:org.rogach.scallop.ScallopOption[A19])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6],Option[A7],Option[A8],Option[A9],Option[A10],Option[A11],Option[A12],Option[A13],Option[A14],Option[A15],Option[A16],Option[A17],Option[A18],Option[A19])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16], o17: ScallopOption[A17], o18: ScallopOption[A18])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9], Option[A10], Option[A11], Option[A12], Option[A13], Option[A14], Option[A15], Option[A16], Option[A17], Option[A18]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/RunnableCommand.html#validateOpt[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14],o15:org.rogach.scallop.ScallopOption[A15],o16:org.rogach.scallop.ScallopOption[A16],o17:org.rogach.scallop.ScallopOption[A17],o18:org.rogach.scallop.ScallopOption[A18])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6],Option[A7],Option[A8],Option[A9],Option[A10],Option[A11],Option[A12],Option[A13],Option[A14],Option[A15],Option[A16],Option[A17],Option[A18])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16], o17: ScallopOption[A17])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9], Option[A10], Option[A11], Option[A12], Option[A13], Option[A14], Option[A15], Option[A16], Option[A17]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/RunnableCommand.html#validateOpt[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14],o15:org.rogach.scallop.ScallopOption[A15],o16:org.rogach.scallop.ScallopOption[A16],o17:org.rogach.scallop.ScallopOption[A17])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6],Option[A7],Option[A8],Option[A9],Option[A10],Option[A11],Option[A12],Option[A13],Option[A14],Option[A15],Option[A16],Option[A17])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9], Option[A10], Option[A11], Option[A12], Option[A13], Option[A14], Option[A15], Option[A16]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/RunnableCommand.html#validateOpt[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14],o15:org.rogach.scallop.ScallopOption[A15],o16:org.rogach.scallop.ScallopOption[A16])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6],Option[A7],Option[A8],Option[A9],Option[A10],Option[A11],Option[A12],Option[A13],Option[A14],Option[A15],Option[A16])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9], Option[A10], Option[A11], Option[A12], Option[A13], Option[A14], Option[A15]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/RunnableCommand.html#validateOpt[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14],o15:org.rogach.scallop.ScallopOption[A15])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6],Option[A7],Option[A8],Option[A9],Option[A10],Option[A11],Option[A12],Option[A13],Option[A14],Option[A15])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9], Option[A10], Option[A11], Option[A12], Option[A13], Option[A14]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/RunnableCommand.html#validateOpt[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6],Option[A7],Option[A8],Option[A9],Option[A10],Option[A11],Option[A12],Option[A13],Option[A14])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9], Option[A10], Option[A11], Option[A12], Option[A13]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/RunnableCommand.html#validateOpt[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6],Option[A7],Option[A8],Option[A9],Option[A10],Option[A11],Option[A12],Option[A13])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9], Option[A10], Option[A11], Option[A12]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/RunnableCommand.html#validateOpt[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6],Option[A7],Option[A8],Option[A9],Option[A10],Option[A11],Option[A12])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9], Option[A10], Option[A11]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/RunnableCommand.html#validateOpt[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6],Option[A7],Option[A8],Option[A9],Option[A10],Option[A11])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9], Option[A10]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/RunnableCommand.html#validateOpt[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6],Option[A7],Option[A8],Option[A9],Option[A10])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8], Option[A9]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/RunnableCommand.html#validateOpt[A1,A2,A3,A4,A5,A6,A7,A8,A9](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6],Option[A7],Option[A8],Option[A9])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7], Option[A8]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/RunnableCommand.html#validateOpt[A1,A2,A3,A4,A5,A6,A7,A8](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6],Option[A7],Option[A8])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6], Option[A7]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/RunnableCommand.html#validateOpt[A1,A2,A3,A4,A5,A6,A7](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6],Option[A7])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5], Option[A6]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/RunnableCommand.html#validateOpt[A1,A2,A3,A4,A5,A6](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5],Option[A6])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5])(fn: (Option[A1], Option[A2], Option[A3], Option[A4], Option[A5]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/RunnableCommand.html#validateOpt[A1,A2,A3,A4,A5](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5])(fn:(Option[A1],Option[A2],Option[A3],Option[A4],Option[A5])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4])(fn: (Option[A1], Option[A2], Option[A3], Option[A4]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/RunnableCommand.html#validateOpt[A1,A2,A3,A4](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4])(fn:(Option[A1],Option[A2],Option[A3],Option[A4])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3])(fn: (Option[A1], Option[A2], Option[A3]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/RunnableCommand.html#validateOpt[A1,A2,A3](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3])(fn:(Option[A1],Option[A2],Option[A3])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2])(fn: (Option[A1], Option[A2]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/RunnableCommand.html#validateOpt[A1,A2](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2])(fn:(Option[A1],Option[A2])=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validateOpt", "tail" : "(o1: ScallopOption[A1])(fn: (Option[A1]) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validateOpt", "link" : "discount\/RunnableCommand.html#validateOpt[A1](o1:org.rogach.scallop.ScallopOption[A1])(fn:Option[A1]=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16], o17: ScallopOption[A17], o18: ScallopOption[A18], o19: ScallopOption[A19], o20: ScallopOption[A20], o21: ScallopOption[A21], o22: ScallopOption[A22])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/RunnableCommand.html#validate[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21,A22](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14],o15:org.rogach.scallop.ScallopOption[A15],o16:org.rogach.scallop.ScallopOption[A16],o17:org.rogach.scallop.ScallopOption[A17],o18:org.rogach.scallop.ScallopOption[A18],o19:org.rogach.scallop.ScallopOption[A19],o20:org.rogach.scallop.ScallopOption[A20],o21:org.rogach.scallop.ScallopOption[A21],o22:org.rogach.scallop.ScallopOption[A22])(fn:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21,A22)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16], o17: ScallopOption[A17], o18: ScallopOption[A18], o19: ScallopOption[A19], o20: ScallopOption[A20], o21: ScallopOption[A21])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/RunnableCommand.html#validate[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14],o15:org.rogach.scallop.ScallopOption[A15],o16:org.rogach.scallop.ScallopOption[A16],o17:org.rogach.scallop.ScallopOption[A17],o18:org.rogach.scallop.ScallopOption[A18],o19:org.rogach.scallop.ScallopOption[A19],o20:org.rogach.scallop.ScallopOption[A20],o21:org.rogach.scallop.ScallopOption[A21])(fn:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16], o17: ScallopOption[A17], o18: ScallopOption[A18], o19: ScallopOption[A19], o20: ScallopOption[A20])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/RunnableCommand.html#validate[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14],o15:org.rogach.scallop.ScallopOption[A15],o16:org.rogach.scallop.ScallopOption[A16],o17:org.rogach.scallop.ScallopOption[A17],o18:org.rogach.scallop.ScallopOption[A18],o19:org.rogach.scallop.ScallopOption[A19],o20:org.rogach.scallop.ScallopOption[A20])(fn:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16], o17: ScallopOption[A17], o18: ScallopOption[A18], o19: ScallopOption[A19])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/RunnableCommand.html#validate[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14],o15:org.rogach.scallop.ScallopOption[A15],o16:org.rogach.scallop.ScallopOption[A16],o17:org.rogach.scallop.ScallopOption[A17],o18:org.rogach.scallop.ScallopOption[A18],o19:org.rogach.scallop.ScallopOption[A19])(fn:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16], o17: ScallopOption[A17], o18: ScallopOption[A18])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/RunnableCommand.html#validate[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14],o15:org.rogach.scallop.ScallopOption[A15],o16:org.rogach.scallop.ScallopOption[A16],o17:org.rogach.scallop.ScallopOption[A17],o18:org.rogach.scallop.ScallopOption[A18])(fn:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16], o17: ScallopOption[A17])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/RunnableCommand.html#validate[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14],o15:org.rogach.scallop.ScallopOption[A15],o16:org.rogach.scallop.ScallopOption[A16],o17:org.rogach.scallop.ScallopOption[A17])(fn:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15], o16: ScallopOption[A16])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/RunnableCommand.html#validate[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14],o15:org.rogach.scallop.ScallopOption[A15],o16:org.rogach.scallop.ScallopOption[A16])(fn:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14], o15: ScallopOption[A15])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/RunnableCommand.html#validate[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14],o15:org.rogach.scallop.ScallopOption[A15])(fn:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13], o14: ScallopOption[A14])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/RunnableCommand.html#validate[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13],o14:org.rogach.scallop.ScallopOption[A14])(fn:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12], o13: ScallopOption[A13])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/RunnableCommand.html#validate[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12],o13:org.rogach.scallop.ScallopOption[A13])(fn:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11], o12: ScallopOption[A12])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/RunnableCommand.html#validate[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11],o12:org.rogach.scallop.ScallopOption[A12])(fn:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10], o11: ScallopOption[A11])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/RunnableCommand.html#validate[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10],o11:org.rogach.scallop.ScallopOption[A11])(fn:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9], o10: ScallopOption[A10])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/RunnableCommand.html#validate[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9],o10:org.rogach.scallop.ScallopOption[A10])(fn:(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8], o9: ScallopOption[A9])(fn: (A1, A2, A3, A4, A5, A6, A7, A8, A9) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/RunnableCommand.html#validate[A1,A2,A3,A4,A5,A6,A7,A8,A9](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8],o9:org.rogach.scallop.ScallopOption[A9])(fn:(A1,A2,A3,A4,A5,A6,A7,A8,A9)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7], o8: ScallopOption[A8])(fn: (A1, A2, A3, A4, A5, A6, A7, A8) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/RunnableCommand.html#validate[A1,A2,A3,A4,A5,A6,A7,A8](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7],o8:org.rogach.scallop.ScallopOption[A8])(fn:(A1,A2,A3,A4,A5,A6,A7,A8)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6], o7: ScallopOption[A7])(fn: (A1, A2, A3, A4, A5, A6, A7) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/RunnableCommand.html#validate[A1,A2,A3,A4,A5,A6,A7](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6],o7:org.rogach.scallop.ScallopOption[A7])(fn:(A1,A2,A3,A4,A5,A6,A7)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5], o6: ScallopOption[A6])(fn: (A1, A2, A3, A4, A5, A6) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/RunnableCommand.html#validate[A1,A2,A3,A4,A5,A6](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5],o6:org.rogach.scallop.ScallopOption[A6])(fn:(A1,A2,A3,A4,A5,A6)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4], o5: ScallopOption[A5])(fn: (A1, A2, A3, A4, A5) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/RunnableCommand.html#validate[A1,A2,A3,A4,A5](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4],o5:org.rogach.scallop.ScallopOption[A5])(fn:(A1,A2,A3,A4,A5)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3], o4: ScallopOption[A4])(fn: (A1, A2, A3, A4) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/RunnableCommand.html#validate[A1,A2,A3,A4](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3],o4:org.rogach.scallop.ScallopOption[A4])(fn:(A1,A2,A3,A4)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2], o3: ScallopOption[A3])(fn: (A1, A2, A3) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/RunnableCommand.html#validate[A1,A2,A3](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2],o3:org.rogach.scallop.ScallopOption[A3])(fn:(A1,A2,A3)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1], o2: ScallopOption[A2])(fn: (A1, A2) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/RunnableCommand.html#validate[A1,A2](o1:org.rogach.scallop.ScallopOption[A1],o2:org.rogach.scallop.ScallopOption[A2])(fn:(A1,A2)=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(o1: ScallopOption[A1])(fn: (A1) ⇒ Either[String, Unit]): Unit", "member" : "org.rogach.scallop.ScallopConfValidations.validate", "link" : "discount\/RunnableCommand.html#validate[A1](o1:org.rogach.scallop.ScallopOption[A1])(fn:A1=>Either[String,Unit]):Unit", "kind" : "def"}, {"label" : "validations", "tail" : ": List[() ⇒ Either[String, Unit]]", "member" : "org.rogach.scallop.ScallopConfValidations.validations", "link" : "discount\/RunnableCommand.html#validations:List[()=>Either[String,Unit]]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "discount\/RunnableCommand.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "discount\/RunnableCommand.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "discount\/RunnableCommand.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "discount\/RunnableCommand.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "discount\/RunnableCommand.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "discount\/RunnableCommand.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "discount\/RunnableCommand.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/RunnableCommand.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/RunnableCommand.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "discount\/RunnableCommand.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "discount\/RunnableCommand.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "discount\/RunnableCommand.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "discount\/RunnableCommand.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "discount\/RunnableCommand.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "discount\/RunnableCommand.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "discount\/RunnableCommand.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "discount\/RunnableCommand.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "discount\/RunnableCommand.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "discount\/RunnableCommand.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "run", "tail" : "(): Unit", "member" : "discount.RunnableCommand.run", "link" : "discount\/RunnableCommand.html#run():Unit", "kind" : "abstract def"}], "class" : "discount\/RunnableCommand.html", "kind" : "class"}]};